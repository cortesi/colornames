#[doc = r" A list of named colors"]
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Color {
    AcidGreen,
    AlgaeGreen,
    AliceBlue,
    AlienGray,
    AlienGreen,
    AloeVeraGreen,
    Amber,
    AntiqueBronze,
    AntiqueWhite,
    Aqua,
    AquaGreen,
    AquaSeafoamGreen,
    Aquamarine,
    AquamarineStone,
    ArmyBrown,
    ArmyGreen,
    AshGray,
    AshWhite,
    AvocadoGreen,
    AztechPurple,
    Azure,
    AzureBlue,
    BabyBlue,
    BabyPink,
    BakersBrown,
    BalloonBlue,
    BananaYellow,
    BarbiePink,
    BashfulPink,
    BasilGreen,
    BasketBallOrange,
    BattleshipGray,
    BeanRed,
    BeeYellow,
    Beer,
    BeetleGreen,
    Beige,
    Bisque,
    Black,
    BlackBean,
    BlackBlue,
    BlackCat,
    BlackCow,
    BlackEel,
    BlanchedAlmond,
    Blonde,
    BloodNight,
    BloodRed,
    BlossomPink,
    Blue,
    BlueAngel,
    BlueDiamond,
    BlueDress,
    BlueEyes,
    BlueGray,
    BlueGreen,
    BlueHosta,
    BlueIvy,
    BlueJay,
    BlueKoi,
    BlueLagoon,
    BlueLotus,
    BlueMagenta,
    BlueMossGreen,
    BlueOrchid,
    BlueRibbon,
    BlueTurquoise,
    BlueWhale,
    BlueZircon,
    BlueViolet,
    BlueberryBlue,
    Blurple,
    Blush,
    BlushPink,
    BlushRed,
    BoldYellow,
    BoneWhite,
    BottleGreen,
    Brass,
    BrightBlue,
    BrightCyan,
    BrightGold,
    BrightGrape,
    BrightGreen,
    BrightLilac,
    BrightMaroon,
    BrightNavyBlue,
    BrightNeonPink,
    BrightOrange,
    BrightPink,
    BrightPurple,
    BrightTeal,
    BrightTurquoise,
    BroccoliGreen,
    Bronze,
    BronzeGold,
    Brown,
    BrownBear,
    BrownRust,
    BrownSand,
    BrownSugar,
    BulletShell,
    Burgundy,
    BurlyWood,
    BurntPink,
    ButterflyBlue,
    CactusGreen,
    CadetBlue,
    CadillacPink,
    CamelBrown,
    CamouflageGreen,
    CanaryBlue,
    CanaryYellow,
    Cantaloupe,
    Caramel,
    CarbonGray,
    CarbonRed,
    CardboardBrown,
    CarnationPink,
    CarrotOrange,
    Celeste,
    ChameleonGreen,
    Champagne,
    Charcoal,
    CharcoalBlue,
    Chartreuse,
    CheeseOrange,
    CherryRed,
    Chestnut,
    ChestnutRed,
    ChilliPepper,
    Chocolate,
    ChocolateBrown,
    ChromeAluminum,
    ChromeGold,
    ChromeGreen,
    ChromePink,
    ChromeWhite,
    Cinnamon,
    CitronGreen,
    ClematisViolet,
    CloudyGray,
    CloverGreen,
    CobaltBlue,
    Coffee,
    ColdMetal,
    ColumbiaBlue,
    ConstructionConeOrange,
    CookieBrown,
    Copper,
    CopperRed,
    Coral,
    CoralBlue,
    CoralBrown,
    CoralPeach,
    CornYellow,
    CornflowerBlue,
    Cornsilk,
    CosmicLatte,
    Cotton,
    CottonCandy,
    Cranberry,
    Cream,
    CreamWhite,
    CreamyWhite,
    Crimson,
    CrimsonPurple,
    CrimsonRed,
    CrocusPurple,
    CrystalBlue,
    Cyan,
    CyanBlue,
    CyanOpaque,
    DarkAlmond,
    DarkBeige,
    DarkBisque,
    DarkBlonde,
    DarkBlueGray,
    DarkBlurple,
    DarkBronze,
    DarkBrown,
    DarkCarnationPink,
    DarkCoffee,
    DarkForestGreen,
    DarkGainsboro,
    DarkGold,
    DarkGrayishOlive,
    DarkGreenBlue,
    DarkHazelBrown,
    DarkHotPink,
    DarkLimeGreen,
    DarkMaroon,
    DarkMint,
    DarkMoccasin,
    DarkPink,
    DarkPurple,
    DarkRaspberry,
    DarkScarlet,
    DarkSienna,
    DarkSkyBlue,
    DarkSlate,
    DarkSteampunk,
    DarkTeal,
    DarkWhite,
    DarkYellow,
    DarkBlue,
    DarkCyan,
    DarkGoldenRod,
    DarkGray,
    DarkGreen,
    DarkGrey,
    DarkKhaki,
    DarkMagenta,
    DarkOliveGreen,
    DarkOrange,
    DarkOrchid,
    DarkRed,
    DarkSalmon,
    DarkSeaGreen,
    DarkSlateBlue,
    DarkSlateGray,
    DarkSlateGrey,
    DarkTurquoise,
    DarkViolet,
    DaySkyBlue,
    DeepAmber,
    DeepEmeraldGreen,
    DeepGreen,
    DeepMauve,
    DeepPeach,
    DeepPeriwinkle,
    DeepPurple,
    DeepRed,
    DeepRose,
    DeepSea,
    DeepSeaBlue,
    DeepSeaGreen,
    DeepTeal,
    DeepTurquoise,
    DeepYellow,
    DeepPink,
    DeepSkyBlue,
    DeerBrown,
    DenimBlue,
    DenimDarkBlue,
    DesertSand,
    DimGray,
    DimGrey,
    DimorphothecaMagenta,
    DinosaurGreen,
    DirtyWhite,
    DodgerBlue,
    DollarBillGreen,
    DonutPink,
    DragonGreen,
    DullGreenYellow,
    DullPurple,
    DullSeaGreen,
    DuskyPink,
    DustyPink,
    DustyRose,
    EarthBlue,
    EarthGreen,
    Ebony,
    EggShell,
    Eggplant,
    ElectricBlue,
    ElfGreen,
    Emerald,
    EmeraldGreen,
    EstorilBlue,
    FallForestGreen,
    FallLeafBrown,
    FernGreen,
    FerrariRed,
    FireEngineRed,
    FireBrick,
    FlamingoPink,
    FloralWhite,
    FluroOrange,
    ForestGreen,
    FrenchLilac,
    FrogGreen,
    Fuchsia,
    FuchsiaPink,
    Gainsboro,
    GarnetRed,
    GearSteelGray,
    GhostWhite,
    GingerBrown,
    GingerRed,
    GlacialBlueIce,
    Gold,
    GoldPink,
    GoldenBlonde,
    GoldenBrown,
    GoldenSilk,
    GoldenYellow,
    GoldenRod,
    Granite,
    Grape,
    Grapefruit,
    GrassGreen,
    Gray,
    GrayBrown,
    GrayCloud,
    GrayDolphin,
    GrayGoose,
    GrayGreen,
    GrayWolf,
    GrayishTurquoise,
    Green,
    GreenApple,
    GreenLeaves,
    GreenOnion,
    GreenPeas,
    GreenPepper,
    GreenSnake,
    GreenThumb,
    GreenYellow,
    GreenishBlue,
    Grey,
    GulfBlue,
    Gunmetal,
    GunmetalGray,
    HalfWhite,
    HalloweenOrange,
    HarvestGold,
    Hazel,
    HazelGreen,
    HeavenlyBlue,
    HeliotropePurple,
    HoneyDew,
    HotDeepPink,
    HotPink,
    HummingbirdGreen,
    HunterGreen,
    Iceberg,
    IguanaGreen,
    IndianSaffron,
    IndianRed,
    Indigo,
    Iridium,
    IrishGreen,
    IronGray,
    IsleOfManGreen,
    Ivory,
    Jade,
    JadeGreen,
    JasminePurple,
    JeansBlue,
    Jellyfish,
    JetGray,
    JungleGreen,
    KellyGreen,
    Khaki,
    KhakiBrown,
    KhakiGreen,
    KhakiRose,
    LapisBlue,
    LavaRed,
    Lavender,
    LavenderBlue,
    LavenderPinocchio,
    LavenderPurple,
    LavenderBlush,
    LawnGreen,
    LemonGreen,
    LemonYellow,
    LemonChiffon,
    LightAquamarine,
    LightBeige,
    LightBlack,
    LightBrown,
    LightCopper,
    LightDayBlue,
    LightFrenchBeige,
    LightGold,
    LightJade,
    LightMintGreen,
    LightOliveGreen,
    LightOrange,
    LightPurple,
    LightPurpleBlue,
    LightRed,
    LightRose,
    LightRoseGreen,
    LightSalmonRose,
    LightSlate,
    LightSlateBlue,
    LightSteelGray,
    LightTeal,
    LightWhite,
    LightBlue,
    LightCoral,
    LightCyan,
    LightGoldenRodYellow,
    LightGray,
    LightGreen,
    LightGrey,
    LightPink,
    LightSalmon,
    LightSeaGreen,
    LightSkyBlue,
    LightSlateGray,
    LightSlateGrey,
    LightSteelBlue,
    LightYellow,
    Lilac,
    Lime,
    LimeMintGreen,
    LimeGreen,
    Linen,
    LipstickPink,
    LotusGreen,
    LoveRed,
    LovelyPurple,
    MacaroniandCheese,
    MacawBlueGreen,
    Magenta,
    MagentaPink,
    MagicMint,
    Mahogany,
    MangoOrange,
    MarbleBlue,
    Maroon,
    MaroonRed,
    Mauve,
    MauveTaupe,
    MediumForestGreen,
    MediumTeal,
    MediumAquaMarine,
    MediumBlue,
    MediumOrchid,
    MediumPurple,
    MediumSeaGreen,
    MediumSlateBlue,
    MediumSpringGreen,
    MediumTurquoise,
    MediumVioletRed,
    Metal,
    MetallicBronze,
    MetallicGold,
    MetallicGreen,
    MetallicSilver,
    MiddayBlue,
    Midnight,
    MidnightPurple,
    MidnightBlue,
    MilitaryGreen,
    MilkChocolate,
    MilkWhite,
    MillenniumJade,
    Mint,
    MintGreen,
    MintCream,
    MistBlue,
    MistyRose,
    Moccasin,
    Mocha,
    MossGreen,
    Mustard,
    MustardYellow,
    NardoGray,
    NavajoWhite,
    Navy,
    NebulaGreen,
    NeonBlue,
    NeonGold,
    NeonGreen,
    NeonHotPink,
    NeonOrange,
    NeonPink,
    NeonPurple,
    NeonRed,
    NeonYellow,
    NeonYellowGreen,
    NewMidnightBlue,
    Night,
    NightBlue,
    NorthernLightsBlue,
    OakBrown,
    OceanBlue,
    OceanGreen,
    OffWhite,
    Oil,
    OldBurgundy,
    OldRose,
    OldLace,
    Olive,
    OliveGreen,
    OliveDrab,
    Orange,
    OrangeGold,
    OrangeSalmon,
    OrangeYellow,
    OrangeRed,
    Orchid,
    OrchidPurple,
    OrganicBrown,
    PaleBlueLily,
    PaleLilac,
    PalePink,
    PaleSilver,
    PaleGoldenRod,
    PaleGreen,
    PaleTurquoise,
    PaleVioletRed,
    PapayaOrange,
    PapayaWhip,
    Parchment,
    ParrotGreen,
    PastelBlue,
    PastelBrown,
    PastelGreen,
    PastelIndigo,
    PastelLightBlue,
    PastelOrange,
    PastelPink,
    PastelPurple,
    PastelRed,
    PastelRose,
    PastelViolet,
    PastelYellow,
    PeaGreen,
    Peach,
    PeachPink,
    PeachPuff,
    Pearl,
    PearlWhite,
    Periwinkle,
    PeriwinklePink,
    PeriwinklePurple,
    Peru,
    PetraGold,
    PigPink,
    PineGreen,
    Pink,
    PinkBrown,
    PinkBubbleGum,
    PinkCoral,
    PinkCupcake,
    PinkDaisy,
    PinkLemonade,
    PinkOrange,
    PinkPlum,
    PinkViolet,
    PistachioGreen,
    Platinum,
    PlatinumGray,
    PlatinumSilver,
    Plum,
    PlumPie,
    PlumPurple,
    PlumVelvet,
    PowderPink,
    PowderBlue,
    Puce,
    PullmanBrown,
    PumpkinOrange,
    PumpkinPie,
    Purple,
    PurpleAmethyst,
    PurpleDaffodil,
    PurpleDragon,
    PurpleFlower,
    PurpleHaze,
    PurpleIris,
    PurpleJam,
    PurpleLily,
    PurpleMaroon,
    PurpleMimosa,
    PurpleMonster,
    PurpleNavy,
    PurplePink,
    PurplePlum,
    PurpleSageBush,
    PurpleThistle,
    PurpleViolet,
    PurpleWhite,
    RacingGreen,
    Raspberry,
    RaspberryPurple,
    RatGray,
    RebeccaPurple,
    Red,
    RedBlood,
    RedBrown,
    RedDirt,
    RedFox,
    RedGold,
    RedMagenta,
    RedPink,
    RedWhite,
    RedWine,
    Rice,
    RichLilac,
    RobinEggBlue,
    RoguePink,
    RomanSilver,
    Rose,
    RoseDust,
    RoseGold,
    RosePink,
    RosePurple,
    RoseQuartz,
    RoseRed,
    Rosy,
    RosyFinch,
    RosyPink,
    RosyBrown,
    RoyalPink,
    RoyalBlue,
    RubberDuckyYellow,
    RubyRed,
    Rust,
    SaddleBrown,
    SafetyOrange,
    SafetyYellow,
    Saffron,
    SaffronRed,
    Sage,
    SageGreen,
    SaladGreen,
    Salmon,
    SalmonPink,
    SamcoBlue,
    Sand,
    Sandstone,
    SandyBrown,
    Sangria,
    SapphireBlue,
    ScarletRed,
    SchoolBusYellow,
    SeaBlue,
    SeaTurtleGreen,
    SeaGreen,
    SeaShell,
    SeafoamGreen,
    SeaweedGreen,
    Sedona,
    Sepia,
    SepiaBrown,
    ShamrockGreen,
    SheetMetal,
    ShockingOrange,
    Sienna,
    SilkBlue,
    Silver,
    SilverPink,
    SilverWhite,
    SkyBlueDress,
    SkyBlue,
    SlateBlueGray,
    SlateGraniteGray,
    SlateBlue,
    SlateGray,
    SlateGrey,
    SlimeGreen,
    SmokeyGray,
    Snow,
    SoftHazel,
    SoftIvory,
    SoftPink,
    SonicSilver,
    SpringGreen,
    StainlessSteelGray,
    Steampunk,
    SteelGray,
    SteelBlue,
    StoplightGoGreen,
    StormyGray,
    StrawberryRed,
    SunYellow,
    SunriseOrange,
    Tan,
    TanBrown,
    Tangerine,
    Taupe,
    TeaGreen,
    Teal,
    TealBlue,
    TealGreen,
    Thistle,
    TiffanyBlue,
    TigerOrange,
    Tomato,
    TomatoSauceRed,
    TronBlue,
    TulipPink,
    Turquoise,
    TurquoiseGreen,
    TyrianPurple,
    UnbleachedSilk,
    ValentineRed,
    VampireGray,
    Vanilla,
    VelvetMaroon,
    VenomGreen,
    Vermilion,
    VeryPeri,
    Viola,
    ViolaPurple,
    Violet,
    VioletRed,
    WarmPink,
    WarmWhite,
    Water,
    WatermelonPink,
    WesternCharcoal,
    Wheat,
    White,
    WhiteBlue,
    WhiteChocolate,
    WhiteGold,
    WhiteGray,
    WhiteIce,
    WhiteYellow,
    WhiteSmoke,
    WindowsBlue,
    WineRed,
    WisteriaPurple,
    Wood,
    Yellow,
    YellowGreenGrosbeak,
    YellowLawnGreen,
    YellowOrange,
    YellowGreen,
    ZombieGreen,
    Rgb(u8, u8, u8),
}
impl Color {
    #[doc = r" Convert a color name to a `Color` variant or parse as RGB hex code"]
    pub fn from_str(name: &str) -> Option<Self> {
        if name.starts_with('#') {
            let hex = &name[1..];
            let (r, g, b) = match hex.len() {
                6 => {
                    let r = u8::from_str_radix(&hex[0..2], 16).ok()?;
                    let g = u8::from_str_radix(&hex[2..4], 16).ok()?;
                    let b = u8::from_str_radix(&hex[4..6], 16).ok()?;
                    (r, g, b)
                }
                3 => {
                    let r = u8::from_str_radix(&hex[0..1].repeat(2), 16).ok()?;
                    let g = u8::from_str_radix(&hex[1..2].repeat(2), 16).ok()?;
                    let b = u8::from_str_radix(&hex[2..3].repeat(2), 16).ok()?;
                    (r, g, b)
                }
                _ => return None,
            };
            let hex = format!("#{:02X}{:02X}{:02X}", r, g, b);
            match hex.as_str() {
                x if x == "#B0BF1A" => Some(Color::AcidGreen),
                x if x == "#64E986" => Some(Color::AlgaeGreen),
                x if x == "#F0F8FF" => Some(Color::AliceBlue),
                x if x == "#736F6E" => Some(Color::AlienGray),
                x if x == "#6CC417" => Some(Color::AlienGreen),
                x if x == "#98F516" => Some(Color::AloeVeraGreen),
                x if x == "#FFBF00" => Some(Color::Amber),
                x if x == "#665D1E" => Some(Color::AntiqueBronze),
                x if x == "#FAEBD7" => Some(Color::AntiqueWhite),
                x if x == "#00FFFF" => Some(Color::Aqua),
                x if x == "#12E193" => Some(Color::AquaGreen),
                x if x == "#93E9BE" => Some(Color::AquaSeafoamGreen),
                x if x == "#7FFFD4" => Some(Color::Aquamarine),
                x if x == "#348781" => Some(Color::AquamarineStone),
                x if x == "#827B60" => Some(Color::ArmyBrown),
                x if x == "#4B5320" => Some(Color::ArmyGreen),
                x if x == "#666362" => Some(Color::AshGray),
                x if x == "#E9E4D4" => Some(Color::AshWhite),
                x if x == "#B2C248" => Some(Color::AvocadoGreen),
                x if x == "#893BFF" => Some(Color::AztechPurple),
                x if x == "#F0FFFF" => Some(Color::Azure),
                x if x == "#4863A0" => Some(Color::AzureBlue),
                x if x == "#95B9C7" => Some(Color::BabyBlue),
                x if x == "#FAAFBA" => Some(Color::BabyPink),
                x if x == "#5C3317" => Some(Color::BakersBrown),
                x if x == "#2B60DE" => Some(Color::BalloonBlue),
                x if x == "#F5E216" => Some(Color::BananaYellow),
                x if x == "#DA1884" => Some(Color::BarbiePink),
                x if x == "#C25283" => Some(Color::BashfulPink),
                x if x == "#829F82" => Some(Color::BasilGreen),
                x if x == "#F88158" => Some(Color::BasketBallOrange),
                x if x == "#848482" => Some(Color::BattleshipGray),
                x if x == "#F75D59" => Some(Color::BeanRed),
                x if x == "#E9AB17" => Some(Color::BeeYellow),
                x if x == "#FBB117" => Some(Color::Beer),
                x if x == "#4C787E" => Some(Color::BeetleGreen),
                x if x == "#F5F5DC" => Some(Color::Beige),
                x if x == "#FFE4C4" => Some(Color::Bisque),
                x if x == "#000000" => Some(Color::Black),
                x if x == "#3D0C02" => Some(Color::BlackBean),
                x if x == "#040720" => Some(Color::BlackBlue),
                x if x == "#413839" => Some(Color::BlackCat),
                x if x == "#4C4646" => Some(Color::BlackCow),
                x if x == "#463E3F" => Some(Color::BlackEel),
                x if x == "#FFEBCD" => Some(Color::BlanchedAlmond),
                x if x == "#FBF6D9" => Some(Color::Blonde),
                x if x == "#551606" => Some(Color::BloodNight),
                x if x == "#7E3517" => Some(Color::BloodRed),
                x if x == "#F9B7FF" => Some(Color::BlossomPink),
                x if x == "#0000FF" => Some(Color::Blue),
                x if x == "#B7CEEC" => Some(Color::BlueAngel),
                x if x == "#4EE2EC" => Some(Color::BlueDiamond),
                x if x == "#157DEC" => Some(Color::BlueDress),
                x if x == "#1569C7" => Some(Color::BlueEyes),
                x if x == "#98AFC7" => Some(Color::BlueGray),
                x if x == "#7BCCB5" => Some(Color::BlueGreen),
                x if x == "#77BFC7" => Some(Color::BlueHosta),
                x if x == "#3090C7" => Some(Color::BlueIvy),
                x if x == "#2B547E" => Some(Color::BlueJay),
                x if x == "#659EC7" => Some(Color::BlueKoi),
                x if x == "#8EEBEC" => Some(Color::BlueLagoon),
                x if x == "#6960EC" => Some(Color::BlueLotus),
                x if x == "#822EFF" => Some(Color::BlueMagenta),
                x if x == "#3C565B" => Some(Color::BlueMossGreen),
                x if x == "#1F45FC" => Some(Color::BlueOrchid),
                x if x == "#306EFF" => Some(Color::BlueRibbon),
                x if x == "#43C6DB" => Some(Color::BlueTurquoise),
                x if x == "#342D7E" => Some(Color::BlueWhale),
                x if x == "#57FEFF" => Some(Color::BlueZircon),
                x if x == "#8A2BE2" => Some(Color::BlueViolet),
                x if x == "#0041C2" => Some(Color::BlueberryBlue),
                x if x == "#5865F2" => Some(Color::Blurple),
                x if x == "#FFE6E8" => Some(Color::Blush),
                x if x == "#E6A9EC" => Some(Color::BlushPink),
                x if x == "#E56E94" => Some(Color::BlushRed),
                x if x == "#F9DB24" => Some(Color::BoldYellow),
                x if x == "#F9F6EE" => Some(Color::BoneWhite),
                x if x == "#006A4E" => Some(Color::BottleGreen),
                x if x == "#B5A642" => Some(Color::Brass),
                x if x == "#0909FF" => Some(Color::BrightBlue),
                x if x == "#0AFFFF" => Some(Color::BrightCyan),
                x if x == "#FDD017" => Some(Color::BrightGold),
                x if x == "#6F2DA8" => Some(Color::BrightGrape),
                x if x == "#66FF00" => Some(Color::BrightGreen),
                x if x == "#D891EF" => Some(Color::BrightLilac),
                x if x == "#C32148" => Some(Color::BrightMaroon),
                x if x == "#1974D2" => Some(Color::BrightNavyBlue),
                x if x == "#F433FF" => Some(Color::BrightNeonPink),
                x if x == "#FF5F1F" => Some(Color::BrightOrange),
                x if x == "#FF007F" => Some(Color::BrightPink),
                x if x == "#6A0DAD" => Some(Color::BrightPurple),
                x if x == "#01F9C6" => Some(Color::BrightTeal),
                x if x == "#16E2F5" => Some(Color::BrightTurquoise),
                x if x == "#026C3D" => Some(Color::BroccoliGreen),
                x if x == "#CD7F32" => Some(Color::Bronze),
                x if x == "#C9AE5D" => Some(Color::BronzeGold),
                x if x == "#A52A2A" => Some(Color::Brown),
                x if x == "#835C3B" => Some(Color::BrownBear),
                x if x == "#A55D35" => Some(Color::BrownRust),
                x if x == "#EE9A4D" => Some(Color::BrownSand),
                x if x == "#E2A76F" => Some(Color::BrownSugar),
                x if x == "#AF9B60" => Some(Color::BulletShell),
                x if x == "#8C001A" => Some(Color::Burgundy),
                x if x == "#DEB887" => Some(Color::BurlyWood),
                x if x == "#C12267" => Some(Color::BurntPink),
                x if x == "#38ACEC" => Some(Color::ButterflyBlue),
                x if x == "#227442" => Some(Color::CactusGreen),
                x if x == "#5F9EA0" => Some(Color::CadetBlue),
                x if x == "#E38AAE" => Some(Color::CadillacPink),
                x if x == "#C19A6B" => Some(Color::CamelBrown),
                x if x == "#78866B" => Some(Color::CamouflageGreen),
                x if x == "#2916F5" => Some(Color::CanaryBlue),
                x if x == "#FFEF00" => Some(Color::CanaryYellow),
                x if x == "#FFA62F" => Some(Color::Cantaloupe),
                x if x == "#C68E17" => Some(Color::Caramel),
                x if x == "#625D5D" => Some(Color::CarbonGray),
                x if x == "#A70D2A" => Some(Color::CarbonRed),
                x if x == "#EDDA74" => Some(Color::CardboardBrown),
                x if x == "#F778A1" => Some(Color::CarnationPink),
                x if x == "#F88017" => Some(Color::CarrotOrange),
                x if x == "#50EBEC" => Some(Color::Celeste),
                x if x == "#BDF516" => Some(Color::ChameleonGreen),
                x if x == "#F7E7CE" => Some(Color::Champagne),
                x if x == "#34282C" => Some(Color::Charcoal),
                x if x == "#36454F" => Some(Color::CharcoalBlue),
                x if x == "#7FFF00" => Some(Color::Chartreuse),
                x if x == "#FFA600" => Some(Color::CheeseOrange),
                x if x == "#C24641" => Some(Color::CherryRed),
                x if x == "#954535" => Some(Color::Chestnut),
                x if x == "#C34A2C" => Some(Color::ChestnutRed),
                x if x == "#C11B17" => Some(Color::ChilliPepper),
                x if x == "#D2691E" => Some(Color::Chocolate),
                x if x == "#3F000F" => Some(Color::ChocolateBrown),
                x if x == "#A8A9AD" => Some(Color::ChromeAluminum),
                x if x == "#FFCE44" => Some(Color::ChromeGold),
                x if x == "#1AA260" => Some(Color::ChromeGreen),
                x if x == "#FF33AA" => Some(Color::ChromePink),
                x if x == "#E8F1D4" => Some(Color::ChromeWhite),
                x if x == "#C58917" => Some(Color::Cinnamon),
                x if x == "#8FB31D" => Some(Color::CitronGreen),
                x if x == "#842DCE" => Some(Color::ClematisViolet),
                x if x == "#6D6968" => Some(Color::CloudyGray),
                x if x == "#3EA055" => Some(Color::CloverGreen),
                x if x == "#0020C2" => Some(Color::CobaltBlue),
                x if x == "#6F4E37" => Some(Color::Coffee),
                x if x == "#9B9A96" => Some(Color::ColdMetal),
                x if x == "#87AFC7" => Some(Color::ColumbiaBlue),
                x if x == "#F87431" => Some(Color::ConstructionConeOrange),
                x if x == "#C7A317" => Some(Color::CookieBrown),
                x if x == "#B87333" => Some(Color::Copper),
                x if x == "#CB6D51" => Some(Color::CopperRed),
                x if x == "#FF7F50" => Some(Color::Coral),
                x if x == "#AFDCEC" => Some(Color::CoralBlue),
                x if x == "#9E4638" => Some(Color::CoralBrown),
                x if x == "#FBD5AB" => Some(Color::CoralPeach),
                x if x == "#FFF380" => Some(Color::CornYellow),
                x if x == "#6495ED" => Some(Color::CornflowerBlue),
                x if x == "#FFF8DC" => Some(Color::Cornsilk),
                x if x == "#FFF8E7" => Some(Color::CosmicLatte),
                x if x == "#FBFBF9" => Some(Color::Cotton),
                x if x == "#FCDFFF" => Some(Color::CottonCandy),
                x if x == "#9F000F" => Some(Color::Cranberry),
                x if x == "#FFFFCC" => Some(Color::Cream),
                x if x == "#FFFDD0" => Some(Color::CreamWhite),
                x if x == "#F0E9D6" => Some(Color::CreamyWhite),
                x if x == "#DC143C" => Some(Color::Crimson),
                x if x == "#E238EC" => Some(Color::CrimsonPurple),
                x if x == "#990000" => Some(Color::CrimsonRed),
                x if x == "#9172EC" => Some(Color::CrocusPurple),
                x if x == "#5CB3FF" => Some(Color::CrystalBlue),
                x if x == "#00FFFF" => Some(Color::Cyan),
                x if x == "#14A3C7" => Some(Color::CyanBlue),
                x if x == "#92C7C7" => Some(Color::CyanOpaque),
                x if x == "#AB784E" => Some(Color::DarkAlmond),
                x if x == "#9F8C76" => Some(Color::DarkBeige),
                x if x == "#B86500" => Some(Color::DarkBisque),
                x if x == "#F0E2B6" => Some(Color::DarkBlonde),
                x if x == "#29465B" => Some(Color::DarkBlueGray),
                x if x == "#5539CC" => Some(Color::DarkBlurple),
                x if x == "#804A00" => Some(Color::DarkBronze),
                x if x == "#654321" => Some(Color::DarkBrown),
                x if x == "#C12283" => Some(Color::DarkCarnationPink),
                x if x == "#3B2F2F" => Some(Color::DarkCoffee),
                x if x == "#254117" => Some(Color::DarkForestGreen),
                x if x == "#8C8C8C" => Some(Color::DarkGainsboro),
                x if x == "#AA6C39" => Some(Color::DarkGold),
                x if x == "#4A412A" => Some(Color::DarkGrayishOlive),
                x if x == "#1F6357" => Some(Color::DarkGreenBlue),
                x if x == "#473810" => Some(Color::DarkHazelBrown),
                x if x == "#F660AB" => Some(Color::DarkHotPink),
                x if x == "#41A317" => Some(Color::DarkLimeGreen),
                x if x == "#2F0909" => Some(Color::DarkMaroon),
                x if x == "#31906E" => Some(Color::DarkMint),
                x if x == "#827839" => Some(Color::DarkMoccasin),
                x if x == "#E75480" => Some(Color::DarkPink),
                x if x == "#4B0150" => Some(Color::DarkPurple),
                x if x == "#872657" => Some(Color::DarkRaspberry),
                x if x == "#560319" => Some(Color::DarkScarlet),
                x if x == "#8A4117" => Some(Color::DarkSienna),
                x if x == "#0059FF" => Some(Color::DarkSkyBlue),
                x if x == "#2B3856" => Some(Color::DarkSlate),
                x if x == "#4D4D4F" => Some(Color::DarkSteampunk),
                x if x == "#045D5D" => Some(Color::DarkTeal),
                x if x == "#E1D9D1" => Some(Color::DarkWhite),
                x if x == "#8B8000" => Some(Color::DarkYellow),
                x if x == "#00008B" => Some(Color::DarkBlue),
                x if x == "#008B8B" => Some(Color::DarkCyan),
                x if x == "#B8860B" => Some(Color::DarkGoldenRod),
                x if x == "#A9A9A9" => Some(Color::DarkGray),
                x if x == "#006400" => Some(Color::DarkGreen),
                x if x == "#A9A9A9" => Some(Color::DarkGrey),
                x if x == "#BDB76B" => Some(Color::DarkKhaki),
                x if x == "#8B008B" => Some(Color::DarkMagenta),
                x if x == "#556B2F" => Some(Color::DarkOliveGreen),
                x if x == "#FF8C00" => Some(Color::DarkOrange),
                x if x == "#9932CC" => Some(Color::DarkOrchid),
                x if x == "#8B0000" => Some(Color::DarkRed),
                x if x == "#E9967A" => Some(Color::DarkSalmon),
                x if x == "#8FBC8F" => Some(Color::DarkSeaGreen),
                x if x == "#483D8B" => Some(Color::DarkSlateBlue),
                x if x == "#25383C" => Some(Color::DarkSlateGray),
                x if x == "#25383C" => Some(Color::DarkSlateGrey),
                x if x == "#00CED1" => Some(Color::DarkTurquoise),
                x if x == "#9400D3" => Some(Color::DarkViolet),
                x if x == "#82CAFF" => Some(Color::DaySkyBlue),
                x if x == "#A05544" => Some(Color::DeepAmber),
                x if x == "#046307" => Some(Color::DeepEmeraldGreen),
                x if x == "#056608" => Some(Color::DeepGreen),
                x if x == "#DF73D4" => Some(Color::DeepMauve),
                x if x == "#FFCBA4" => Some(Color::DeepPeach),
                x if x == "#5453A6" => Some(Color::DeepPeriwinkle),
                x if x == "#36013F" => Some(Color::DeepPurple),
                x if x == "#800517" => Some(Color::DeepRed),
                x if x == "#FBBBB9" => Some(Color::DeepRose),
                x if x == "#3B9C9C" => Some(Color::DeepSea),
                x if x == "#123456" => Some(Color::DeepSeaBlue),
                x if x == "#306754" => Some(Color::DeepSeaGreen),
                x if x == "#033E3E" => Some(Color::DeepTeal),
                x if x == "#48CCCD" => Some(Color::DeepTurquoise),
                x if x == "#F6BE00" => Some(Color::DeepYellow),
                x if x == "#FF1493" => Some(Color::DeepPink),
                x if x == "#00BFFF" => Some(Color::DeepSkyBlue),
                x if x == "#E6BF83" => Some(Color::DeerBrown),
                x if x == "#79BAEC" => Some(Color::DenimBlue),
                x if x == "#151B8D" => Some(Color::DenimDarkBlue),
                x if x == "#EDC9AF" => Some(Color::DesertSand),
                x if x == "#696969" => Some(Color::DimGray),
                x if x == "#696969" => Some(Color::DimGrey),
                x if x == "#E3319D" => Some(Color::DimorphothecaMagenta),
                x if x == "#73A16C" => Some(Color::DinosaurGreen),
                x if x == "#E8E4C9" => Some(Color::DirtyWhite),
                x if x == "#1E90FF" => Some(Color::DodgerBlue),
                x if x == "#85BB65" => Some(Color::DollarBillGreen),
                x if x == "#FAAFBE" => Some(Color::DonutPink),
                x if x == "#6AFB92" => Some(Color::DragonGreen),
                x if x == "#B1FB17" => Some(Color::DullGreenYellow),
                x if x == "#7F525D" => Some(Color::DullPurple),
                x if x == "#4E8975" => Some(Color::DullSeaGreen),
                x if x == "#CC7A8B" => Some(Color::DuskyPink),
                x if x == "#D58A94" => Some(Color::DustyPink),
                x if x == "#C9A9A6" => Some(Color::DustyRose),
                x if x == "#0000A5" => Some(Color::EarthBlue),
                x if x == "#34A56F" => Some(Color::EarthGreen),
                x if x == "#555D50" => Some(Color::Ebony),
                x if x == "#FFF9E3" => Some(Color::EggShell),
                x if x == "#614051" => Some(Color::Eggplant),
                x if x == "#9AFEFF" => Some(Color::ElectricBlue),
                x if x == "#1B8A6B" => Some(Color::ElfGreen),
                x if x == "#50C878" => Some(Color::Emerald),
                x if x == "#5FFB17" => Some(Color::EmeraldGreen),
                x if x == "#2F539B" => Some(Color::EstorilBlue),
                x if x == "#4E9258" => Some(Color::FallForestGreen),
                x if x == "#C8B560" => Some(Color::FallLeafBrown),
                x if x == "#667C26" => Some(Color::FernGreen),
                x if x == "#F70D1A" => Some(Color::FerrariRed),
                x if x == "#F62817" => Some(Color::FireEngineRed),
                x if x == "#B22222" => Some(Color::FireBrick),
                x if x == "#F9A7B0" => Some(Color::FlamingoPink),
                x if x == "#FFFAF0" => Some(Color::FloralWhite),
                x if x == "#FE632A" => Some(Color::FluroOrange),
                x if x == "#228B22" => Some(Color::ForestGreen),
                x if x == "#86608E" => Some(Color::FrenchLilac),
                x if x == "#99C68E" => Some(Color::FrogGreen),
                x if x == "#FF00FF" => Some(Color::Fuchsia),
                x if x == "#FF77FF" => Some(Color::FuchsiaPink),
                x if x == "#DCDCDC" => Some(Color::Gainsboro),
                x if x == "#733635" => Some(Color::GarnetRed),
                x if x == "#C0C6C7" => Some(Color::GearSteelGray),
                x if x == "#F8F8FF" => Some(Color::GhostWhite),
                x if x == "#C9BE62" => Some(Color::GingerBrown),
                x if x == "#B83C08" => Some(Color::GingerRed),
                x if x == "#368BC1" => Some(Color::GlacialBlueIce),
                x if x == "#FFD700" => Some(Color::Gold),
                x if x == "#E6C7C2" => Some(Color::GoldPink),
                x if x == "#FBE7A1" => Some(Color::GoldenBlonde),
                x if x == "#EAC117" => Some(Color::GoldenBrown),
                x if x == "#F3E3C3" => Some(Color::GoldenSilk),
                x if x == "#FFDF00" => Some(Color::GoldenYellow),
                x if x == "#DAA520" => Some(Color::GoldenRod),
                x if x == "#837E7C" => Some(Color::Granite),
                x if x == "#5E5A80" => Some(Color::Grape),
                x if x == "#DC381F" => Some(Color::Grapefruit),
                x if x == "#3F9B0B" => Some(Color::GrassGreen),
                x if x == "#808080" => Some(Color::Gray),
                x if x == "#3D3635" => Some(Color::GrayBrown),
                x if x == "#B6B6B4" => Some(Color::GrayCloud),
                x if x == "#5C5858" => Some(Color::GrayDolphin),
                x if x == "#D1D0CE" => Some(Color::GrayGoose),
                x if x == "#A2AD9C" => Some(Color::GrayGreen),
                x if x == "#504A4B" => Some(Color::GrayWolf),
                x if x == "#5E7D7E" => Some(Color::GrayishTurquoise),
                x if x == "#008000" => Some(Color::Green),
                x if x == "#4CC417" => Some(Color::GreenApple),
                x if x == "#3A5F0B" => Some(Color::GreenLeaves),
                x if x == "#6AA121" => Some(Color::GreenOnion),
                x if x == "#89C35C" => Some(Color::GreenPeas),
                x if x == "#4AA02C" => Some(Color::GreenPepper),
                x if x == "#6CBB3C" => Some(Color::GreenSnake),
                x if x == "#B5EAAA" => Some(Color::GreenThumb),
                x if x == "#ADFF2F" => Some(Color::GreenYellow),
                x if x == "#307D7E" => Some(Color::GreenishBlue),
                x if x == "#808080" => Some(Color::Grey),
                x if x == "#C9DFEC" => Some(Color::GulfBlue),
                x if x == "#2C3539" => Some(Color::Gunmetal),
                x if x == "#8D918D" => Some(Color::GunmetalGray),
                x if x == "#FFFEFA" => Some(Color::HalfWhite),
                x if x == "#E66C2C" => Some(Color::HalloweenOrange),
                x if x == "#EDE275" => Some(Color::HarvestGold),
                x if x == "#8E7618" => Some(Color::Hazel),
                x if x == "#617C58" => Some(Color::HazelGreen),
                x if x == "#C6DEFF" => Some(Color::HeavenlyBlue),
                x if x == "#D462FF" => Some(Color::HeliotropePurple),
                x if x == "#F0FFF0" => Some(Color::HoneyDew),
                x if x == "#F52887" => Some(Color::HotDeepPink),
                x if x == "#FF69B4" => Some(Color::HotPink),
                x if x == "#7FE817" => Some(Color::HummingbirdGreen),
                x if x == "#355E3B" => Some(Color::HunterGreen),
                x if x == "#56A5EC" => Some(Color::Iceberg),
                x if x == "#9CB071" => Some(Color::IguanaGreen),
                x if x == "#FF7722" => Some(Color::IndianSaffron),
                x if x == "#CD5C5C" => Some(Color::IndianRed),
                x if x == "#4B0082" => Some(Color::Indigo),
                x if x == "#3D3C3A" => Some(Color::Iridium),
                x if x == "#08A04B" => Some(Color::IrishGreen),
                x if x == "#52595D" => Some(Color::IronGray),
                x if x == "#22CE83" => Some(Color::IsleOfManGreen),
                x if x == "#FFFFF0" => Some(Color::Ivory),
                x if x == "#00A36C" => Some(Color::Jade),
                x if x == "#5EFB6E" => Some(Color::JadeGreen),
                x if x == "#A23BEC" => Some(Color::JasminePurple),
                x if x == "#A0CFEC" => Some(Color::JeansBlue),
                x if x == "#46C7C7" => Some(Color::Jellyfish),
                x if x == "#616D7E" => Some(Color::JetGray),
                x if x == "#347C2C" => Some(Color::JungleGreen),
                x if x == "#4CC552" => Some(Color::KellyGreen),
                x if x == "#F0E68C" => Some(Color::Khaki),
                x if x == "#906E3E" => Some(Color::KhakiBrown),
                x if x == "#8A865D" => Some(Color::KhakiGreen),
                x if x == "#C5908E" => Some(Color::KhakiRose),
                x if x == "#15317E" => Some(Color::LapisBlue),
                x if x == "#E42217" => Some(Color::LavaRed),
                x if x == "#E6E6FA" => Some(Color::Lavender),
                x if x == "#E3E4FA" => Some(Color::LavenderBlue),
                x if x == "#EBDDE2" => Some(Color::LavenderPinocchio),
                x if x == "#967BB6" => Some(Color::LavenderPurple),
                x if x == "#FFF0F5" => Some(Color::LavenderBlush),
                x if x == "#7CFC00" => Some(Color::LawnGreen),
                x if x == "#ADF802" => Some(Color::LemonGreen),
                x if x == "#FEF250" => Some(Color::LemonYellow),
                x if x == "#FFFACD" => Some(Color::LemonChiffon),
                x if x == "#93FFE8" => Some(Color::LightAquamarine),
                x if x == "#FFF0DB" => Some(Color::LightBeige),
                x if x == "#454545" => Some(Color::LightBlack),
                x if x == "#B5651D" => Some(Color::LightBrown),
                x if x == "#DA8A67" => Some(Color::LightCopper),
                x if x == "#ADDFFF" => Some(Color::LightDayBlue),
                x if x == "#C8AD7F" => Some(Color::LightFrenchBeige),
                x if x == "#F1E5AC" => Some(Color::LightGold),
                x if x == "#C3FDB8" => Some(Color::LightJade),
                x if x == "#C2E5D3" => Some(Color::LightMintGreen),
                x if x == "#B8BC86" => Some(Color::LightOliveGreen),
                x if x == "#FED8B1" => Some(Color::LightOrange),
                x if x == "#8467D7" => Some(Color::LightPurple),
                x if x == "#728FCE" => Some(Color::LightPurpleBlue),
                x if x == "#FFCCCB" => Some(Color::LightRed),
                x if x == "#FBCFCD" => Some(Color::LightRose),
                x if x == "#DBF9DB" => Some(Color::LightRoseGreen),
                x if x == "#F9966B" => Some(Color::LightSalmonRose),
                x if x == "#CCFFFF" => Some(Color::LightSlate),
                x if x == "#736AFF" => Some(Color::LightSlateBlue),
                x if x == "#E0E5E5" => Some(Color::LightSteelGray),
                x if x == "#B3D9D9" => Some(Color::LightTeal),
                x if x == "#FFFFF7" => Some(Color::LightWhite),
                x if x == "#ADD8E6" => Some(Color::LightBlue),
                x if x == "#F08080" => Some(Color::LightCoral),
                x if x == "#E0FFFF" => Some(Color::LightCyan),
                x if x == "#FAFAD2" => Some(Color::LightGoldenRodYellow),
                x if x == "#D3D3D3" => Some(Color::LightGray),
                x if x == "#90EE90" => Some(Color::LightGreen),
                x if x == "#D3D3D3" => Some(Color::LightGrey),
                x if x == "#FFB6C1" => Some(Color::LightPink),
                x if x == "#FFA07A" => Some(Color::LightSalmon),
                x if x == "#20B2AA" => Some(Color::LightSeaGreen),
                x if x == "#87CEFA" => Some(Color::LightSkyBlue),
                x if x == "#778899" => Some(Color::LightSlateGray),
                x if x == "#778899" => Some(Color::LightSlateGrey),
                x if x == "#B0CFDE" => Some(Color::LightSteelBlue),
                x if x == "#FFFFE0" => Some(Color::LightYellow),
                x if x == "#C8A2C8" => Some(Color::Lilac),
                x if x == "#00FF00" => Some(Color::Lime),
                x if x == "#36F57F" => Some(Color::LimeMintGreen),
                x if x == "#32CD32" => Some(Color::LimeGreen),
                x if x == "#FAF0E6" => Some(Color::Linen),
                x if x == "#C48793" => Some(Color::LipstickPink),
                x if x == "#004225" => Some(Color::LotusGreen),
                x if x == "#E41B17" => Some(Color::LoveRed),
                x if x == "#7F38EC" => Some(Color::LovelyPurple),
                x if x == "#F2BB66" => Some(Color::MacaroniandCheese),
                x if x == "#43BFC7" => Some(Color::MacawBlueGreen),
                x if x == "#FF00FF" => Some(Color::Magenta),
                x if x == "#CC338B" => Some(Color::MagentaPink),
                x if x == "#AAF0D1" => Some(Color::MagicMint),
                x if x == "#C04000" => Some(Color::Mahogany),
                x if x == "#FF8040" => Some(Color::MangoOrange),
                x if x == "#566D7E" => Some(Color::MarbleBlue),
                x if x == "#800000" => Some(Color::Maroon),
                x if x == "#8F0B0B" => Some(Color::MaroonRed),
                x if x == "#E0B0FF" => Some(Color::Mauve),
                x if x == "#915F6D" => Some(Color::MauveTaupe),
                x if x == "#347235" => Some(Color::MediumForestGreen),
                x if x == "#045F5F" => Some(Color::MediumTeal),
                x if x == "#66CDAA" => Some(Color::MediumAquaMarine),
                x if x == "#0000CD" => Some(Color::MediumBlue),
                x if x == "#BA55D3" => Some(Color::MediumOrchid),
                x if x == "#9370DB" => Some(Color::MediumPurple),
                x if x == "#3CB371" => Some(Color::MediumSeaGreen),
                x if x == "#7B68EE" => Some(Color::MediumSlateBlue),
                x if x == "#00FA9A" => Some(Color::MediumSpringGreen),
                x if x == "#48D1CC" => Some(Color::MediumTurquoise),
                x if x == "#C71585" => Some(Color::MediumVioletRed),
                x if x == "#B6B6B6" => Some(Color::Metal),
                x if x == "#A97142" => Some(Color::MetallicBronze),
                x if x == "#D4AF37" => Some(Color::MetallicGold),
                x if x == "#7C9D8E" => Some(Color::MetallicGreen),
                x if x == "#BCC6CC" => Some(Color::MetallicSilver),
                x if x == "#3BB9FF" => Some(Color::MiddayBlue),
                x if x == "#2B1B17" => Some(Color::Midnight),
                x if x == "#2E1A47" => Some(Color::MidnightPurple),
                x if x == "#191970" => Some(Color::MidnightBlue),
                x if x == "#4E5B31" => Some(Color::MilitaryGreen),
                x if x == "#513B1C" => Some(Color::MilkChocolate),
                x if x == "#FEFCFF" => Some(Color::MilkWhite),
                x if x == "#93917C" => Some(Color::MillenniumJade),
                x if x == "#3EB489" => Some(Color::Mint),
                x if x == "#98FF98" => Some(Color::MintGreen),
                x if x == "#F5FFFA" => Some(Color::MintCream),
                x if x == "#646D7E" => Some(Color::MistBlue),
                x if x == "#FFE4E1" => Some(Color::MistyRose),
                x if x == "#FFE4B5" => Some(Color::Moccasin),
                x if x == "#493D26" => Some(Color::Mocha),
                x if x == "#8A9A5B" => Some(Color::MossGreen),
                x if x == "#E1AD01" => Some(Color::Mustard),
                x if x == "#FFDB58" => Some(Color::MustardYellow),
                x if x == "#686A6C" => Some(Color::NardoGray),
                x if x == "#FFDEAD" => Some(Color::NavajoWhite),
                x if x == "#000080" => Some(Color::Navy),
                x if x == "#59E817" => Some(Color::NebulaGreen),
                x if x == "#1589FF" => Some(Color::NeonBlue),
                x if x == "#FDBD01" => Some(Color::NeonGold),
                x if x == "#16F529" => Some(Color::NeonGreen),
                x if x == "#FD349C" => Some(Color::NeonHotPink),
                x if x == "#FF6700" => Some(Color::NeonOrange),
                x if x == "#F535AA" => Some(Color::NeonPink),
                x if x == "#9D00FF" => Some(Color::NeonPurple),
                x if x == "#FD1C03" => Some(Color::NeonRed),
                x if x == "#FFFF33" => Some(Color::NeonYellow),
                x if x == "#DAEE01" => Some(Color::NeonYellowGreen),
                x if x == "#0000A0" => Some(Color::NewMidnightBlue),
                x if x == "#0C090A" => Some(Color::Night),
                x if x == "#151B54" => Some(Color::NightBlue),
                x if x == "#78C7C7" => Some(Color::NorthernLightsBlue),
                x if x == "#806517" => Some(Color::OakBrown),
                x if x == "#2B65EC" => Some(Color::OceanBlue),
                x if x == "#00FF80" => Some(Color::OceanGreen),
                x if x == "#F8F0E3" => Some(Color::OffWhite),
                x if x == "#3B3131" => Some(Color::Oil),
                x if x == "#43302E" => Some(Color::OldBurgundy),
                x if x == "#C08081" => Some(Color::OldRose),
                x if x == "#FEF0E3" => Some(Color::OldLace),
                x if x == "#808000" => Some(Color::Olive),
                x if x == "#BAB86C" => Some(Color::OliveGreen),
                x if x == "#6B8E23" => Some(Color::OliveDrab),
                x if x == "#FFA500" => Some(Color::Orange),
                x if x == "#D4A017" => Some(Color::OrangeGold),
                x if x == "#C47451" => Some(Color::OrangeSalmon),
                x if x == "#FFAE42" => Some(Color::OrangeYellow),
                x if x == "#FF4500" => Some(Color::OrangeRed),
                x if x == "#DA70D6" => Some(Color::Orchid),
                x if x == "#B048B5" => Some(Color::OrchidPurple),
                x if x == "#E3F9A6" => Some(Color::OrganicBrown),
                x if x == "#CFECEC" => Some(Color::PaleBlueLily),
                x if x == "#DCD0FF" => Some(Color::PaleLilac),
                x if x == "#F2D4D7" => Some(Color::PalePink),
                x if x == "#C9C0BB" => Some(Color::PaleSilver),
                x if x == "#EEE8AA" => Some(Color::PaleGoldenRod),
                x if x == "#98FB98" => Some(Color::PaleGreen),
                x if x == "#AFEEEE" => Some(Color::PaleTurquoise),
                x if x == "#DB7093" => Some(Color::PaleVioletRed),
                x if x == "#E56717" => Some(Color::PapayaOrange),
                x if x == "#FFEFD5" => Some(Color::PapayaWhip),
                x if x == "#FFFFC2" => Some(Color::Parchment),
                x if x == "#12AD2B" => Some(Color::ParrotGreen),
                x if x == "#B4CFEC" => Some(Color::PastelBlue),
                x if x == "#B1907F" => Some(Color::PastelBrown),
                x if x == "#77DD77" => Some(Color::PastelGreen),
                x if x == "#8686AF" => Some(Color::PastelIndigo),
                x if x == "#D5D6EA" => Some(Color::PastelLightBlue),
                x if x == "#F8B88B" => Some(Color::PastelOrange),
                x if x == "#FEA3AA" => Some(Color::PastelPink),
                x if x == "#F2A2E8" => Some(Color::PastelPurple),
                x if x == "#F67280" => Some(Color::PastelRed),
                x if x == "#E5788F" => Some(Color::PastelRose),
                x if x == "#D291BC" => Some(Color::PastelViolet),
                x if x == "#FAF884" => Some(Color::PastelYellow),
                x if x == "#52D017" => Some(Color::PeaGreen),
                x if x == "#FFE5B4" => Some(Color::Peach),
                x if x == "#F98B88" => Some(Color::PeachPink),
                x if x == "#FFDAB9" => Some(Color::PeachPuff),
                x if x == "#FDEEF4" => Some(Color::Pearl),
                x if x == "#F8F6F0" => Some(Color::PearlWhite),
                x if x == "#CCCCFF" => Some(Color::Periwinkle),
                x if x == "#E9CFEC" => Some(Color::PeriwinklePink),
                x if x == "#7575CF" => Some(Color::PeriwinklePurple),
                x if x == "#CD853F" => Some(Color::Peru),
                x if x == "#B76734" => Some(Color::PetraGold),
                x if x == "#FDD7E4" => Some(Color::PigPink),
                x if x == "#387C44" => Some(Color::PineGreen),
                x if x == "#FFC0CB" => Some(Color::Pink),
                x if x == "#C48189" => Some(Color::PinkBrown),
                x if x == "#FFDFDD" => Some(Color::PinkBubbleGum),
                x if x == "#E77471" => Some(Color::PinkCoral),
                x if x == "#E45E9D" => Some(Color::PinkCupcake),
                x if x == "#E799A3" => Some(Color::PinkDaisy),
                x if x == "#E4287C" => Some(Color::PinkLemonade),
                x if x == "#F89880" => Some(Color::PinkOrange),
                x if x == "#B93B8F" => Some(Color::PinkPlum),
                x if x == "#CA226B" => Some(Color::PinkViolet),
                x if x == "#9DC209" => Some(Color::PistachioGreen),
                x if x == "#E5E4E2" => Some(Color::Platinum),
                x if x == "#797979" => Some(Color::PlatinumGray),
                x if x == "#CECECE" => Some(Color::PlatinumSilver),
                x if x == "#DDA0DD" => Some(Color::Plum),
                x if x == "#7D0541" => Some(Color::PlumPie),
                x if x == "#583759" => Some(Color::PlumPurple),
                x if x == "#7D0552" => Some(Color::PlumVelvet),
                x if x == "#FFB2D0" => Some(Color::PowderPink),
                x if x == "#B0E0E6" => Some(Color::PowderBlue),
                x if x == "#7F5A58" => Some(Color::Puce),
                x if x == "#644117" => Some(Color::PullmanBrown),
                x if x == "#F87217" => Some(Color::PumpkinOrange),
                x if x == "#CA762B" => Some(Color::PumpkinPie),
                x if x == "#800080" => Some(Color::Purple),
                x if x == "#6C2DC7" => Some(Color::PurpleAmethyst),
                x if x == "#B041FF" => Some(Color::PurpleDaffodil),
                x if x == "#C38EC7" => Some(Color::PurpleDragon),
                x if x == "#A74AC7" => Some(Color::PurpleFlower),
                x if x == "#4E387E" => Some(Color::PurpleHaze),
                x if x == "#571B7E" => Some(Color::PurpleIris),
                x if x == "#6A287E" => Some(Color::PurpleJam),
                x if x == "#550A35" => Some(Color::PurpleLily),
                x if x == "#810541" => Some(Color::PurpleMaroon),
                x if x == "#9E7BFF" => Some(Color::PurpleMimosa),
                x if x == "#461B7E" => Some(Color::PurpleMonster),
                x if x == "#4E5180" => Some(Color::PurpleNavy),
                x if x == "#D16587" => Some(Color::PurplePink),
                x if x == "#8E35EF" => Some(Color::PurplePlum),
                x if x == "#7A5DC7" => Some(Color::PurpleSageBush),
                x if x == "#D2B9D3" => Some(Color::PurpleThistle),
                x if x == "#8D38C9" => Some(Color::PurpleViolet),
                x if x == "#DFD3E3" => Some(Color::PurpleWhite),
                x if x == "#27742C" => Some(Color::RacingGreen),
                x if x == "#E30B5D" => Some(Color::Raspberry),
                x if x == "#B3446C" => Some(Color::RaspberryPurple),
                x if x == "#6D7B8D" => Some(Color::RatGray),
                x if x == "#663399" => Some(Color::RebeccaPurple),
                x if x == "#FF0000" => Some(Color::Red),
                x if x == "#660000" => Some(Color::RedBlood),
                x if x == "#622F22" => Some(Color::RedBrown),
                x if x == "#7F5217" => Some(Color::RedDirt),
                x if x == "#C35817" => Some(Color::RedFox),
                x if x == "#EB5406" => Some(Color::RedGold),
                x if x == "#FF0080" => Some(Color::RedMagenta),
                x if x == "#FA2A55" => Some(Color::RedPink),
                x if x == "#F3E8EA" => Some(Color::RedWhite),
                x if x == "#990012" => Some(Color::RedWine),
                x if x == "#FAF5EF" => Some(Color::Rice),
                x if x == "#B666D2" => Some(Color::RichLilac),
                x if x == "#BDEDFF" => Some(Color::RobinEggBlue),
                x if x == "#C12869" => Some(Color::RoguePink),
                x if x == "#838996" => Some(Color::RomanSilver),
                x if x == "#E8ADAA" => Some(Color::Rose),
                x if x == "#997070" => Some(Color::RoseDust),
                x if x == "#ECC5C0" => Some(Color::RoseGold),
                x if x == "#E7A1B0" => Some(Color::RosePink),
                x if x == "#B09FCA" => Some(Color::RosePurple),
                x if x == "#F7CAC9" => Some(Color::RoseQuartz),
                x if x == "#C21E56" => Some(Color::RoseRed),
                x if x == "#A17188" => Some(Color::Rosy),
                x if x == "#7F4E52" => Some(Color::RosyFinch),
                x if x == "#B38481" => Some(Color::RosyPink),
                x if x == "#BC8F8F" => Some(Color::RosyBrown),
                x if x == "#E759AC" => Some(Color::RoyalPink),
                x if x == "#4169E1" => Some(Color::RoyalBlue),
                x if x == "#FFD801" => Some(Color::RubberDuckyYellow),
                x if x == "#F62217" => Some(Color::RubyRed),
                x if x == "#C36241" => Some(Color::Rust),
                x if x == "#8B4513" => Some(Color::SaddleBrown),
                x if x == "#FF7900" => Some(Color::SafetyOrange),
                x if x == "#EED202" => Some(Color::SafetyYellow),
                x if x == "#FBB917" => Some(Color::Saffron),
                x if x == "#931314" => Some(Color::SaffronRed),
                x if x == "#BCB88A" => Some(Color::Sage),
                x if x == "#848B79" => Some(Color::SageGreen),
                x if x == "#A1C935" => Some(Color::SaladGreen),
                x if x == "#FA8072" => Some(Color::Salmon),
                x if x == "#FF8674" => Some(Color::SalmonPink),
                x if x == "#0002FF" => Some(Color::SamcoBlue),
                x if x == "#C2B280" => Some(Color::Sand),
                x if x == "#786D5F" => Some(Color::Sandstone),
                x if x == "#F4A460" => Some(Color::SandyBrown),
                x if x == "#7E3817" => Some(Color::Sangria),
                x if x == "#2554C7" => Some(Color::SapphireBlue),
                x if x == "#FF2400" => Some(Color::ScarletRed),
                x if x == "#E8A317" => Some(Color::SchoolBusYellow),
                x if x == "#C2DFFF" => Some(Color::SeaBlue),
                x if x == "#438D80" => Some(Color::SeaTurtleGreen),
                x if x == "#2E8B57" => Some(Color::SeaGreen),
                x if x == "#FFF5EE" => Some(Color::SeaShell),
                x if x == "#3EA99F" => Some(Color::SeafoamGreen),
                x if x == "#437C17" => Some(Color::SeaweedGreen),
                x if x == "#CC6600" => Some(Color::Sedona),
                x if x == "#7F462C" => Some(Color::Sepia),
                x if x == "#704214" => Some(Color::SepiaBrown),
                x if x == "#347C17" => Some(Color::ShamrockGreen),
                x if x == "#888B90" => Some(Color::SheetMetal),
                x if x == "#E55B3C" => Some(Color::ShockingOrange),
                x if x == "#A0522D" => Some(Color::Sienna),
                x if x == "#488AC7" => Some(Color::SilkBlue),
                x if x == "#C0C0C0" => Some(Color::Silver),
                x if x == "#C4AEAD" => Some(Color::SilverPink),
                x if x == "#DADBDD" => Some(Color::SilverWhite),
                x if x == "#6698FF" => Some(Color::SkyBlueDress),
                x if x == "#87CEEB" => Some(Color::SkyBlue),
                x if x == "#737CA1" => Some(Color::SlateBlueGray),
                x if x == "#657383" => Some(Color::SlateGraniteGray),
                x if x == "#6A5ACD" => Some(Color::SlateBlue),
                x if x == "#708090" => Some(Color::SlateGray),
                x if x == "#708090" => Some(Color::SlateGrey),
                x if x == "#BCE954" => Some(Color::SlimeGreen),
                x if x == "#726E6D" => Some(Color::SmokeyGray),
                x if x == "#FFFAFA" => Some(Color::Snow),
                x if x == "#C6BA8B" => Some(Color::SoftHazel),
                x if x == "#FAF0DD" => Some(Color::SoftIvory),
                x if x == "#FFB8BF" => Some(Color::SoftPink),
                x if x == "#757575" => Some(Color::SonicSilver),
                x if x == "#00FF7F" => Some(Color::SpringGreen),
                x if x == "#99A3A3" => Some(Color::StainlessSteelGray),
                x if x == "#C9C1C1" => Some(Color::Steampunk),
                x if x == "#71797E" => Some(Color::SteelGray),
                x if x == "#4682B4" => Some(Color::SteelBlue),
                x if x == "#57E964" => Some(Color::StoplightGoGreen),
                x if x == "#3A3B3C" => Some(Color::StormyGray),
                x if x == "#C83F49" => Some(Color::StrawberryRed),
                x if x == "#FFE87C" => Some(Color::SunYellow),
                x if x == "#E67451" => Some(Color::SunriseOrange),
                x if x == "#D2B48C" => Some(Color::Tan),
                x if x == "#ECE5B6" => Some(Color::TanBrown),
                x if x == "#E78A61" => Some(Color::Tangerine),
                x if x == "#483C32" => Some(Color::Taupe),
                x if x == "#CCFB5D" => Some(Color::TeaGreen),
                x if x == "#008080" => Some(Color::Teal),
                x if x == "#007C80" => Some(Color::TealBlue),
                x if x == "#00827F" => Some(Color::TealGreen),
                x if x == "#D8BFD8" => Some(Color::Thistle),
                x if x == "#81D8D0" => Some(Color::TiffanyBlue),
                x if x == "#C88141" => Some(Color::TigerOrange),
                x if x == "#FF6347" => Some(Color::Tomato),
                x if x == "#B21807" => Some(Color::TomatoSauceRed),
                x if x == "#7DFDFE" => Some(Color::TronBlue),
                x if x == "#C25A7C" => Some(Color::TulipPink),
                x if x == "#40E0D0" => Some(Color::Turquoise),
                x if x == "#A0D6B4" => Some(Color::TurquoiseGreen),
                x if x == "#C45AEC" => Some(Color::TyrianPurple),
                x if x == "#FFDDCA" => Some(Color::UnbleachedSilk),
                x if x == "#E55451" => Some(Color::ValentineRed),
                x if x == "#565051" => Some(Color::VampireGray),
                x if x == "#F3E5AB" => Some(Color::Vanilla),
                x if x == "#7E354D" => Some(Color::VelvetMaroon),
                x if x == "#728C00" => Some(Color::VenomGreen),
                x if x == "#7E191B" => Some(Color::Vermilion),
                x if x == "#6667AB" => Some(Color::VeryPeri),
                x if x == "#C8C4DF" => Some(Color::Viola),
                x if x == "#7E587E" => Some(Color::ViolaPurple),
                x if x == "#EE82EE" => Some(Color::Violet),
                x if x == "#F6358A" => Some(Color::VioletRed),
                x if x == "#F6C6BD" => Some(Color::WarmPink),
                x if x == "#EFEBD8" => Some(Color::WarmWhite),
                x if x == "#EBF4FA" => Some(Color::Water),
                x if x == "#FC6C85" => Some(Color::WatermelonPink),
                x if x == "#49413F" => Some(Color::WesternCharcoal),
                x if x == "#F5DEB3" => Some(Color::Wheat),
                x if x == "#FFFFFF" => Some(Color::White),
                x if x == "#DBE9FA" => Some(Color::WhiteBlue),
                x if x == "#EDE6D6" => Some(Color::WhiteChocolate),
                x if x == "#FFFFF4" => Some(Color::WhiteGold),
                x if x == "#EEEEEE" => Some(Color::WhiteGray),
                x if x == "#EAEEE9" => Some(Color::WhiteIce),
                x if x == "#F2F0DF" => Some(Color::WhiteYellow),
                x if x == "#F5F5F5" => Some(Color::WhiteSmoke),
                x if x == "#357EC7" => Some(Color::WindowsBlue),
                x if x == "#990012" => Some(Color::WineRed),
                x if x == "#C6AEC7" => Some(Color::WisteriaPurple),
                x if x == "#966F33" => Some(Color::Wood),
                x if x == "#FFFF00" => Some(Color::Yellow),
                x if x == "#E2F516" => Some(Color::YellowGreenGrosbeak),
                x if x == "#87F717" => Some(Color::YellowLawnGreen),
                x if x == "#FFAE42" => Some(Color::YellowOrange),
                x if x == "#9ACD32" => Some(Color::YellowGreen),
                x if x == "#54C571" => Some(Color::ZombieGreen),
                _ => Some(Color::Rgb(r, g, b)),
            }
        } else {
            match name.replace(" ", "").to_lowercase() {
                x if x == stringify!(AcidGreen).to_lowercase() => Some(Color::AcidGreen),
                x if x == stringify!(AlgaeGreen).to_lowercase() => Some(Color::AlgaeGreen),
                x if x == stringify!(AliceBlue).to_lowercase() => Some(Color::AliceBlue),
                x if x == stringify!(AlienGray).to_lowercase() => Some(Color::AlienGray),
                x if x == stringify!(AlienGreen).to_lowercase() => Some(Color::AlienGreen),
                x if x == stringify!(AloeVeraGreen).to_lowercase() => Some(Color::AloeVeraGreen),
                x if x == stringify!(Amber).to_lowercase() => Some(Color::Amber),
                x if x == stringify!(AntiqueBronze).to_lowercase() => Some(Color::AntiqueBronze),
                x if x == stringify!(AntiqueWhite).to_lowercase() => Some(Color::AntiqueWhite),
                x if x == stringify!(Aqua).to_lowercase() => Some(Color::Aqua),
                x if x == stringify!(AquaGreen).to_lowercase() => Some(Color::AquaGreen),
                x if x == stringify!(AquaSeafoamGreen).to_lowercase() => {
                    Some(Color::AquaSeafoamGreen)
                }
                x if x == stringify!(Aquamarine).to_lowercase() => Some(Color::Aquamarine),
                x if x == stringify!(AquamarineStone).to_lowercase() => {
                    Some(Color::AquamarineStone)
                }
                x if x == stringify!(ArmyBrown).to_lowercase() => Some(Color::ArmyBrown),
                x if x == stringify!(ArmyGreen).to_lowercase() => Some(Color::ArmyGreen),
                x if x == stringify!(AshGray).to_lowercase() => Some(Color::AshGray),
                x if x == stringify!(AshWhite).to_lowercase() => Some(Color::AshWhite),
                x if x == stringify!(AvocadoGreen).to_lowercase() => Some(Color::AvocadoGreen),
                x if x == stringify!(AztechPurple).to_lowercase() => Some(Color::AztechPurple),
                x if x == stringify!(Azure).to_lowercase() => Some(Color::Azure),
                x if x == stringify!(AzureBlue).to_lowercase() => Some(Color::AzureBlue),
                x if x == stringify!(BabyBlue).to_lowercase() => Some(Color::BabyBlue),
                x if x == stringify!(BabyPink).to_lowercase() => Some(Color::BabyPink),
                x if x == stringify!(BakersBrown).to_lowercase() => Some(Color::BakersBrown),
                x if x == stringify!(BalloonBlue).to_lowercase() => Some(Color::BalloonBlue),
                x if x == stringify!(BananaYellow).to_lowercase() => Some(Color::BananaYellow),
                x if x == stringify!(BarbiePink).to_lowercase() => Some(Color::BarbiePink),
                x if x == stringify!(BashfulPink).to_lowercase() => Some(Color::BashfulPink),
                x if x == stringify!(BasilGreen).to_lowercase() => Some(Color::BasilGreen),
                x if x == stringify!(BasketBallOrange).to_lowercase() => {
                    Some(Color::BasketBallOrange)
                }
                x if x == stringify!(BattleshipGray).to_lowercase() => Some(Color::BattleshipGray),
                x if x == stringify!(BeanRed).to_lowercase() => Some(Color::BeanRed),
                x if x == stringify!(BeeYellow).to_lowercase() => Some(Color::BeeYellow),
                x if x == stringify!(Beer).to_lowercase() => Some(Color::Beer),
                x if x == stringify!(BeetleGreen).to_lowercase() => Some(Color::BeetleGreen),
                x if x == stringify!(Beige).to_lowercase() => Some(Color::Beige),
                x if x == stringify!(Bisque).to_lowercase() => Some(Color::Bisque),
                x if x == stringify!(Black).to_lowercase() => Some(Color::Black),
                x if x == stringify!(BlackBean).to_lowercase() => Some(Color::BlackBean),
                x if x == stringify!(BlackBlue).to_lowercase() => Some(Color::BlackBlue),
                x if x == stringify!(BlackCat).to_lowercase() => Some(Color::BlackCat),
                x if x == stringify!(BlackCow).to_lowercase() => Some(Color::BlackCow),
                x if x == stringify!(BlackEel).to_lowercase() => Some(Color::BlackEel),
                x if x == stringify!(BlanchedAlmond).to_lowercase() => Some(Color::BlanchedAlmond),
                x if x == stringify!(Blonde).to_lowercase() => Some(Color::Blonde),
                x if x == stringify!(BloodNight).to_lowercase() => Some(Color::BloodNight),
                x if x == stringify!(BloodRed).to_lowercase() => Some(Color::BloodRed),
                x if x == stringify!(BlossomPink).to_lowercase() => Some(Color::BlossomPink),
                x if x == stringify!(Blue).to_lowercase() => Some(Color::Blue),
                x if x == stringify!(BlueAngel).to_lowercase() => Some(Color::BlueAngel),
                x if x == stringify!(BlueDiamond).to_lowercase() => Some(Color::BlueDiamond),
                x if x == stringify!(BlueDress).to_lowercase() => Some(Color::BlueDress),
                x if x == stringify!(BlueEyes).to_lowercase() => Some(Color::BlueEyes),
                x if x == stringify!(BlueGray).to_lowercase() => Some(Color::BlueGray),
                x if x == stringify!(BlueGreen).to_lowercase() => Some(Color::BlueGreen),
                x if x == stringify!(BlueHosta).to_lowercase() => Some(Color::BlueHosta),
                x if x == stringify!(BlueIvy).to_lowercase() => Some(Color::BlueIvy),
                x if x == stringify!(BlueJay).to_lowercase() => Some(Color::BlueJay),
                x if x == stringify!(BlueKoi).to_lowercase() => Some(Color::BlueKoi),
                x if x == stringify!(BlueLagoon).to_lowercase() => Some(Color::BlueLagoon),
                x if x == stringify!(BlueLotus).to_lowercase() => Some(Color::BlueLotus),
                x if x == stringify!(BlueMagenta).to_lowercase() => Some(Color::BlueMagenta),
                x if x == stringify!(BlueMossGreen).to_lowercase() => Some(Color::BlueMossGreen),
                x if x == stringify!(BlueOrchid).to_lowercase() => Some(Color::BlueOrchid),
                x if x == stringify!(BlueRibbon).to_lowercase() => Some(Color::BlueRibbon),
                x if x == stringify!(BlueTurquoise).to_lowercase() => Some(Color::BlueTurquoise),
                x if x == stringify!(BlueWhale).to_lowercase() => Some(Color::BlueWhale),
                x if x == stringify!(BlueZircon).to_lowercase() => Some(Color::BlueZircon),
                x if x == stringify!(BlueViolet).to_lowercase() => Some(Color::BlueViolet),
                x if x == stringify!(BlueberryBlue).to_lowercase() => Some(Color::BlueberryBlue),
                x if x == stringify!(Blurple).to_lowercase() => Some(Color::Blurple),
                x if x == stringify!(Blush).to_lowercase() => Some(Color::Blush),
                x if x == stringify!(BlushPink).to_lowercase() => Some(Color::BlushPink),
                x if x == stringify!(BlushRed).to_lowercase() => Some(Color::BlushRed),
                x if x == stringify!(BoldYellow).to_lowercase() => Some(Color::BoldYellow),
                x if x == stringify!(BoneWhite).to_lowercase() => Some(Color::BoneWhite),
                x if x == stringify!(BottleGreen).to_lowercase() => Some(Color::BottleGreen),
                x if x == stringify!(Brass).to_lowercase() => Some(Color::Brass),
                x if x == stringify!(BrightBlue).to_lowercase() => Some(Color::BrightBlue),
                x if x == stringify!(BrightCyan).to_lowercase() => Some(Color::BrightCyan),
                x if x == stringify!(BrightGold).to_lowercase() => Some(Color::BrightGold),
                x if x == stringify!(BrightGrape).to_lowercase() => Some(Color::BrightGrape),
                x if x == stringify!(BrightGreen).to_lowercase() => Some(Color::BrightGreen),
                x if x == stringify!(BrightLilac).to_lowercase() => Some(Color::BrightLilac),
                x if x == stringify!(BrightMaroon).to_lowercase() => Some(Color::BrightMaroon),
                x if x == stringify!(BrightNavyBlue).to_lowercase() => Some(Color::BrightNavyBlue),
                x if x == stringify!(BrightNeonPink).to_lowercase() => Some(Color::BrightNeonPink),
                x if x == stringify!(BrightOrange).to_lowercase() => Some(Color::BrightOrange),
                x if x == stringify!(BrightPink).to_lowercase() => Some(Color::BrightPink),
                x if x == stringify!(BrightPurple).to_lowercase() => Some(Color::BrightPurple),
                x if x == stringify!(BrightTeal).to_lowercase() => Some(Color::BrightTeal),
                x if x == stringify!(BrightTurquoise).to_lowercase() => {
                    Some(Color::BrightTurquoise)
                }
                x if x == stringify!(BroccoliGreen).to_lowercase() => Some(Color::BroccoliGreen),
                x if x == stringify!(Bronze).to_lowercase() => Some(Color::Bronze),
                x if x == stringify!(BronzeGold).to_lowercase() => Some(Color::BronzeGold),
                x if x == stringify!(Brown).to_lowercase() => Some(Color::Brown),
                x if x == stringify!(BrownBear).to_lowercase() => Some(Color::BrownBear),
                x if x == stringify!(BrownRust).to_lowercase() => Some(Color::BrownRust),
                x if x == stringify!(BrownSand).to_lowercase() => Some(Color::BrownSand),
                x if x == stringify!(BrownSugar).to_lowercase() => Some(Color::BrownSugar),
                x if x == stringify!(BulletShell).to_lowercase() => Some(Color::BulletShell),
                x if x == stringify!(Burgundy).to_lowercase() => Some(Color::Burgundy),
                x if x == stringify!(BurlyWood).to_lowercase() => Some(Color::BurlyWood),
                x if x == stringify!(BurntPink).to_lowercase() => Some(Color::BurntPink),
                x if x == stringify!(ButterflyBlue).to_lowercase() => Some(Color::ButterflyBlue),
                x if x == stringify!(CactusGreen).to_lowercase() => Some(Color::CactusGreen),
                x if x == stringify!(CadetBlue).to_lowercase() => Some(Color::CadetBlue),
                x if x == stringify!(CadillacPink).to_lowercase() => Some(Color::CadillacPink),
                x if x == stringify!(CamelBrown).to_lowercase() => Some(Color::CamelBrown),
                x if x == stringify!(CamouflageGreen).to_lowercase() => {
                    Some(Color::CamouflageGreen)
                }
                x if x == stringify!(CanaryBlue).to_lowercase() => Some(Color::CanaryBlue),
                x if x == stringify!(CanaryYellow).to_lowercase() => Some(Color::CanaryYellow),
                x if x == stringify!(Cantaloupe).to_lowercase() => Some(Color::Cantaloupe),
                x if x == stringify!(Caramel).to_lowercase() => Some(Color::Caramel),
                x if x == stringify!(CarbonGray).to_lowercase() => Some(Color::CarbonGray),
                x if x == stringify!(CarbonRed).to_lowercase() => Some(Color::CarbonRed),
                x if x == stringify!(CardboardBrown).to_lowercase() => Some(Color::CardboardBrown),
                x if x == stringify!(CarnationPink).to_lowercase() => Some(Color::CarnationPink),
                x if x == stringify!(CarrotOrange).to_lowercase() => Some(Color::CarrotOrange),
                x if x == stringify!(Celeste).to_lowercase() => Some(Color::Celeste),
                x if x == stringify!(ChameleonGreen).to_lowercase() => Some(Color::ChameleonGreen),
                x if x == stringify!(Champagne).to_lowercase() => Some(Color::Champagne),
                x if x == stringify!(Charcoal).to_lowercase() => Some(Color::Charcoal),
                x if x == stringify!(CharcoalBlue).to_lowercase() => Some(Color::CharcoalBlue),
                x if x == stringify!(Chartreuse).to_lowercase() => Some(Color::Chartreuse),
                x if x == stringify!(CheeseOrange).to_lowercase() => Some(Color::CheeseOrange),
                x if x == stringify!(CherryRed).to_lowercase() => Some(Color::CherryRed),
                x if x == stringify!(Chestnut).to_lowercase() => Some(Color::Chestnut),
                x if x == stringify!(ChestnutRed).to_lowercase() => Some(Color::ChestnutRed),
                x if x == stringify!(ChilliPepper).to_lowercase() => Some(Color::ChilliPepper),
                x if x == stringify!(Chocolate).to_lowercase() => Some(Color::Chocolate),
                x if x == stringify!(ChocolateBrown).to_lowercase() => Some(Color::ChocolateBrown),
                x if x == stringify!(ChromeAluminum).to_lowercase() => Some(Color::ChromeAluminum),
                x if x == stringify!(ChromeGold).to_lowercase() => Some(Color::ChromeGold),
                x if x == stringify!(ChromeGreen).to_lowercase() => Some(Color::ChromeGreen),
                x if x == stringify!(ChromePink).to_lowercase() => Some(Color::ChromePink),
                x if x == stringify!(ChromeWhite).to_lowercase() => Some(Color::ChromeWhite),
                x if x == stringify!(Cinnamon).to_lowercase() => Some(Color::Cinnamon),
                x if x == stringify!(CitronGreen).to_lowercase() => Some(Color::CitronGreen),
                x if x == stringify!(ClematisViolet).to_lowercase() => Some(Color::ClematisViolet),
                x if x == stringify!(CloudyGray).to_lowercase() => Some(Color::CloudyGray),
                x if x == stringify!(CloverGreen).to_lowercase() => Some(Color::CloverGreen),
                x if x == stringify!(CobaltBlue).to_lowercase() => Some(Color::CobaltBlue),
                x if x == stringify!(Coffee).to_lowercase() => Some(Color::Coffee),
                x if x == stringify!(ColdMetal).to_lowercase() => Some(Color::ColdMetal),
                x if x == stringify!(ColumbiaBlue).to_lowercase() => Some(Color::ColumbiaBlue),
                x if x == stringify!(ConstructionConeOrange).to_lowercase() => {
                    Some(Color::ConstructionConeOrange)
                }
                x if x == stringify!(CookieBrown).to_lowercase() => Some(Color::CookieBrown),
                x if x == stringify!(Copper).to_lowercase() => Some(Color::Copper),
                x if x == stringify!(CopperRed).to_lowercase() => Some(Color::CopperRed),
                x if x == stringify!(Coral).to_lowercase() => Some(Color::Coral),
                x if x == stringify!(CoralBlue).to_lowercase() => Some(Color::CoralBlue),
                x if x == stringify!(CoralBrown).to_lowercase() => Some(Color::CoralBrown),
                x if x == stringify!(CoralPeach).to_lowercase() => Some(Color::CoralPeach),
                x if x == stringify!(CornYellow).to_lowercase() => Some(Color::CornYellow),
                x if x == stringify!(CornflowerBlue).to_lowercase() => Some(Color::CornflowerBlue),
                x if x == stringify!(Cornsilk).to_lowercase() => Some(Color::Cornsilk),
                x if x == stringify!(CosmicLatte).to_lowercase() => Some(Color::CosmicLatte),
                x if x == stringify!(Cotton).to_lowercase() => Some(Color::Cotton),
                x if x == stringify!(CottonCandy).to_lowercase() => Some(Color::CottonCandy),
                x if x == stringify!(Cranberry).to_lowercase() => Some(Color::Cranberry),
                x if x == stringify!(Cream).to_lowercase() => Some(Color::Cream),
                x if x == stringify!(CreamWhite).to_lowercase() => Some(Color::CreamWhite),
                x if x == stringify!(CreamyWhite).to_lowercase() => Some(Color::CreamyWhite),
                x if x == stringify!(Crimson).to_lowercase() => Some(Color::Crimson),
                x if x == stringify!(CrimsonPurple).to_lowercase() => Some(Color::CrimsonPurple),
                x if x == stringify!(CrimsonRed).to_lowercase() => Some(Color::CrimsonRed),
                x if x == stringify!(CrocusPurple).to_lowercase() => Some(Color::CrocusPurple),
                x if x == stringify!(CrystalBlue).to_lowercase() => Some(Color::CrystalBlue),
                x if x == stringify!(Cyan).to_lowercase() => Some(Color::Cyan),
                x if x == stringify!(CyanBlue).to_lowercase() => Some(Color::CyanBlue),
                x if x == stringify!(CyanOpaque).to_lowercase() => Some(Color::CyanOpaque),
                x if x == stringify!(DarkAlmond).to_lowercase() => Some(Color::DarkAlmond),
                x if x == stringify!(DarkBeige).to_lowercase() => Some(Color::DarkBeige),
                x if x == stringify!(DarkBisque).to_lowercase() => Some(Color::DarkBisque),
                x if x == stringify!(DarkBlonde).to_lowercase() => Some(Color::DarkBlonde),
                x if x == stringify!(DarkBlueGray).to_lowercase() => Some(Color::DarkBlueGray),
                x if x == stringify!(DarkBlurple).to_lowercase() => Some(Color::DarkBlurple),
                x if x == stringify!(DarkBronze).to_lowercase() => Some(Color::DarkBronze),
                x if x == stringify!(DarkBrown).to_lowercase() => Some(Color::DarkBrown),
                x if x == stringify!(DarkCarnationPink).to_lowercase() => {
                    Some(Color::DarkCarnationPink)
                }
                x if x == stringify!(DarkCoffee).to_lowercase() => Some(Color::DarkCoffee),
                x if x == stringify!(DarkForestGreen).to_lowercase() => {
                    Some(Color::DarkForestGreen)
                }
                x if x == stringify!(DarkGainsboro).to_lowercase() => Some(Color::DarkGainsboro),
                x if x == stringify!(DarkGold).to_lowercase() => Some(Color::DarkGold),
                x if x == stringify!(DarkGrayishOlive).to_lowercase() => {
                    Some(Color::DarkGrayishOlive)
                }
                x if x == stringify!(DarkGreenBlue).to_lowercase() => Some(Color::DarkGreenBlue),
                x if x == stringify!(DarkHazelBrown).to_lowercase() => Some(Color::DarkHazelBrown),
                x if x == stringify!(DarkHotPink).to_lowercase() => Some(Color::DarkHotPink),
                x if x == stringify!(DarkLimeGreen).to_lowercase() => Some(Color::DarkLimeGreen),
                x if x == stringify!(DarkMaroon).to_lowercase() => Some(Color::DarkMaroon),
                x if x == stringify!(DarkMint).to_lowercase() => Some(Color::DarkMint),
                x if x == stringify!(DarkMoccasin).to_lowercase() => Some(Color::DarkMoccasin),
                x if x == stringify!(DarkPink).to_lowercase() => Some(Color::DarkPink),
                x if x == stringify!(DarkPurple).to_lowercase() => Some(Color::DarkPurple),
                x if x == stringify!(DarkRaspberry).to_lowercase() => Some(Color::DarkRaspberry),
                x if x == stringify!(DarkScarlet).to_lowercase() => Some(Color::DarkScarlet),
                x if x == stringify!(DarkSienna).to_lowercase() => Some(Color::DarkSienna),
                x if x == stringify!(DarkSkyBlue).to_lowercase() => Some(Color::DarkSkyBlue),
                x if x == stringify!(DarkSlate).to_lowercase() => Some(Color::DarkSlate),
                x if x == stringify!(DarkSteampunk).to_lowercase() => Some(Color::DarkSteampunk),
                x if x == stringify!(DarkTeal).to_lowercase() => Some(Color::DarkTeal),
                x if x == stringify!(DarkWhite).to_lowercase() => Some(Color::DarkWhite),
                x if x == stringify!(DarkYellow).to_lowercase() => Some(Color::DarkYellow),
                x if x == stringify!(DarkBlue).to_lowercase() => Some(Color::DarkBlue),
                x if x == stringify!(DarkCyan).to_lowercase() => Some(Color::DarkCyan),
                x if x == stringify!(DarkGoldenRod).to_lowercase() => Some(Color::DarkGoldenRod),
                x if x == stringify!(DarkGray).to_lowercase() => Some(Color::DarkGray),
                x if x == stringify!(DarkGreen).to_lowercase() => Some(Color::DarkGreen),
                x if x == stringify!(DarkGrey).to_lowercase() => Some(Color::DarkGrey),
                x if x == stringify!(DarkKhaki).to_lowercase() => Some(Color::DarkKhaki),
                x if x == stringify!(DarkMagenta).to_lowercase() => Some(Color::DarkMagenta),
                x if x == stringify!(DarkOliveGreen).to_lowercase() => Some(Color::DarkOliveGreen),
                x if x == stringify!(DarkOrange).to_lowercase() => Some(Color::DarkOrange),
                x if x == stringify!(DarkOrchid).to_lowercase() => Some(Color::DarkOrchid),
                x if x == stringify!(DarkRed).to_lowercase() => Some(Color::DarkRed),
                x if x == stringify!(DarkSalmon).to_lowercase() => Some(Color::DarkSalmon),
                x if x == stringify!(DarkSeaGreen).to_lowercase() => Some(Color::DarkSeaGreen),
                x if x == stringify!(DarkSlateBlue).to_lowercase() => Some(Color::DarkSlateBlue),
                x if x == stringify!(DarkSlateGray).to_lowercase() => Some(Color::DarkSlateGray),
                x if x == stringify!(DarkSlateGrey).to_lowercase() => Some(Color::DarkSlateGrey),
                x if x == stringify!(DarkTurquoise).to_lowercase() => Some(Color::DarkTurquoise),
                x if x == stringify!(DarkViolet).to_lowercase() => Some(Color::DarkViolet),
                x if x == stringify!(DaySkyBlue).to_lowercase() => Some(Color::DaySkyBlue),
                x if x == stringify!(DeepAmber).to_lowercase() => Some(Color::DeepAmber),
                x if x == stringify!(DeepEmeraldGreen).to_lowercase() => {
                    Some(Color::DeepEmeraldGreen)
                }
                x if x == stringify!(DeepGreen).to_lowercase() => Some(Color::DeepGreen),
                x if x == stringify!(DeepMauve).to_lowercase() => Some(Color::DeepMauve),
                x if x == stringify!(DeepPeach).to_lowercase() => Some(Color::DeepPeach),
                x if x == stringify!(DeepPeriwinkle).to_lowercase() => Some(Color::DeepPeriwinkle),
                x if x == stringify!(DeepPurple).to_lowercase() => Some(Color::DeepPurple),
                x if x == stringify!(DeepRed).to_lowercase() => Some(Color::DeepRed),
                x if x == stringify!(DeepRose).to_lowercase() => Some(Color::DeepRose),
                x if x == stringify!(DeepSea).to_lowercase() => Some(Color::DeepSea),
                x if x == stringify!(DeepSeaBlue).to_lowercase() => Some(Color::DeepSeaBlue),
                x if x == stringify!(DeepSeaGreen).to_lowercase() => Some(Color::DeepSeaGreen),
                x if x == stringify!(DeepTeal).to_lowercase() => Some(Color::DeepTeal),
                x if x == stringify!(DeepTurquoise).to_lowercase() => Some(Color::DeepTurquoise),
                x if x == stringify!(DeepYellow).to_lowercase() => Some(Color::DeepYellow),
                x if x == stringify!(DeepPink).to_lowercase() => Some(Color::DeepPink),
                x if x == stringify!(DeepSkyBlue).to_lowercase() => Some(Color::DeepSkyBlue),
                x if x == stringify!(DeerBrown).to_lowercase() => Some(Color::DeerBrown),
                x if x == stringify!(DenimBlue).to_lowercase() => Some(Color::DenimBlue),
                x if x == stringify!(DenimDarkBlue).to_lowercase() => Some(Color::DenimDarkBlue),
                x if x == stringify!(DesertSand).to_lowercase() => Some(Color::DesertSand),
                x if x == stringify!(DimGray).to_lowercase() => Some(Color::DimGray),
                x if x == stringify!(DimGrey).to_lowercase() => Some(Color::DimGrey),
                x if x == stringify!(DimorphothecaMagenta).to_lowercase() => {
                    Some(Color::DimorphothecaMagenta)
                }
                x if x == stringify!(DinosaurGreen).to_lowercase() => Some(Color::DinosaurGreen),
                x if x == stringify!(DirtyWhite).to_lowercase() => Some(Color::DirtyWhite),
                x if x == stringify!(DodgerBlue).to_lowercase() => Some(Color::DodgerBlue),
                x if x == stringify!(DollarBillGreen).to_lowercase() => {
                    Some(Color::DollarBillGreen)
                }
                x if x == stringify!(DonutPink).to_lowercase() => Some(Color::DonutPink),
                x if x == stringify!(DragonGreen).to_lowercase() => Some(Color::DragonGreen),
                x if x == stringify!(DullGreenYellow).to_lowercase() => {
                    Some(Color::DullGreenYellow)
                }
                x if x == stringify!(DullPurple).to_lowercase() => Some(Color::DullPurple),
                x if x == stringify!(DullSeaGreen).to_lowercase() => Some(Color::DullSeaGreen),
                x if x == stringify!(DuskyPink).to_lowercase() => Some(Color::DuskyPink),
                x if x == stringify!(DustyPink).to_lowercase() => Some(Color::DustyPink),
                x if x == stringify!(DustyRose).to_lowercase() => Some(Color::DustyRose),
                x if x == stringify!(EarthBlue).to_lowercase() => Some(Color::EarthBlue),
                x if x == stringify!(EarthGreen).to_lowercase() => Some(Color::EarthGreen),
                x if x == stringify!(Ebony).to_lowercase() => Some(Color::Ebony),
                x if x == stringify!(EggShell).to_lowercase() => Some(Color::EggShell),
                x if x == stringify!(Eggplant).to_lowercase() => Some(Color::Eggplant),
                x if x == stringify!(ElectricBlue).to_lowercase() => Some(Color::ElectricBlue),
                x if x == stringify!(ElfGreen).to_lowercase() => Some(Color::ElfGreen),
                x if x == stringify!(Emerald).to_lowercase() => Some(Color::Emerald),
                x if x == stringify!(EmeraldGreen).to_lowercase() => Some(Color::EmeraldGreen),
                x if x == stringify!(EstorilBlue).to_lowercase() => Some(Color::EstorilBlue),
                x if x == stringify!(FallForestGreen).to_lowercase() => {
                    Some(Color::FallForestGreen)
                }
                x if x == stringify!(FallLeafBrown).to_lowercase() => Some(Color::FallLeafBrown),
                x if x == stringify!(FernGreen).to_lowercase() => Some(Color::FernGreen),
                x if x == stringify!(FerrariRed).to_lowercase() => Some(Color::FerrariRed),
                x if x == stringify!(FireEngineRed).to_lowercase() => Some(Color::FireEngineRed),
                x if x == stringify!(FireBrick).to_lowercase() => Some(Color::FireBrick),
                x if x == stringify!(FlamingoPink).to_lowercase() => Some(Color::FlamingoPink),
                x if x == stringify!(FloralWhite).to_lowercase() => Some(Color::FloralWhite),
                x if x == stringify!(FluroOrange).to_lowercase() => Some(Color::FluroOrange),
                x if x == stringify!(ForestGreen).to_lowercase() => Some(Color::ForestGreen),
                x if x == stringify!(FrenchLilac).to_lowercase() => Some(Color::FrenchLilac),
                x if x == stringify!(FrogGreen).to_lowercase() => Some(Color::FrogGreen),
                x if x == stringify!(Fuchsia).to_lowercase() => Some(Color::Fuchsia),
                x if x == stringify!(FuchsiaPink).to_lowercase() => Some(Color::FuchsiaPink),
                x if x == stringify!(Gainsboro).to_lowercase() => Some(Color::Gainsboro),
                x if x == stringify!(GarnetRed).to_lowercase() => Some(Color::GarnetRed),
                x if x == stringify!(GearSteelGray).to_lowercase() => Some(Color::GearSteelGray),
                x if x == stringify!(GhostWhite).to_lowercase() => Some(Color::GhostWhite),
                x if x == stringify!(GingerBrown).to_lowercase() => Some(Color::GingerBrown),
                x if x == stringify!(GingerRed).to_lowercase() => Some(Color::GingerRed),
                x if x == stringify!(GlacialBlueIce).to_lowercase() => Some(Color::GlacialBlueIce),
                x if x == stringify!(Gold).to_lowercase() => Some(Color::Gold),
                x if x == stringify!(GoldPink).to_lowercase() => Some(Color::GoldPink),
                x if x == stringify!(GoldenBlonde).to_lowercase() => Some(Color::GoldenBlonde),
                x if x == stringify!(GoldenBrown).to_lowercase() => Some(Color::GoldenBrown),
                x if x == stringify!(GoldenSilk).to_lowercase() => Some(Color::GoldenSilk),
                x if x == stringify!(GoldenYellow).to_lowercase() => Some(Color::GoldenYellow),
                x if x == stringify!(GoldenRod).to_lowercase() => Some(Color::GoldenRod),
                x if x == stringify!(Granite).to_lowercase() => Some(Color::Granite),
                x if x == stringify!(Grape).to_lowercase() => Some(Color::Grape),
                x if x == stringify!(Grapefruit).to_lowercase() => Some(Color::Grapefruit),
                x if x == stringify!(GrassGreen).to_lowercase() => Some(Color::GrassGreen),
                x if x == stringify!(Gray).to_lowercase() => Some(Color::Gray),
                x if x == stringify!(GrayBrown).to_lowercase() => Some(Color::GrayBrown),
                x if x == stringify!(GrayCloud).to_lowercase() => Some(Color::GrayCloud),
                x if x == stringify!(GrayDolphin).to_lowercase() => Some(Color::GrayDolphin),
                x if x == stringify!(GrayGoose).to_lowercase() => Some(Color::GrayGoose),
                x if x == stringify!(GrayGreen).to_lowercase() => Some(Color::GrayGreen),
                x if x == stringify!(GrayWolf).to_lowercase() => Some(Color::GrayWolf),
                x if x == stringify!(GrayishTurquoise).to_lowercase() => {
                    Some(Color::GrayishTurquoise)
                }
                x if x == stringify!(Green).to_lowercase() => Some(Color::Green),
                x if x == stringify!(GreenApple).to_lowercase() => Some(Color::GreenApple),
                x if x == stringify!(GreenLeaves).to_lowercase() => Some(Color::GreenLeaves),
                x if x == stringify!(GreenOnion).to_lowercase() => Some(Color::GreenOnion),
                x if x == stringify!(GreenPeas).to_lowercase() => Some(Color::GreenPeas),
                x if x == stringify!(GreenPepper).to_lowercase() => Some(Color::GreenPepper),
                x if x == stringify!(GreenSnake).to_lowercase() => Some(Color::GreenSnake),
                x if x == stringify!(GreenThumb).to_lowercase() => Some(Color::GreenThumb),
                x if x == stringify!(GreenYellow).to_lowercase() => Some(Color::GreenYellow),
                x if x == stringify!(GreenishBlue).to_lowercase() => Some(Color::GreenishBlue),
                x if x == stringify!(Grey).to_lowercase() => Some(Color::Grey),
                x if x == stringify!(GulfBlue).to_lowercase() => Some(Color::GulfBlue),
                x if x == stringify!(Gunmetal).to_lowercase() => Some(Color::Gunmetal),
                x if x == stringify!(GunmetalGray).to_lowercase() => Some(Color::GunmetalGray),
                x if x == stringify!(HalfWhite).to_lowercase() => Some(Color::HalfWhite),
                x if x == stringify!(HalloweenOrange).to_lowercase() => {
                    Some(Color::HalloweenOrange)
                }
                x if x == stringify!(HarvestGold).to_lowercase() => Some(Color::HarvestGold),
                x if x == stringify!(Hazel).to_lowercase() => Some(Color::Hazel),
                x if x == stringify!(HazelGreen).to_lowercase() => Some(Color::HazelGreen),
                x if x == stringify!(HeavenlyBlue).to_lowercase() => Some(Color::HeavenlyBlue),
                x if x == stringify!(HeliotropePurple).to_lowercase() => {
                    Some(Color::HeliotropePurple)
                }
                x if x == stringify!(HoneyDew).to_lowercase() => Some(Color::HoneyDew),
                x if x == stringify!(HotDeepPink).to_lowercase() => Some(Color::HotDeepPink),
                x if x == stringify!(HotPink).to_lowercase() => Some(Color::HotPink),
                x if x == stringify!(HummingbirdGreen).to_lowercase() => {
                    Some(Color::HummingbirdGreen)
                }
                x if x == stringify!(HunterGreen).to_lowercase() => Some(Color::HunterGreen),
                x if x == stringify!(Iceberg).to_lowercase() => Some(Color::Iceberg),
                x if x == stringify!(IguanaGreen).to_lowercase() => Some(Color::IguanaGreen),
                x if x == stringify!(IndianSaffron).to_lowercase() => Some(Color::IndianSaffron),
                x if x == stringify!(IndianRed).to_lowercase() => Some(Color::IndianRed),
                x if x == stringify!(Indigo).to_lowercase() => Some(Color::Indigo),
                x if x == stringify!(Iridium).to_lowercase() => Some(Color::Iridium),
                x if x == stringify!(IrishGreen).to_lowercase() => Some(Color::IrishGreen),
                x if x == stringify!(IronGray).to_lowercase() => Some(Color::IronGray),
                x if x == stringify!(IsleOfManGreen).to_lowercase() => Some(Color::IsleOfManGreen),
                x if x == stringify!(Ivory).to_lowercase() => Some(Color::Ivory),
                x if x == stringify!(Jade).to_lowercase() => Some(Color::Jade),
                x if x == stringify!(JadeGreen).to_lowercase() => Some(Color::JadeGreen),
                x if x == stringify!(JasminePurple).to_lowercase() => Some(Color::JasminePurple),
                x if x == stringify!(JeansBlue).to_lowercase() => Some(Color::JeansBlue),
                x if x == stringify!(Jellyfish).to_lowercase() => Some(Color::Jellyfish),
                x if x == stringify!(JetGray).to_lowercase() => Some(Color::JetGray),
                x if x == stringify!(JungleGreen).to_lowercase() => Some(Color::JungleGreen),
                x if x == stringify!(KellyGreen).to_lowercase() => Some(Color::KellyGreen),
                x if x == stringify!(Khaki).to_lowercase() => Some(Color::Khaki),
                x if x == stringify!(KhakiBrown).to_lowercase() => Some(Color::KhakiBrown),
                x if x == stringify!(KhakiGreen).to_lowercase() => Some(Color::KhakiGreen),
                x if x == stringify!(KhakiRose).to_lowercase() => Some(Color::KhakiRose),
                x if x == stringify!(LapisBlue).to_lowercase() => Some(Color::LapisBlue),
                x if x == stringify!(LavaRed).to_lowercase() => Some(Color::LavaRed),
                x if x == stringify!(Lavender).to_lowercase() => Some(Color::Lavender),
                x if x == stringify!(LavenderBlue).to_lowercase() => Some(Color::LavenderBlue),
                x if x == stringify!(LavenderPinocchio).to_lowercase() => {
                    Some(Color::LavenderPinocchio)
                }
                x if x == stringify!(LavenderPurple).to_lowercase() => Some(Color::LavenderPurple),
                x if x == stringify!(LavenderBlush).to_lowercase() => Some(Color::LavenderBlush),
                x if x == stringify!(LawnGreen).to_lowercase() => Some(Color::LawnGreen),
                x if x == stringify!(LemonGreen).to_lowercase() => Some(Color::LemonGreen),
                x if x == stringify!(LemonYellow).to_lowercase() => Some(Color::LemonYellow),
                x if x == stringify!(LemonChiffon).to_lowercase() => Some(Color::LemonChiffon),
                x if x == stringify!(LightAquamarine).to_lowercase() => {
                    Some(Color::LightAquamarine)
                }
                x if x == stringify!(LightBeige).to_lowercase() => Some(Color::LightBeige),
                x if x == stringify!(LightBlack).to_lowercase() => Some(Color::LightBlack),
                x if x == stringify!(LightBrown).to_lowercase() => Some(Color::LightBrown),
                x if x == stringify!(LightCopper).to_lowercase() => Some(Color::LightCopper),
                x if x == stringify!(LightDayBlue).to_lowercase() => Some(Color::LightDayBlue),
                x if x == stringify!(LightFrenchBeige).to_lowercase() => {
                    Some(Color::LightFrenchBeige)
                }
                x if x == stringify!(LightGold).to_lowercase() => Some(Color::LightGold),
                x if x == stringify!(LightJade).to_lowercase() => Some(Color::LightJade),
                x if x == stringify!(LightMintGreen).to_lowercase() => Some(Color::LightMintGreen),
                x if x == stringify!(LightOliveGreen).to_lowercase() => {
                    Some(Color::LightOliveGreen)
                }
                x if x == stringify!(LightOrange).to_lowercase() => Some(Color::LightOrange),
                x if x == stringify!(LightPurple).to_lowercase() => Some(Color::LightPurple),
                x if x == stringify!(LightPurpleBlue).to_lowercase() => {
                    Some(Color::LightPurpleBlue)
                }
                x if x == stringify!(LightRed).to_lowercase() => Some(Color::LightRed),
                x if x == stringify!(LightRose).to_lowercase() => Some(Color::LightRose),
                x if x == stringify!(LightRoseGreen).to_lowercase() => Some(Color::LightRoseGreen),
                x if x == stringify!(LightSalmonRose).to_lowercase() => {
                    Some(Color::LightSalmonRose)
                }
                x if x == stringify!(LightSlate).to_lowercase() => Some(Color::LightSlate),
                x if x == stringify!(LightSlateBlue).to_lowercase() => Some(Color::LightSlateBlue),
                x if x == stringify!(LightSteelGray).to_lowercase() => Some(Color::LightSteelGray),
                x if x == stringify!(LightTeal).to_lowercase() => Some(Color::LightTeal),
                x if x == stringify!(LightWhite).to_lowercase() => Some(Color::LightWhite),
                x if x == stringify!(LightBlue).to_lowercase() => Some(Color::LightBlue),
                x if x == stringify!(LightCoral).to_lowercase() => Some(Color::LightCoral),
                x if x == stringify!(LightCyan).to_lowercase() => Some(Color::LightCyan),
                x if x == stringify!(LightGoldenRodYellow).to_lowercase() => {
                    Some(Color::LightGoldenRodYellow)
                }
                x if x == stringify!(LightGray).to_lowercase() => Some(Color::LightGray),
                x if x == stringify!(LightGreen).to_lowercase() => Some(Color::LightGreen),
                x if x == stringify!(LightGrey).to_lowercase() => Some(Color::LightGrey),
                x if x == stringify!(LightPink).to_lowercase() => Some(Color::LightPink),
                x if x == stringify!(LightSalmon).to_lowercase() => Some(Color::LightSalmon),
                x if x == stringify!(LightSeaGreen).to_lowercase() => Some(Color::LightSeaGreen),
                x if x == stringify!(LightSkyBlue).to_lowercase() => Some(Color::LightSkyBlue),
                x if x == stringify!(LightSlateGray).to_lowercase() => Some(Color::LightSlateGray),
                x if x == stringify!(LightSlateGrey).to_lowercase() => Some(Color::LightSlateGrey),
                x if x == stringify!(LightSteelBlue).to_lowercase() => Some(Color::LightSteelBlue),
                x if x == stringify!(LightYellow).to_lowercase() => Some(Color::LightYellow),
                x if x == stringify!(Lilac).to_lowercase() => Some(Color::Lilac),
                x if x == stringify!(Lime).to_lowercase() => Some(Color::Lime),
                x if x == stringify!(LimeMintGreen).to_lowercase() => Some(Color::LimeMintGreen),
                x if x == stringify!(LimeGreen).to_lowercase() => Some(Color::LimeGreen),
                x if x == stringify!(Linen).to_lowercase() => Some(Color::Linen),
                x if x == stringify!(LipstickPink).to_lowercase() => Some(Color::LipstickPink),
                x if x == stringify!(LotusGreen).to_lowercase() => Some(Color::LotusGreen),
                x if x == stringify!(LoveRed).to_lowercase() => Some(Color::LoveRed),
                x if x == stringify!(LovelyPurple).to_lowercase() => Some(Color::LovelyPurple),
                x if x == stringify!(MacaroniandCheese).to_lowercase() => {
                    Some(Color::MacaroniandCheese)
                }
                x if x == stringify!(MacawBlueGreen).to_lowercase() => Some(Color::MacawBlueGreen),
                x if x == stringify!(Magenta).to_lowercase() => Some(Color::Magenta),
                x if x == stringify!(MagentaPink).to_lowercase() => Some(Color::MagentaPink),
                x if x == stringify!(MagicMint).to_lowercase() => Some(Color::MagicMint),
                x if x == stringify!(Mahogany).to_lowercase() => Some(Color::Mahogany),
                x if x == stringify!(MangoOrange).to_lowercase() => Some(Color::MangoOrange),
                x if x == stringify!(MarbleBlue).to_lowercase() => Some(Color::MarbleBlue),
                x if x == stringify!(Maroon).to_lowercase() => Some(Color::Maroon),
                x if x == stringify!(MaroonRed).to_lowercase() => Some(Color::MaroonRed),
                x if x == stringify!(Mauve).to_lowercase() => Some(Color::Mauve),
                x if x == stringify!(MauveTaupe).to_lowercase() => Some(Color::MauveTaupe),
                x if x == stringify!(MediumForestGreen).to_lowercase() => {
                    Some(Color::MediumForestGreen)
                }
                x if x == stringify!(MediumTeal).to_lowercase() => Some(Color::MediumTeal),
                x if x == stringify!(MediumAquaMarine).to_lowercase() => {
                    Some(Color::MediumAquaMarine)
                }
                x if x == stringify!(MediumBlue).to_lowercase() => Some(Color::MediumBlue),
                x if x == stringify!(MediumOrchid).to_lowercase() => Some(Color::MediumOrchid),
                x if x == stringify!(MediumPurple).to_lowercase() => Some(Color::MediumPurple),
                x if x == stringify!(MediumSeaGreen).to_lowercase() => Some(Color::MediumSeaGreen),
                x if x == stringify!(MediumSlateBlue).to_lowercase() => {
                    Some(Color::MediumSlateBlue)
                }
                x if x == stringify!(MediumSpringGreen).to_lowercase() => {
                    Some(Color::MediumSpringGreen)
                }
                x if x == stringify!(MediumTurquoise).to_lowercase() => {
                    Some(Color::MediumTurquoise)
                }
                x if x == stringify!(MediumVioletRed).to_lowercase() => {
                    Some(Color::MediumVioletRed)
                }
                x if x == stringify!(Metal).to_lowercase() => Some(Color::Metal),
                x if x == stringify!(MetallicBronze).to_lowercase() => Some(Color::MetallicBronze),
                x if x == stringify!(MetallicGold).to_lowercase() => Some(Color::MetallicGold),
                x if x == stringify!(MetallicGreen).to_lowercase() => Some(Color::MetallicGreen),
                x if x == stringify!(MetallicSilver).to_lowercase() => Some(Color::MetallicSilver),
                x if x == stringify!(MiddayBlue).to_lowercase() => Some(Color::MiddayBlue),
                x if x == stringify!(Midnight).to_lowercase() => Some(Color::Midnight),
                x if x == stringify!(MidnightPurple).to_lowercase() => Some(Color::MidnightPurple),
                x if x == stringify!(MidnightBlue).to_lowercase() => Some(Color::MidnightBlue),
                x if x == stringify!(MilitaryGreen).to_lowercase() => Some(Color::MilitaryGreen),
                x if x == stringify!(MilkChocolate).to_lowercase() => Some(Color::MilkChocolate),
                x if x == stringify!(MilkWhite).to_lowercase() => Some(Color::MilkWhite),
                x if x == stringify!(MillenniumJade).to_lowercase() => Some(Color::MillenniumJade),
                x if x == stringify!(Mint).to_lowercase() => Some(Color::Mint),
                x if x == stringify!(MintGreen).to_lowercase() => Some(Color::MintGreen),
                x if x == stringify!(MintCream).to_lowercase() => Some(Color::MintCream),
                x if x == stringify!(MistBlue).to_lowercase() => Some(Color::MistBlue),
                x if x == stringify!(MistyRose).to_lowercase() => Some(Color::MistyRose),
                x if x == stringify!(Moccasin).to_lowercase() => Some(Color::Moccasin),
                x if x == stringify!(Mocha).to_lowercase() => Some(Color::Mocha),
                x if x == stringify!(MossGreen).to_lowercase() => Some(Color::MossGreen),
                x if x == stringify!(Mustard).to_lowercase() => Some(Color::Mustard),
                x if x == stringify!(MustardYellow).to_lowercase() => Some(Color::MustardYellow),
                x if x == stringify!(NardoGray).to_lowercase() => Some(Color::NardoGray),
                x if x == stringify!(NavajoWhite).to_lowercase() => Some(Color::NavajoWhite),
                x if x == stringify!(Navy).to_lowercase() => Some(Color::Navy),
                x if x == stringify!(NebulaGreen).to_lowercase() => Some(Color::NebulaGreen),
                x if x == stringify!(NeonBlue).to_lowercase() => Some(Color::NeonBlue),
                x if x == stringify!(NeonGold).to_lowercase() => Some(Color::NeonGold),
                x if x == stringify!(NeonGreen).to_lowercase() => Some(Color::NeonGreen),
                x if x == stringify!(NeonHotPink).to_lowercase() => Some(Color::NeonHotPink),
                x if x == stringify!(NeonOrange).to_lowercase() => Some(Color::NeonOrange),
                x if x == stringify!(NeonPink).to_lowercase() => Some(Color::NeonPink),
                x if x == stringify!(NeonPurple).to_lowercase() => Some(Color::NeonPurple),
                x if x == stringify!(NeonRed).to_lowercase() => Some(Color::NeonRed),
                x if x == stringify!(NeonYellow).to_lowercase() => Some(Color::NeonYellow),
                x if x == stringify!(NeonYellowGreen).to_lowercase() => {
                    Some(Color::NeonYellowGreen)
                }
                x if x == stringify!(NewMidnightBlue).to_lowercase() => {
                    Some(Color::NewMidnightBlue)
                }
                x if x == stringify!(Night).to_lowercase() => Some(Color::Night),
                x if x == stringify!(NightBlue).to_lowercase() => Some(Color::NightBlue),
                x if x == stringify!(NorthernLightsBlue).to_lowercase() => {
                    Some(Color::NorthernLightsBlue)
                }
                x if x == stringify!(OakBrown).to_lowercase() => Some(Color::OakBrown),
                x if x == stringify!(OceanBlue).to_lowercase() => Some(Color::OceanBlue),
                x if x == stringify!(OceanGreen).to_lowercase() => Some(Color::OceanGreen),
                x if x == stringify!(OffWhite).to_lowercase() => Some(Color::OffWhite),
                x if x == stringify!(Oil).to_lowercase() => Some(Color::Oil),
                x if x == stringify!(OldBurgundy).to_lowercase() => Some(Color::OldBurgundy),
                x if x == stringify!(OldRose).to_lowercase() => Some(Color::OldRose),
                x if x == stringify!(OldLace).to_lowercase() => Some(Color::OldLace),
                x if x == stringify!(Olive).to_lowercase() => Some(Color::Olive),
                x if x == stringify!(OliveGreen).to_lowercase() => Some(Color::OliveGreen),
                x if x == stringify!(OliveDrab).to_lowercase() => Some(Color::OliveDrab),
                x if x == stringify!(Orange).to_lowercase() => Some(Color::Orange),
                x if x == stringify!(OrangeGold).to_lowercase() => Some(Color::OrangeGold),
                x if x == stringify!(OrangeSalmon).to_lowercase() => Some(Color::OrangeSalmon),
                x if x == stringify!(OrangeYellow).to_lowercase() => Some(Color::OrangeYellow),
                x if x == stringify!(OrangeRed).to_lowercase() => Some(Color::OrangeRed),
                x if x == stringify!(Orchid).to_lowercase() => Some(Color::Orchid),
                x if x == stringify!(OrchidPurple).to_lowercase() => Some(Color::OrchidPurple),
                x if x == stringify!(OrganicBrown).to_lowercase() => Some(Color::OrganicBrown),
                x if x == stringify!(PaleBlueLily).to_lowercase() => Some(Color::PaleBlueLily),
                x if x == stringify!(PaleLilac).to_lowercase() => Some(Color::PaleLilac),
                x if x == stringify!(PalePink).to_lowercase() => Some(Color::PalePink),
                x if x == stringify!(PaleSilver).to_lowercase() => Some(Color::PaleSilver),
                x if x == stringify!(PaleGoldenRod).to_lowercase() => Some(Color::PaleGoldenRod),
                x if x == stringify!(PaleGreen).to_lowercase() => Some(Color::PaleGreen),
                x if x == stringify!(PaleTurquoise).to_lowercase() => Some(Color::PaleTurquoise),
                x if x == stringify!(PaleVioletRed).to_lowercase() => Some(Color::PaleVioletRed),
                x if x == stringify!(PapayaOrange).to_lowercase() => Some(Color::PapayaOrange),
                x if x == stringify!(PapayaWhip).to_lowercase() => Some(Color::PapayaWhip),
                x if x == stringify!(Parchment).to_lowercase() => Some(Color::Parchment),
                x if x == stringify!(ParrotGreen).to_lowercase() => Some(Color::ParrotGreen),
                x if x == stringify!(PastelBlue).to_lowercase() => Some(Color::PastelBlue),
                x if x == stringify!(PastelBrown).to_lowercase() => Some(Color::PastelBrown),
                x if x == stringify!(PastelGreen).to_lowercase() => Some(Color::PastelGreen),
                x if x == stringify!(PastelIndigo).to_lowercase() => Some(Color::PastelIndigo),
                x if x == stringify!(PastelLightBlue).to_lowercase() => {
                    Some(Color::PastelLightBlue)
                }
                x if x == stringify!(PastelOrange).to_lowercase() => Some(Color::PastelOrange),
                x if x == stringify!(PastelPink).to_lowercase() => Some(Color::PastelPink),
                x if x == stringify!(PastelPurple).to_lowercase() => Some(Color::PastelPurple),
                x if x == stringify!(PastelRed).to_lowercase() => Some(Color::PastelRed),
                x if x == stringify!(PastelRose).to_lowercase() => Some(Color::PastelRose),
                x if x == stringify!(PastelViolet).to_lowercase() => Some(Color::PastelViolet),
                x if x == stringify!(PastelYellow).to_lowercase() => Some(Color::PastelYellow),
                x if x == stringify!(PeaGreen).to_lowercase() => Some(Color::PeaGreen),
                x if x == stringify!(Peach).to_lowercase() => Some(Color::Peach),
                x if x == stringify!(PeachPink).to_lowercase() => Some(Color::PeachPink),
                x if x == stringify!(PeachPuff).to_lowercase() => Some(Color::PeachPuff),
                x if x == stringify!(Pearl).to_lowercase() => Some(Color::Pearl),
                x if x == stringify!(PearlWhite).to_lowercase() => Some(Color::PearlWhite),
                x if x == stringify!(Periwinkle).to_lowercase() => Some(Color::Periwinkle),
                x if x == stringify!(PeriwinklePink).to_lowercase() => Some(Color::PeriwinklePink),
                x if x == stringify!(PeriwinklePurple).to_lowercase() => {
                    Some(Color::PeriwinklePurple)
                }
                x if x == stringify!(Peru).to_lowercase() => Some(Color::Peru),
                x if x == stringify!(PetraGold).to_lowercase() => Some(Color::PetraGold),
                x if x == stringify!(PigPink).to_lowercase() => Some(Color::PigPink),
                x if x == stringify!(PineGreen).to_lowercase() => Some(Color::PineGreen),
                x if x == stringify!(Pink).to_lowercase() => Some(Color::Pink),
                x if x == stringify!(PinkBrown).to_lowercase() => Some(Color::PinkBrown),
                x if x == stringify!(PinkBubbleGum).to_lowercase() => Some(Color::PinkBubbleGum),
                x if x == stringify!(PinkCoral).to_lowercase() => Some(Color::PinkCoral),
                x if x == stringify!(PinkCupcake).to_lowercase() => Some(Color::PinkCupcake),
                x if x == stringify!(PinkDaisy).to_lowercase() => Some(Color::PinkDaisy),
                x if x == stringify!(PinkLemonade).to_lowercase() => Some(Color::PinkLemonade),
                x if x == stringify!(PinkOrange).to_lowercase() => Some(Color::PinkOrange),
                x if x == stringify!(PinkPlum).to_lowercase() => Some(Color::PinkPlum),
                x if x == stringify!(PinkViolet).to_lowercase() => Some(Color::PinkViolet),
                x if x == stringify!(PistachioGreen).to_lowercase() => Some(Color::PistachioGreen),
                x if x == stringify!(Platinum).to_lowercase() => Some(Color::Platinum),
                x if x == stringify!(PlatinumGray).to_lowercase() => Some(Color::PlatinumGray),
                x if x == stringify!(PlatinumSilver).to_lowercase() => Some(Color::PlatinumSilver),
                x if x == stringify!(Plum).to_lowercase() => Some(Color::Plum),
                x if x == stringify!(PlumPie).to_lowercase() => Some(Color::PlumPie),
                x if x == stringify!(PlumPurple).to_lowercase() => Some(Color::PlumPurple),
                x if x == stringify!(PlumVelvet).to_lowercase() => Some(Color::PlumVelvet),
                x if x == stringify!(PowderPink).to_lowercase() => Some(Color::PowderPink),
                x if x == stringify!(PowderBlue).to_lowercase() => Some(Color::PowderBlue),
                x if x == stringify!(Puce).to_lowercase() => Some(Color::Puce),
                x if x == stringify!(PullmanBrown).to_lowercase() => Some(Color::PullmanBrown),
                x if x == stringify!(PumpkinOrange).to_lowercase() => Some(Color::PumpkinOrange),
                x if x == stringify!(PumpkinPie).to_lowercase() => Some(Color::PumpkinPie),
                x if x == stringify!(Purple).to_lowercase() => Some(Color::Purple),
                x if x == stringify!(PurpleAmethyst).to_lowercase() => Some(Color::PurpleAmethyst),
                x if x == stringify!(PurpleDaffodil).to_lowercase() => Some(Color::PurpleDaffodil),
                x if x == stringify!(PurpleDragon).to_lowercase() => Some(Color::PurpleDragon),
                x if x == stringify!(PurpleFlower).to_lowercase() => Some(Color::PurpleFlower),
                x if x == stringify!(PurpleHaze).to_lowercase() => Some(Color::PurpleHaze),
                x if x == stringify!(PurpleIris).to_lowercase() => Some(Color::PurpleIris),
                x if x == stringify!(PurpleJam).to_lowercase() => Some(Color::PurpleJam),
                x if x == stringify!(PurpleLily).to_lowercase() => Some(Color::PurpleLily),
                x if x == stringify!(PurpleMaroon).to_lowercase() => Some(Color::PurpleMaroon),
                x if x == stringify!(PurpleMimosa).to_lowercase() => Some(Color::PurpleMimosa),
                x if x == stringify!(PurpleMonster).to_lowercase() => Some(Color::PurpleMonster),
                x if x == stringify!(PurpleNavy).to_lowercase() => Some(Color::PurpleNavy),
                x if x == stringify!(PurplePink).to_lowercase() => Some(Color::PurplePink),
                x if x == stringify!(PurplePlum).to_lowercase() => Some(Color::PurplePlum),
                x if x == stringify!(PurpleSageBush).to_lowercase() => Some(Color::PurpleSageBush),
                x if x == stringify!(PurpleThistle).to_lowercase() => Some(Color::PurpleThistle),
                x if x == stringify!(PurpleViolet).to_lowercase() => Some(Color::PurpleViolet),
                x if x == stringify!(PurpleWhite).to_lowercase() => Some(Color::PurpleWhite),
                x if x == stringify!(RacingGreen).to_lowercase() => Some(Color::RacingGreen),
                x if x == stringify!(Raspberry).to_lowercase() => Some(Color::Raspberry),
                x if x == stringify!(RaspberryPurple).to_lowercase() => {
                    Some(Color::RaspberryPurple)
                }
                x if x == stringify!(RatGray).to_lowercase() => Some(Color::RatGray),
                x if x == stringify!(RebeccaPurple).to_lowercase() => Some(Color::RebeccaPurple),
                x if x == stringify!(Red).to_lowercase() => Some(Color::Red),
                x if x == stringify!(RedBlood).to_lowercase() => Some(Color::RedBlood),
                x if x == stringify!(RedBrown).to_lowercase() => Some(Color::RedBrown),
                x if x == stringify!(RedDirt).to_lowercase() => Some(Color::RedDirt),
                x if x == stringify!(RedFox).to_lowercase() => Some(Color::RedFox),
                x if x == stringify!(RedGold).to_lowercase() => Some(Color::RedGold),
                x if x == stringify!(RedMagenta).to_lowercase() => Some(Color::RedMagenta),
                x if x == stringify!(RedPink).to_lowercase() => Some(Color::RedPink),
                x if x == stringify!(RedWhite).to_lowercase() => Some(Color::RedWhite),
                x if x == stringify!(RedWine).to_lowercase() => Some(Color::RedWine),
                x if x == stringify!(Rice).to_lowercase() => Some(Color::Rice),
                x if x == stringify!(RichLilac).to_lowercase() => Some(Color::RichLilac),
                x if x == stringify!(RobinEggBlue).to_lowercase() => Some(Color::RobinEggBlue),
                x if x == stringify!(RoguePink).to_lowercase() => Some(Color::RoguePink),
                x if x == stringify!(RomanSilver).to_lowercase() => Some(Color::RomanSilver),
                x if x == stringify!(Rose).to_lowercase() => Some(Color::Rose),
                x if x == stringify!(RoseDust).to_lowercase() => Some(Color::RoseDust),
                x if x == stringify!(RoseGold).to_lowercase() => Some(Color::RoseGold),
                x if x == stringify!(RosePink).to_lowercase() => Some(Color::RosePink),
                x if x == stringify!(RosePurple).to_lowercase() => Some(Color::RosePurple),
                x if x == stringify!(RoseQuartz).to_lowercase() => Some(Color::RoseQuartz),
                x if x == stringify!(RoseRed).to_lowercase() => Some(Color::RoseRed),
                x if x == stringify!(Rosy).to_lowercase() => Some(Color::Rosy),
                x if x == stringify!(RosyFinch).to_lowercase() => Some(Color::RosyFinch),
                x if x == stringify!(RosyPink).to_lowercase() => Some(Color::RosyPink),
                x if x == stringify!(RosyBrown).to_lowercase() => Some(Color::RosyBrown),
                x if x == stringify!(RoyalPink).to_lowercase() => Some(Color::RoyalPink),
                x if x == stringify!(RoyalBlue).to_lowercase() => Some(Color::RoyalBlue),
                x if x == stringify!(RubberDuckyYellow).to_lowercase() => {
                    Some(Color::RubberDuckyYellow)
                }
                x if x == stringify!(RubyRed).to_lowercase() => Some(Color::RubyRed),
                x if x == stringify!(Rust).to_lowercase() => Some(Color::Rust),
                x if x == stringify!(SaddleBrown).to_lowercase() => Some(Color::SaddleBrown),
                x if x == stringify!(SafetyOrange).to_lowercase() => Some(Color::SafetyOrange),
                x if x == stringify!(SafetyYellow).to_lowercase() => Some(Color::SafetyYellow),
                x if x == stringify!(Saffron).to_lowercase() => Some(Color::Saffron),
                x if x == stringify!(SaffronRed).to_lowercase() => Some(Color::SaffronRed),
                x if x == stringify!(Sage).to_lowercase() => Some(Color::Sage),
                x if x == stringify!(SageGreen).to_lowercase() => Some(Color::SageGreen),
                x if x == stringify!(SaladGreen).to_lowercase() => Some(Color::SaladGreen),
                x if x == stringify!(Salmon).to_lowercase() => Some(Color::Salmon),
                x if x == stringify!(SalmonPink).to_lowercase() => Some(Color::SalmonPink),
                x if x == stringify!(SamcoBlue).to_lowercase() => Some(Color::SamcoBlue),
                x if x == stringify!(Sand).to_lowercase() => Some(Color::Sand),
                x if x == stringify!(Sandstone).to_lowercase() => Some(Color::Sandstone),
                x if x == stringify!(SandyBrown).to_lowercase() => Some(Color::SandyBrown),
                x if x == stringify!(Sangria).to_lowercase() => Some(Color::Sangria),
                x if x == stringify!(SapphireBlue).to_lowercase() => Some(Color::SapphireBlue),
                x if x == stringify!(ScarletRed).to_lowercase() => Some(Color::ScarletRed),
                x if x == stringify!(SchoolBusYellow).to_lowercase() => {
                    Some(Color::SchoolBusYellow)
                }
                x if x == stringify!(SeaBlue).to_lowercase() => Some(Color::SeaBlue),
                x if x == stringify!(SeaTurtleGreen).to_lowercase() => Some(Color::SeaTurtleGreen),
                x if x == stringify!(SeaGreen).to_lowercase() => Some(Color::SeaGreen),
                x if x == stringify!(SeaShell).to_lowercase() => Some(Color::SeaShell),
                x if x == stringify!(SeafoamGreen).to_lowercase() => Some(Color::SeafoamGreen),
                x if x == stringify!(SeaweedGreen).to_lowercase() => Some(Color::SeaweedGreen),
                x if x == stringify!(Sedona).to_lowercase() => Some(Color::Sedona),
                x if x == stringify!(Sepia).to_lowercase() => Some(Color::Sepia),
                x if x == stringify!(SepiaBrown).to_lowercase() => Some(Color::SepiaBrown),
                x if x == stringify!(ShamrockGreen).to_lowercase() => Some(Color::ShamrockGreen),
                x if x == stringify!(SheetMetal).to_lowercase() => Some(Color::SheetMetal),
                x if x == stringify!(ShockingOrange).to_lowercase() => Some(Color::ShockingOrange),
                x if x == stringify!(Sienna).to_lowercase() => Some(Color::Sienna),
                x if x == stringify!(SilkBlue).to_lowercase() => Some(Color::SilkBlue),
                x if x == stringify!(Silver).to_lowercase() => Some(Color::Silver),
                x if x == stringify!(SilverPink).to_lowercase() => Some(Color::SilverPink),
                x if x == stringify!(SilverWhite).to_lowercase() => Some(Color::SilverWhite),
                x if x == stringify!(SkyBlueDress).to_lowercase() => Some(Color::SkyBlueDress),
                x if x == stringify!(SkyBlue).to_lowercase() => Some(Color::SkyBlue),
                x if x == stringify!(SlateBlueGray).to_lowercase() => Some(Color::SlateBlueGray),
                x if x == stringify!(SlateGraniteGray).to_lowercase() => {
                    Some(Color::SlateGraniteGray)
                }
                x if x == stringify!(SlateBlue).to_lowercase() => Some(Color::SlateBlue),
                x if x == stringify!(SlateGray).to_lowercase() => Some(Color::SlateGray),
                x if x == stringify!(SlateGrey).to_lowercase() => Some(Color::SlateGrey),
                x if x == stringify!(SlimeGreen).to_lowercase() => Some(Color::SlimeGreen),
                x if x == stringify!(SmokeyGray).to_lowercase() => Some(Color::SmokeyGray),
                x if x == stringify!(Snow).to_lowercase() => Some(Color::Snow),
                x if x == stringify!(SoftHazel).to_lowercase() => Some(Color::SoftHazel),
                x if x == stringify!(SoftIvory).to_lowercase() => Some(Color::SoftIvory),
                x if x == stringify!(SoftPink).to_lowercase() => Some(Color::SoftPink),
                x if x == stringify!(SonicSilver).to_lowercase() => Some(Color::SonicSilver),
                x if x == stringify!(SpringGreen).to_lowercase() => Some(Color::SpringGreen),
                x if x == stringify!(StainlessSteelGray).to_lowercase() => {
                    Some(Color::StainlessSteelGray)
                }
                x if x == stringify!(Steampunk).to_lowercase() => Some(Color::Steampunk),
                x if x == stringify!(SteelGray).to_lowercase() => Some(Color::SteelGray),
                x if x == stringify!(SteelBlue).to_lowercase() => Some(Color::SteelBlue),
                x if x == stringify!(StoplightGoGreen).to_lowercase() => {
                    Some(Color::StoplightGoGreen)
                }
                x if x == stringify!(StormyGray).to_lowercase() => Some(Color::StormyGray),
                x if x == stringify!(StrawberryRed).to_lowercase() => Some(Color::StrawberryRed),
                x if x == stringify!(SunYellow).to_lowercase() => Some(Color::SunYellow),
                x if x == stringify!(SunriseOrange).to_lowercase() => Some(Color::SunriseOrange),
                x if x == stringify!(Tan).to_lowercase() => Some(Color::Tan),
                x if x == stringify!(TanBrown).to_lowercase() => Some(Color::TanBrown),
                x if x == stringify!(Tangerine).to_lowercase() => Some(Color::Tangerine),
                x if x == stringify!(Taupe).to_lowercase() => Some(Color::Taupe),
                x if x == stringify!(TeaGreen).to_lowercase() => Some(Color::TeaGreen),
                x if x == stringify!(Teal).to_lowercase() => Some(Color::Teal),
                x if x == stringify!(TealBlue).to_lowercase() => Some(Color::TealBlue),
                x if x == stringify!(TealGreen).to_lowercase() => Some(Color::TealGreen),
                x if x == stringify!(Thistle).to_lowercase() => Some(Color::Thistle),
                x if x == stringify!(TiffanyBlue).to_lowercase() => Some(Color::TiffanyBlue),
                x if x == stringify!(TigerOrange).to_lowercase() => Some(Color::TigerOrange),
                x if x == stringify!(Tomato).to_lowercase() => Some(Color::Tomato),
                x if x == stringify!(TomatoSauceRed).to_lowercase() => Some(Color::TomatoSauceRed),
                x if x == stringify!(TronBlue).to_lowercase() => Some(Color::TronBlue),
                x if x == stringify!(TulipPink).to_lowercase() => Some(Color::TulipPink),
                x if x == stringify!(Turquoise).to_lowercase() => Some(Color::Turquoise),
                x if x == stringify!(TurquoiseGreen).to_lowercase() => Some(Color::TurquoiseGreen),
                x if x == stringify!(TyrianPurple).to_lowercase() => Some(Color::TyrianPurple),
                x if x == stringify!(UnbleachedSilk).to_lowercase() => Some(Color::UnbleachedSilk),
                x if x == stringify!(ValentineRed).to_lowercase() => Some(Color::ValentineRed),
                x if x == stringify!(VampireGray).to_lowercase() => Some(Color::VampireGray),
                x if x == stringify!(Vanilla).to_lowercase() => Some(Color::Vanilla),
                x if x == stringify!(VelvetMaroon).to_lowercase() => Some(Color::VelvetMaroon),
                x if x == stringify!(VenomGreen).to_lowercase() => Some(Color::VenomGreen),
                x if x == stringify!(Vermilion).to_lowercase() => Some(Color::Vermilion),
                x if x == stringify!(VeryPeri).to_lowercase() => Some(Color::VeryPeri),
                x if x == stringify!(Viola).to_lowercase() => Some(Color::Viola),
                x if x == stringify!(ViolaPurple).to_lowercase() => Some(Color::ViolaPurple),
                x if x == stringify!(Violet).to_lowercase() => Some(Color::Violet),
                x if x == stringify!(VioletRed).to_lowercase() => Some(Color::VioletRed),
                x if x == stringify!(WarmPink).to_lowercase() => Some(Color::WarmPink),
                x if x == stringify!(WarmWhite).to_lowercase() => Some(Color::WarmWhite),
                x if x == stringify!(Water).to_lowercase() => Some(Color::Water),
                x if x == stringify!(WatermelonPink).to_lowercase() => Some(Color::WatermelonPink),
                x if x == stringify!(WesternCharcoal).to_lowercase() => {
                    Some(Color::WesternCharcoal)
                }
                x if x == stringify!(Wheat).to_lowercase() => Some(Color::Wheat),
                x if x == stringify!(White).to_lowercase() => Some(Color::White),
                x if x == stringify!(WhiteBlue).to_lowercase() => Some(Color::WhiteBlue),
                x if x == stringify!(WhiteChocolate).to_lowercase() => Some(Color::WhiteChocolate),
                x if x == stringify!(WhiteGold).to_lowercase() => Some(Color::WhiteGold),
                x if x == stringify!(WhiteGray).to_lowercase() => Some(Color::WhiteGray),
                x if x == stringify!(WhiteIce).to_lowercase() => Some(Color::WhiteIce),
                x if x == stringify!(WhiteYellow).to_lowercase() => Some(Color::WhiteYellow),
                x if x == stringify!(WhiteSmoke).to_lowercase() => Some(Color::WhiteSmoke),
                x if x == stringify!(WindowsBlue).to_lowercase() => Some(Color::WindowsBlue),
                x if x == stringify!(WineRed).to_lowercase() => Some(Color::WineRed),
                x if x == stringify!(WisteriaPurple).to_lowercase() => Some(Color::WisteriaPurple),
                x if x == stringify!(Wood).to_lowercase() => Some(Color::Wood),
                x if x == stringify!(Yellow).to_lowercase() => Some(Color::Yellow),
                x if x == stringify!(YellowGreenGrosbeak).to_lowercase() => {
                    Some(Color::YellowGreenGrosbeak)
                }
                x if x == stringify!(YellowLawnGreen).to_lowercase() => {
                    Some(Color::YellowLawnGreen)
                }
                x if x == stringify!(YellowOrange).to_lowercase() => Some(Color::YellowOrange),
                x if x == stringify!(YellowGreen).to_lowercase() => Some(Color::YellowGreen),
                x if x == stringify!(ZombieGreen).to_lowercase() => Some(Color::ZombieGreen),
                _ => None,
            }
        }
    }
    #[doc = r" Get the RGB values of a color"]
    pub fn rgb(&self) -> (u8, u8, u8) {
        let hex = self.rgb_hex();
        (
            u8::from_str_radix(&hex[1..3], 16).unwrap(),
            u8::from_str_radix(&hex[3..5], 16).unwrap(),
            u8::from_str_radix(&hex[5..7], 16).unwrap(),
        )
    }
    #[doc = r" Get the hex value of a color"]
    pub fn rgb_hex(&self) -> String {
        match self {
            Self::AcidGreen => "#B0BF1A",
            Self::AlgaeGreen => "#64E986",
            Self::AliceBlue => "#F0F8FF",
            Self::AlienGray => "#736F6E",
            Self::AlienGreen => "#6CC417",
            Self::AloeVeraGreen => "#98F516",
            Self::Amber => "#FFBF00",
            Self::AntiqueBronze => "#665D1E",
            Self::AntiqueWhite => "#FAEBD7",
            Self::Aqua => "#00FFFF",
            Self::AquaGreen => "#12E193",
            Self::AquaSeafoamGreen => "#93E9BE",
            Self::Aquamarine => "#7FFFD4",
            Self::AquamarineStone => "#348781",
            Self::ArmyBrown => "#827B60",
            Self::ArmyGreen => "#4B5320",
            Self::AshGray => "#666362",
            Self::AshWhite => "#E9E4D4",
            Self::AvocadoGreen => "#B2C248",
            Self::AztechPurple => "#893BFF",
            Self::Azure => "#F0FFFF",
            Self::AzureBlue => "#4863A0",
            Self::BabyBlue => "#95B9C7",
            Self::BabyPink => "#FAAFBA",
            Self::BakersBrown => "#5C3317",
            Self::BalloonBlue => "#2B60DE",
            Self::BananaYellow => "#F5E216",
            Self::BarbiePink => "#DA1884",
            Self::BashfulPink => "#C25283",
            Self::BasilGreen => "#829F82",
            Self::BasketBallOrange => "#F88158",
            Self::BattleshipGray => "#848482",
            Self::BeanRed => "#F75D59",
            Self::BeeYellow => "#E9AB17",
            Self::Beer => "#FBB117",
            Self::BeetleGreen => "#4C787E",
            Self::Beige => "#F5F5DC",
            Self::Bisque => "#FFE4C4",
            Self::Black => "#000000",
            Self::BlackBean => "#3D0C02",
            Self::BlackBlue => "#040720",
            Self::BlackCat => "#413839",
            Self::BlackCow => "#4C4646",
            Self::BlackEel => "#463E3F",
            Self::BlanchedAlmond => "#FFEBCD",
            Self::Blonde => "#FBF6D9",
            Self::BloodNight => "#551606",
            Self::BloodRed => "#7E3517",
            Self::BlossomPink => "#F9B7FF",
            Self::Blue => "#0000FF",
            Self::BlueAngel => "#B7CEEC",
            Self::BlueDiamond => "#4EE2EC",
            Self::BlueDress => "#157DEC",
            Self::BlueEyes => "#1569C7",
            Self::BlueGray => "#98AFC7",
            Self::BlueGreen => "#7BCCB5",
            Self::BlueHosta => "#77BFC7",
            Self::BlueIvy => "#3090C7",
            Self::BlueJay => "#2B547E",
            Self::BlueKoi => "#659EC7",
            Self::BlueLagoon => "#8EEBEC",
            Self::BlueLotus => "#6960EC",
            Self::BlueMagenta => "#822EFF",
            Self::BlueMossGreen => "#3C565B",
            Self::BlueOrchid => "#1F45FC",
            Self::BlueRibbon => "#306EFF",
            Self::BlueTurquoise => "#43C6DB",
            Self::BlueWhale => "#342D7E",
            Self::BlueZircon => "#57FEFF",
            Self::BlueViolet => "#8A2BE2",
            Self::BlueberryBlue => "#0041C2",
            Self::Blurple => "#5865F2",
            Self::Blush => "#FFE6E8",
            Self::BlushPink => "#E6A9EC",
            Self::BlushRed => "#E56E94",
            Self::BoldYellow => "#F9DB24",
            Self::BoneWhite => "#F9F6EE",
            Self::BottleGreen => "#006A4E",
            Self::Brass => "#B5A642",
            Self::BrightBlue => "#0909FF",
            Self::BrightCyan => "#0AFFFF",
            Self::BrightGold => "#FDD017",
            Self::BrightGrape => "#6F2DA8",
            Self::BrightGreen => "#66FF00",
            Self::BrightLilac => "#D891EF",
            Self::BrightMaroon => "#C32148",
            Self::BrightNavyBlue => "#1974D2",
            Self::BrightNeonPink => "#F433FF",
            Self::BrightOrange => "#FF5F1F",
            Self::BrightPink => "#FF007F",
            Self::BrightPurple => "#6A0DAD",
            Self::BrightTeal => "#01F9C6",
            Self::BrightTurquoise => "#16E2F5",
            Self::BroccoliGreen => "#026C3D",
            Self::Bronze => "#CD7F32",
            Self::BronzeGold => "#C9AE5D",
            Self::Brown => "#A52A2A",
            Self::BrownBear => "#835C3B",
            Self::BrownRust => "#A55D35",
            Self::BrownSand => "#EE9A4D",
            Self::BrownSugar => "#E2A76F",
            Self::BulletShell => "#AF9B60",
            Self::Burgundy => "#8C001A",
            Self::BurlyWood => "#DEB887",
            Self::BurntPink => "#C12267",
            Self::ButterflyBlue => "#38ACEC",
            Self::CactusGreen => "#227442",
            Self::CadetBlue => "#5F9EA0",
            Self::CadillacPink => "#E38AAE",
            Self::CamelBrown => "#C19A6B",
            Self::CamouflageGreen => "#78866B",
            Self::CanaryBlue => "#2916F5",
            Self::CanaryYellow => "#FFEF00",
            Self::Cantaloupe => "#FFA62F",
            Self::Caramel => "#C68E17",
            Self::CarbonGray => "#625D5D",
            Self::CarbonRed => "#A70D2A",
            Self::CardboardBrown => "#EDDA74",
            Self::CarnationPink => "#F778A1",
            Self::CarrotOrange => "#F88017",
            Self::Celeste => "#50EBEC",
            Self::ChameleonGreen => "#BDF516",
            Self::Champagne => "#F7E7CE",
            Self::Charcoal => "#34282C",
            Self::CharcoalBlue => "#36454F",
            Self::Chartreuse => "#7FFF00",
            Self::CheeseOrange => "#FFA600",
            Self::CherryRed => "#C24641",
            Self::Chestnut => "#954535",
            Self::ChestnutRed => "#C34A2C",
            Self::ChilliPepper => "#C11B17",
            Self::Chocolate => "#D2691E",
            Self::ChocolateBrown => "#3F000F",
            Self::ChromeAluminum => "#A8A9AD",
            Self::ChromeGold => "#FFCE44",
            Self::ChromeGreen => "#1AA260",
            Self::ChromePink => "#FF33AA",
            Self::ChromeWhite => "#E8F1D4",
            Self::Cinnamon => "#C58917",
            Self::CitronGreen => "#8FB31D",
            Self::ClematisViolet => "#842DCE",
            Self::CloudyGray => "#6D6968",
            Self::CloverGreen => "#3EA055",
            Self::CobaltBlue => "#0020C2",
            Self::Coffee => "#6F4E37",
            Self::ColdMetal => "#9B9A96",
            Self::ColumbiaBlue => "#87AFC7",
            Self::ConstructionConeOrange => "#F87431",
            Self::CookieBrown => "#C7A317",
            Self::Copper => "#B87333",
            Self::CopperRed => "#CB6D51",
            Self::Coral => "#FF7F50",
            Self::CoralBlue => "#AFDCEC",
            Self::CoralBrown => "#9E4638",
            Self::CoralPeach => "#FBD5AB",
            Self::CornYellow => "#FFF380",
            Self::CornflowerBlue => "#6495ED",
            Self::Cornsilk => "#FFF8DC",
            Self::CosmicLatte => "#FFF8E7",
            Self::Cotton => "#FBFBF9",
            Self::CottonCandy => "#FCDFFF",
            Self::Cranberry => "#9F000F",
            Self::Cream => "#FFFFCC",
            Self::CreamWhite => "#FFFDD0",
            Self::CreamyWhite => "#F0E9D6",
            Self::Crimson => "#DC143C",
            Self::CrimsonPurple => "#E238EC",
            Self::CrimsonRed => "#990000",
            Self::CrocusPurple => "#9172EC",
            Self::CrystalBlue => "#5CB3FF",
            Self::Cyan => "#00FFFF",
            Self::CyanBlue => "#14A3C7",
            Self::CyanOpaque => "#92C7C7",
            Self::DarkAlmond => "#AB784E",
            Self::DarkBeige => "#9F8C76",
            Self::DarkBisque => "#B86500",
            Self::DarkBlonde => "#F0E2B6",
            Self::DarkBlueGray => "#29465B",
            Self::DarkBlurple => "#5539CC",
            Self::DarkBronze => "#804A00",
            Self::DarkBrown => "#654321",
            Self::DarkCarnationPink => "#C12283",
            Self::DarkCoffee => "#3B2F2F",
            Self::DarkForestGreen => "#254117",
            Self::DarkGainsboro => "#8C8C8C",
            Self::DarkGold => "#AA6C39",
            Self::DarkGrayishOlive => "#4A412A",
            Self::DarkGreenBlue => "#1F6357",
            Self::DarkHazelBrown => "#473810",
            Self::DarkHotPink => "#F660AB",
            Self::DarkLimeGreen => "#41A317",
            Self::DarkMaroon => "#2F0909",
            Self::DarkMint => "#31906E",
            Self::DarkMoccasin => "#827839",
            Self::DarkPink => "#E75480",
            Self::DarkPurple => "#4B0150",
            Self::DarkRaspberry => "#872657",
            Self::DarkScarlet => "#560319",
            Self::DarkSienna => "#8A4117",
            Self::DarkSkyBlue => "#0059FF",
            Self::DarkSlate => "#2B3856",
            Self::DarkSteampunk => "#4D4D4F",
            Self::DarkTeal => "#045D5D",
            Self::DarkWhite => "#E1D9D1",
            Self::DarkYellow => "#8B8000",
            Self::DarkBlue => "#00008B",
            Self::DarkCyan => "#008B8B",
            Self::DarkGoldenRod => "#B8860B",
            Self::DarkGray => "#A9A9A9",
            Self::DarkGreen => "#006400",
            Self::DarkGrey => "#A9A9A9",
            Self::DarkKhaki => "#BDB76B",
            Self::DarkMagenta => "#8B008B",
            Self::DarkOliveGreen => "#556B2F",
            Self::DarkOrange => "#FF8C00",
            Self::DarkOrchid => "#9932CC",
            Self::DarkRed => "#8B0000",
            Self::DarkSalmon => "#E9967A",
            Self::DarkSeaGreen => "#8FBC8F",
            Self::DarkSlateBlue => "#483D8B",
            Self::DarkSlateGray => "#25383C",
            Self::DarkSlateGrey => "#25383C",
            Self::DarkTurquoise => "#00CED1",
            Self::DarkViolet => "#9400D3",
            Self::DaySkyBlue => "#82CAFF",
            Self::DeepAmber => "#A05544",
            Self::DeepEmeraldGreen => "#046307",
            Self::DeepGreen => "#056608",
            Self::DeepMauve => "#DF73D4",
            Self::DeepPeach => "#FFCBA4",
            Self::DeepPeriwinkle => "#5453A6",
            Self::DeepPurple => "#36013F",
            Self::DeepRed => "#800517",
            Self::DeepRose => "#FBBBB9",
            Self::DeepSea => "#3B9C9C",
            Self::DeepSeaBlue => "#123456",
            Self::DeepSeaGreen => "#306754",
            Self::DeepTeal => "#033E3E",
            Self::DeepTurquoise => "#48CCCD",
            Self::DeepYellow => "#F6BE00",
            Self::DeepPink => "#FF1493",
            Self::DeepSkyBlue => "#00BFFF",
            Self::DeerBrown => "#E6BF83",
            Self::DenimBlue => "#79BAEC",
            Self::DenimDarkBlue => "#151B8D",
            Self::DesertSand => "#EDC9AF",
            Self::DimGray => "#696969",
            Self::DimGrey => "#696969",
            Self::DimorphothecaMagenta => "#E3319D",
            Self::DinosaurGreen => "#73A16C",
            Self::DirtyWhite => "#E8E4C9",
            Self::DodgerBlue => "#1E90FF",
            Self::DollarBillGreen => "#85BB65",
            Self::DonutPink => "#FAAFBE",
            Self::DragonGreen => "#6AFB92",
            Self::DullGreenYellow => "#B1FB17",
            Self::DullPurple => "#7F525D",
            Self::DullSeaGreen => "#4E8975",
            Self::DuskyPink => "#CC7A8B",
            Self::DustyPink => "#D58A94",
            Self::DustyRose => "#C9A9A6",
            Self::EarthBlue => "#0000A5",
            Self::EarthGreen => "#34A56F",
            Self::Ebony => "#555D50",
            Self::EggShell => "#FFF9E3",
            Self::Eggplant => "#614051",
            Self::ElectricBlue => "#9AFEFF",
            Self::ElfGreen => "#1B8A6B",
            Self::Emerald => "#50C878",
            Self::EmeraldGreen => "#5FFB17",
            Self::EstorilBlue => "#2F539B",
            Self::FallForestGreen => "#4E9258",
            Self::FallLeafBrown => "#C8B560",
            Self::FernGreen => "#667C26",
            Self::FerrariRed => "#F70D1A",
            Self::FireEngineRed => "#F62817",
            Self::FireBrick => "#B22222",
            Self::FlamingoPink => "#F9A7B0",
            Self::FloralWhite => "#FFFAF0",
            Self::FluroOrange => "#FE632A",
            Self::ForestGreen => "#228B22",
            Self::FrenchLilac => "#86608E",
            Self::FrogGreen => "#99C68E",
            Self::Fuchsia => "#FF00FF",
            Self::FuchsiaPink => "#FF77FF",
            Self::Gainsboro => "#DCDCDC",
            Self::GarnetRed => "#733635",
            Self::GearSteelGray => "#C0C6C7",
            Self::GhostWhite => "#F8F8FF",
            Self::GingerBrown => "#C9BE62",
            Self::GingerRed => "#B83C08",
            Self::GlacialBlueIce => "#368BC1",
            Self::Gold => "#FFD700",
            Self::GoldPink => "#E6C7C2",
            Self::GoldenBlonde => "#FBE7A1",
            Self::GoldenBrown => "#EAC117",
            Self::GoldenSilk => "#F3E3C3",
            Self::GoldenYellow => "#FFDF00",
            Self::GoldenRod => "#DAA520",
            Self::Granite => "#837E7C",
            Self::Grape => "#5E5A80",
            Self::Grapefruit => "#DC381F",
            Self::GrassGreen => "#3F9B0B",
            Self::Gray => "#808080",
            Self::GrayBrown => "#3D3635",
            Self::GrayCloud => "#B6B6B4",
            Self::GrayDolphin => "#5C5858",
            Self::GrayGoose => "#D1D0CE",
            Self::GrayGreen => "#A2AD9C",
            Self::GrayWolf => "#504A4B",
            Self::GrayishTurquoise => "#5E7D7E",
            Self::Green => "#008000",
            Self::GreenApple => "#4CC417",
            Self::GreenLeaves => "#3A5F0B",
            Self::GreenOnion => "#6AA121",
            Self::GreenPeas => "#89C35C",
            Self::GreenPepper => "#4AA02C",
            Self::GreenSnake => "#6CBB3C",
            Self::GreenThumb => "#B5EAAA",
            Self::GreenYellow => "#ADFF2F",
            Self::GreenishBlue => "#307D7E",
            Self::Grey => "#808080",
            Self::GulfBlue => "#C9DFEC",
            Self::Gunmetal => "#2C3539",
            Self::GunmetalGray => "#8D918D",
            Self::HalfWhite => "#FFFEFA",
            Self::HalloweenOrange => "#E66C2C",
            Self::HarvestGold => "#EDE275",
            Self::Hazel => "#8E7618",
            Self::HazelGreen => "#617C58",
            Self::HeavenlyBlue => "#C6DEFF",
            Self::HeliotropePurple => "#D462FF",
            Self::HoneyDew => "#F0FFF0",
            Self::HotDeepPink => "#F52887",
            Self::HotPink => "#FF69B4",
            Self::HummingbirdGreen => "#7FE817",
            Self::HunterGreen => "#355E3B",
            Self::Iceberg => "#56A5EC",
            Self::IguanaGreen => "#9CB071",
            Self::IndianSaffron => "#FF7722",
            Self::IndianRed => "#CD5C5C",
            Self::Indigo => "#4B0082",
            Self::Iridium => "#3D3C3A",
            Self::IrishGreen => "#08A04B",
            Self::IronGray => "#52595D",
            Self::IsleOfManGreen => "#22CE83",
            Self::Ivory => "#FFFFF0",
            Self::Jade => "#00A36C",
            Self::JadeGreen => "#5EFB6E",
            Self::JasminePurple => "#A23BEC",
            Self::JeansBlue => "#A0CFEC",
            Self::Jellyfish => "#46C7C7",
            Self::JetGray => "#616D7E",
            Self::JungleGreen => "#347C2C",
            Self::KellyGreen => "#4CC552",
            Self::Khaki => "#F0E68C",
            Self::KhakiBrown => "#906E3E",
            Self::KhakiGreen => "#8A865D",
            Self::KhakiRose => "#C5908E",
            Self::LapisBlue => "#15317E",
            Self::LavaRed => "#E42217",
            Self::Lavender => "#E6E6FA",
            Self::LavenderBlue => "#E3E4FA",
            Self::LavenderPinocchio => "#EBDDE2",
            Self::LavenderPurple => "#967BB6",
            Self::LavenderBlush => "#FFF0F5",
            Self::LawnGreen => "#7CFC00",
            Self::LemonGreen => "#ADF802",
            Self::LemonYellow => "#FEF250",
            Self::LemonChiffon => "#FFFACD",
            Self::LightAquamarine => "#93FFE8",
            Self::LightBeige => "#FFF0DB",
            Self::LightBlack => "#454545",
            Self::LightBrown => "#B5651D",
            Self::LightCopper => "#DA8A67",
            Self::LightDayBlue => "#ADDFFF",
            Self::LightFrenchBeige => "#C8AD7F",
            Self::LightGold => "#F1E5AC",
            Self::LightJade => "#C3FDB8",
            Self::LightMintGreen => "#C2E5D3",
            Self::LightOliveGreen => "#B8BC86",
            Self::LightOrange => "#FED8B1",
            Self::LightPurple => "#8467D7",
            Self::LightPurpleBlue => "#728FCE",
            Self::LightRed => "#FFCCCB",
            Self::LightRose => "#FBCFCD",
            Self::LightRoseGreen => "#DBF9DB",
            Self::LightSalmonRose => "#F9966B",
            Self::LightSlate => "#CCFFFF",
            Self::LightSlateBlue => "#736AFF",
            Self::LightSteelGray => "#E0E5E5",
            Self::LightTeal => "#B3D9D9",
            Self::LightWhite => "#FFFFF7",
            Self::LightBlue => "#ADD8E6",
            Self::LightCoral => "#F08080",
            Self::LightCyan => "#E0FFFF",
            Self::LightGoldenRodYellow => "#FAFAD2",
            Self::LightGray => "#D3D3D3",
            Self::LightGreen => "#90EE90",
            Self::LightGrey => "#D3D3D3",
            Self::LightPink => "#FFB6C1",
            Self::LightSalmon => "#FFA07A",
            Self::LightSeaGreen => "#20B2AA",
            Self::LightSkyBlue => "#87CEFA",
            Self::LightSlateGray => "#778899",
            Self::LightSlateGrey => "#778899",
            Self::LightSteelBlue => "#B0CFDE",
            Self::LightYellow => "#FFFFE0",
            Self::Lilac => "#C8A2C8",
            Self::Lime => "#00FF00",
            Self::LimeMintGreen => "#36F57F",
            Self::LimeGreen => "#32CD32",
            Self::Linen => "#FAF0E6",
            Self::LipstickPink => "#C48793",
            Self::LotusGreen => "#004225",
            Self::LoveRed => "#E41B17",
            Self::LovelyPurple => "#7F38EC",
            Self::MacaroniandCheese => "#F2BB66",
            Self::MacawBlueGreen => "#43BFC7",
            Self::Magenta => "#FF00FF",
            Self::MagentaPink => "#CC338B",
            Self::MagicMint => "#AAF0D1",
            Self::Mahogany => "#C04000",
            Self::MangoOrange => "#FF8040",
            Self::MarbleBlue => "#566D7E",
            Self::Maroon => "#800000",
            Self::MaroonRed => "#8F0B0B",
            Self::Mauve => "#E0B0FF",
            Self::MauveTaupe => "#915F6D",
            Self::MediumForestGreen => "#347235",
            Self::MediumTeal => "#045F5F",
            Self::MediumAquaMarine => "#66CDAA",
            Self::MediumBlue => "#0000CD",
            Self::MediumOrchid => "#BA55D3",
            Self::MediumPurple => "#9370DB",
            Self::MediumSeaGreen => "#3CB371",
            Self::MediumSlateBlue => "#7B68EE",
            Self::MediumSpringGreen => "#00FA9A",
            Self::MediumTurquoise => "#48D1CC",
            Self::MediumVioletRed => "#C71585",
            Self::Metal => "#B6B6B6",
            Self::MetallicBronze => "#A97142",
            Self::MetallicGold => "#D4AF37",
            Self::MetallicGreen => "#7C9D8E",
            Self::MetallicSilver => "#BCC6CC",
            Self::MiddayBlue => "#3BB9FF",
            Self::Midnight => "#2B1B17",
            Self::MidnightPurple => "#2E1A47",
            Self::MidnightBlue => "#191970",
            Self::MilitaryGreen => "#4E5B31",
            Self::MilkChocolate => "#513B1C",
            Self::MilkWhite => "#FEFCFF",
            Self::MillenniumJade => "#93917C",
            Self::Mint => "#3EB489",
            Self::MintGreen => "#98FF98",
            Self::MintCream => "#F5FFFA",
            Self::MistBlue => "#646D7E",
            Self::MistyRose => "#FFE4E1",
            Self::Moccasin => "#FFE4B5",
            Self::Mocha => "#493D26",
            Self::MossGreen => "#8A9A5B",
            Self::Mustard => "#E1AD01",
            Self::MustardYellow => "#FFDB58",
            Self::NardoGray => "#686A6C",
            Self::NavajoWhite => "#FFDEAD",
            Self::Navy => "#000080",
            Self::NebulaGreen => "#59E817",
            Self::NeonBlue => "#1589FF",
            Self::NeonGold => "#FDBD01",
            Self::NeonGreen => "#16F529",
            Self::NeonHotPink => "#FD349C",
            Self::NeonOrange => "#FF6700",
            Self::NeonPink => "#F535AA",
            Self::NeonPurple => "#9D00FF",
            Self::NeonRed => "#FD1C03",
            Self::NeonYellow => "#FFFF33",
            Self::NeonYellowGreen => "#DAEE01",
            Self::NewMidnightBlue => "#0000A0",
            Self::Night => "#0C090A",
            Self::NightBlue => "#151B54",
            Self::NorthernLightsBlue => "#78C7C7",
            Self::OakBrown => "#806517",
            Self::OceanBlue => "#2B65EC",
            Self::OceanGreen => "#00FF80",
            Self::OffWhite => "#F8F0E3",
            Self::Oil => "#3B3131",
            Self::OldBurgundy => "#43302E",
            Self::OldRose => "#C08081",
            Self::OldLace => "#FEF0E3",
            Self::Olive => "#808000",
            Self::OliveGreen => "#BAB86C",
            Self::OliveDrab => "#6B8E23",
            Self::Orange => "#FFA500",
            Self::OrangeGold => "#D4A017",
            Self::OrangeSalmon => "#C47451",
            Self::OrangeYellow => "#FFAE42",
            Self::OrangeRed => "#FF4500",
            Self::Orchid => "#DA70D6",
            Self::OrchidPurple => "#B048B5",
            Self::OrganicBrown => "#E3F9A6",
            Self::PaleBlueLily => "#CFECEC",
            Self::PaleLilac => "#DCD0FF",
            Self::PalePink => "#F2D4D7",
            Self::PaleSilver => "#C9C0BB",
            Self::PaleGoldenRod => "#EEE8AA",
            Self::PaleGreen => "#98FB98",
            Self::PaleTurquoise => "#AFEEEE",
            Self::PaleVioletRed => "#DB7093",
            Self::PapayaOrange => "#E56717",
            Self::PapayaWhip => "#FFEFD5",
            Self::Parchment => "#FFFFC2",
            Self::ParrotGreen => "#12AD2B",
            Self::PastelBlue => "#B4CFEC",
            Self::PastelBrown => "#B1907F",
            Self::PastelGreen => "#77DD77",
            Self::PastelIndigo => "#8686AF",
            Self::PastelLightBlue => "#D5D6EA",
            Self::PastelOrange => "#F8B88B",
            Self::PastelPink => "#FEA3AA",
            Self::PastelPurple => "#F2A2E8",
            Self::PastelRed => "#F67280",
            Self::PastelRose => "#E5788F",
            Self::PastelViolet => "#D291BC",
            Self::PastelYellow => "#FAF884",
            Self::PeaGreen => "#52D017",
            Self::Peach => "#FFE5B4",
            Self::PeachPink => "#F98B88",
            Self::PeachPuff => "#FFDAB9",
            Self::Pearl => "#FDEEF4",
            Self::PearlWhite => "#F8F6F0",
            Self::Periwinkle => "#CCCCFF",
            Self::PeriwinklePink => "#E9CFEC",
            Self::PeriwinklePurple => "#7575CF",
            Self::Peru => "#CD853F",
            Self::PetraGold => "#B76734",
            Self::PigPink => "#FDD7E4",
            Self::PineGreen => "#387C44",
            Self::Pink => "#FFC0CB",
            Self::PinkBrown => "#C48189",
            Self::PinkBubbleGum => "#FFDFDD",
            Self::PinkCoral => "#E77471",
            Self::PinkCupcake => "#E45E9D",
            Self::PinkDaisy => "#E799A3",
            Self::PinkLemonade => "#E4287C",
            Self::PinkOrange => "#F89880",
            Self::PinkPlum => "#B93B8F",
            Self::PinkViolet => "#CA226B",
            Self::PistachioGreen => "#9DC209",
            Self::Platinum => "#E5E4E2",
            Self::PlatinumGray => "#797979",
            Self::PlatinumSilver => "#CECECE",
            Self::Plum => "#DDA0DD",
            Self::PlumPie => "#7D0541",
            Self::PlumPurple => "#583759",
            Self::PlumVelvet => "#7D0552",
            Self::PowderPink => "#FFB2D0",
            Self::PowderBlue => "#B0E0E6",
            Self::Puce => "#7F5A58",
            Self::PullmanBrown => "#644117",
            Self::PumpkinOrange => "#F87217",
            Self::PumpkinPie => "#CA762B",
            Self::Purple => "#800080",
            Self::PurpleAmethyst => "#6C2DC7",
            Self::PurpleDaffodil => "#B041FF",
            Self::PurpleDragon => "#C38EC7",
            Self::PurpleFlower => "#A74AC7",
            Self::PurpleHaze => "#4E387E",
            Self::PurpleIris => "#571B7E",
            Self::PurpleJam => "#6A287E",
            Self::PurpleLily => "#550A35",
            Self::PurpleMaroon => "#810541",
            Self::PurpleMimosa => "#9E7BFF",
            Self::PurpleMonster => "#461B7E",
            Self::PurpleNavy => "#4E5180",
            Self::PurplePink => "#D16587",
            Self::PurplePlum => "#8E35EF",
            Self::PurpleSageBush => "#7A5DC7",
            Self::PurpleThistle => "#D2B9D3",
            Self::PurpleViolet => "#8D38C9",
            Self::PurpleWhite => "#DFD3E3",
            Self::RacingGreen => "#27742C",
            Self::Raspberry => "#E30B5D",
            Self::RaspberryPurple => "#B3446C",
            Self::RatGray => "#6D7B8D",
            Self::RebeccaPurple => "#663399",
            Self::Red => "#FF0000",
            Self::RedBlood => "#660000",
            Self::RedBrown => "#622F22",
            Self::RedDirt => "#7F5217",
            Self::RedFox => "#C35817",
            Self::RedGold => "#EB5406",
            Self::RedMagenta => "#FF0080",
            Self::RedPink => "#FA2A55",
            Self::RedWhite => "#F3E8EA",
            Self::RedWine => "#990012",
            Self::Rice => "#FAF5EF",
            Self::RichLilac => "#B666D2",
            Self::RobinEggBlue => "#BDEDFF",
            Self::RoguePink => "#C12869",
            Self::RomanSilver => "#838996",
            Self::Rose => "#E8ADAA",
            Self::RoseDust => "#997070",
            Self::RoseGold => "#ECC5C0",
            Self::RosePink => "#E7A1B0",
            Self::RosePurple => "#B09FCA",
            Self::RoseQuartz => "#F7CAC9",
            Self::RoseRed => "#C21E56",
            Self::Rosy => "#A17188",
            Self::RosyFinch => "#7F4E52",
            Self::RosyPink => "#B38481",
            Self::RosyBrown => "#BC8F8F",
            Self::RoyalPink => "#E759AC",
            Self::RoyalBlue => "#4169E1",
            Self::RubberDuckyYellow => "#FFD801",
            Self::RubyRed => "#F62217",
            Self::Rust => "#C36241",
            Self::SaddleBrown => "#8B4513",
            Self::SafetyOrange => "#FF7900",
            Self::SafetyYellow => "#EED202",
            Self::Saffron => "#FBB917",
            Self::SaffronRed => "#931314",
            Self::Sage => "#BCB88A",
            Self::SageGreen => "#848B79",
            Self::SaladGreen => "#A1C935",
            Self::Salmon => "#FA8072",
            Self::SalmonPink => "#FF8674",
            Self::SamcoBlue => "#0002FF",
            Self::Sand => "#C2B280",
            Self::Sandstone => "#786D5F",
            Self::SandyBrown => "#F4A460",
            Self::Sangria => "#7E3817",
            Self::SapphireBlue => "#2554C7",
            Self::ScarletRed => "#FF2400",
            Self::SchoolBusYellow => "#E8A317",
            Self::SeaBlue => "#C2DFFF",
            Self::SeaTurtleGreen => "#438D80",
            Self::SeaGreen => "#2E8B57",
            Self::SeaShell => "#FFF5EE",
            Self::SeafoamGreen => "#3EA99F",
            Self::SeaweedGreen => "#437C17",
            Self::Sedona => "#CC6600",
            Self::Sepia => "#7F462C",
            Self::SepiaBrown => "#704214",
            Self::ShamrockGreen => "#347C17",
            Self::SheetMetal => "#888B90",
            Self::ShockingOrange => "#E55B3C",
            Self::Sienna => "#A0522D",
            Self::SilkBlue => "#488AC7",
            Self::Silver => "#C0C0C0",
            Self::SilverPink => "#C4AEAD",
            Self::SilverWhite => "#DADBDD",
            Self::SkyBlueDress => "#6698FF",
            Self::SkyBlue => "#87CEEB",
            Self::SlateBlueGray => "#737CA1",
            Self::SlateGraniteGray => "#657383",
            Self::SlateBlue => "#6A5ACD",
            Self::SlateGray => "#708090",
            Self::SlateGrey => "#708090",
            Self::SlimeGreen => "#BCE954",
            Self::SmokeyGray => "#726E6D",
            Self::Snow => "#FFFAFA",
            Self::SoftHazel => "#C6BA8B",
            Self::SoftIvory => "#FAF0DD",
            Self::SoftPink => "#FFB8BF",
            Self::SonicSilver => "#757575",
            Self::SpringGreen => "#00FF7F",
            Self::StainlessSteelGray => "#99A3A3",
            Self::Steampunk => "#C9C1C1",
            Self::SteelGray => "#71797E",
            Self::SteelBlue => "#4682B4",
            Self::StoplightGoGreen => "#57E964",
            Self::StormyGray => "#3A3B3C",
            Self::StrawberryRed => "#C83F49",
            Self::SunYellow => "#FFE87C",
            Self::SunriseOrange => "#E67451",
            Self::Tan => "#D2B48C",
            Self::TanBrown => "#ECE5B6",
            Self::Tangerine => "#E78A61",
            Self::Taupe => "#483C32",
            Self::TeaGreen => "#CCFB5D",
            Self::Teal => "#008080",
            Self::TealBlue => "#007C80",
            Self::TealGreen => "#00827F",
            Self::Thistle => "#D8BFD8",
            Self::TiffanyBlue => "#81D8D0",
            Self::TigerOrange => "#C88141",
            Self::Tomato => "#FF6347",
            Self::TomatoSauceRed => "#B21807",
            Self::TronBlue => "#7DFDFE",
            Self::TulipPink => "#C25A7C",
            Self::Turquoise => "#40E0D0",
            Self::TurquoiseGreen => "#A0D6B4",
            Self::TyrianPurple => "#C45AEC",
            Self::UnbleachedSilk => "#FFDDCA",
            Self::ValentineRed => "#E55451",
            Self::VampireGray => "#565051",
            Self::Vanilla => "#F3E5AB",
            Self::VelvetMaroon => "#7E354D",
            Self::VenomGreen => "#728C00",
            Self::Vermilion => "#7E191B",
            Self::VeryPeri => "#6667AB",
            Self::Viola => "#C8C4DF",
            Self::ViolaPurple => "#7E587E",
            Self::Violet => "#EE82EE",
            Self::VioletRed => "#F6358A",
            Self::WarmPink => "#F6C6BD",
            Self::WarmWhite => "#EFEBD8",
            Self::Water => "#EBF4FA",
            Self::WatermelonPink => "#FC6C85",
            Self::WesternCharcoal => "#49413F",
            Self::Wheat => "#F5DEB3",
            Self::White => "#FFFFFF",
            Self::WhiteBlue => "#DBE9FA",
            Self::WhiteChocolate => "#EDE6D6",
            Self::WhiteGold => "#FFFFF4",
            Self::WhiteGray => "#EEEEEE",
            Self::WhiteIce => "#EAEEE9",
            Self::WhiteYellow => "#F2F0DF",
            Self::WhiteSmoke => "#F5F5F5",
            Self::WindowsBlue => "#357EC7",
            Self::WineRed => "#990012",
            Self::WisteriaPurple => "#C6AEC7",
            Self::Wood => "#966F33",
            Self::Yellow => "#FFFF00",
            Self::YellowGreenGrosbeak => "#E2F516",
            Self::YellowLawnGreen => "#87F717",
            Self::YellowOrange => "#FFAE42",
            Self::YellowGreen => "#9ACD32",
            Self::ZombieGreen => "#54C571",
            Self::Rgb(r, g, b) => return format!("#{:02X}{:02X}{:02X}", r, g, b),
        }
        .to_string()
    }
    #[doc = r" Get the name of the color as a string"]
    pub fn name(&self) -> String {
        match self {
            Self::AcidGreen => stringify!(AcidGreen),
            Self::AlgaeGreen => stringify!(AlgaeGreen),
            Self::AliceBlue => stringify!(AliceBlue),
            Self::AlienGray => stringify!(AlienGray),
            Self::AlienGreen => stringify!(AlienGreen),
            Self::AloeVeraGreen => stringify!(AloeVeraGreen),
            Self::Amber => stringify!(Amber),
            Self::AntiqueBronze => stringify!(AntiqueBronze),
            Self::AntiqueWhite => stringify!(AntiqueWhite),
            Self::Aqua => stringify!(Aqua),
            Self::AquaGreen => stringify!(AquaGreen),
            Self::AquaSeafoamGreen => stringify!(AquaSeafoamGreen),
            Self::Aquamarine => stringify!(Aquamarine),
            Self::AquamarineStone => stringify!(AquamarineStone),
            Self::ArmyBrown => stringify!(ArmyBrown),
            Self::ArmyGreen => stringify!(ArmyGreen),
            Self::AshGray => stringify!(AshGray),
            Self::AshWhite => stringify!(AshWhite),
            Self::AvocadoGreen => stringify!(AvocadoGreen),
            Self::AztechPurple => stringify!(AztechPurple),
            Self::Azure => stringify!(Azure),
            Self::AzureBlue => stringify!(AzureBlue),
            Self::BabyBlue => stringify!(BabyBlue),
            Self::BabyPink => stringify!(BabyPink),
            Self::BakersBrown => stringify!(BakersBrown),
            Self::BalloonBlue => stringify!(BalloonBlue),
            Self::BananaYellow => stringify!(BananaYellow),
            Self::BarbiePink => stringify!(BarbiePink),
            Self::BashfulPink => stringify!(BashfulPink),
            Self::BasilGreen => stringify!(BasilGreen),
            Self::BasketBallOrange => stringify!(BasketBallOrange),
            Self::BattleshipGray => stringify!(BattleshipGray),
            Self::BeanRed => stringify!(BeanRed),
            Self::BeeYellow => stringify!(BeeYellow),
            Self::Beer => stringify!(Beer),
            Self::BeetleGreen => stringify!(BeetleGreen),
            Self::Beige => stringify!(Beige),
            Self::Bisque => stringify!(Bisque),
            Self::Black => stringify!(Black),
            Self::BlackBean => stringify!(BlackBean),
            Self::BlackBlue => stringify!(BlackBlue),
            Self::BlackCat => stringify!(BlackCat),
            Self::BlackCow => stringify!(BlackCow),
            Self::BlackEel => stringify!(BlackEel),
            Self::BlanchedAlmond => stringify!(BlanchedAlmond),
            Self::Blonde => stringify!(Blonde),
            Self::BloodNight => stringify!(BloodNight),
            Self::BloodRed => stringify!(BloodRed),
            Self::BlossomPink => stringify!(BlossomPink),
            Self::Blue => stringify!(Blue),
            Self::BlueAngel => stringify!(BlueAngel),
            Self::BlueDiamond => stringify!(BlueDiamond),
            Self::BlueDress => stringify!(BlueDress),
            Self::BlueEyes => stringify!(BlueEyes),
            Self::BlueGray => stringify!(BlueGray),
            Self::BlueGreen => stringify!(BlueGreen),
            Self::BlueHosta => stringify!(BlueHosta),
            Self::BlueIvy => stringify!(BlueIvy),
            Self::BlueJay => stringify!(BlueJay),
            Self::BlueKoi => stringify!(BlueKoi),
            Self::BlueLagoon => stringify!(BlueLagoon),
            Self::BlueLotus => stringify!(BlueLotus),
            Self::BlueMagenta => stringify!(BlueMagenta),
            Self::BlueMossGreen => stringify!(BlueMossGreen),
            Self::BlueOrchid => stringify!(BlueOrchid),
            Self::BlueRibbon => stringify!(BlueRibbon),
            Self::BlueTurquoise => stringify!(BlueTurquoise),
            Self::BlueWhale => stringify!(BlueWhale),
            Self::BlueZircon => stringify!(BlueZircon),
            Self::BlueViolet => stringify!(BlueViolet),
            Self::BlueberryBlue => stringify!(BlueberryBlue),
            Self::Blurple => stringify!(Blurple),
            Self::Blush => stringify!(Blush),
            Self::BlushPink => stringify!(BlushPink),
            Self::BlushRed => stringify!(BlushRed),
            Self::BoldYellow => stringify!(BoldYellow),
            Self::BoneWhite => stringify!(BoneWhite),
            Self::BottleGreen => stringify!(BottleGreen),
            Self::Brass => stringify!(Brass),
            Self::BrightBlue => stringify!(BrightBlue),
            Self::BrightCyan => stringify!(BrightCyan),
            Self::BrightGold => stringify!(BrightGold),
            Self::BrightGrape => stringify!(BrightGrape),
            Self::BrightGreen => stringify!(BrightGreen),
            Self::BrightLilac => stringify!(BrightLilac),
            Self::BrightMaroon => stringify!(BrightMaroon),
            Self::BrightNavyBlue => stringify!(BrightNavyBlue),
            Self::BrightNeonPink => stringify!(BrightNeonPink),
            Self::BrightOrange => stringify!(BrightOrange),
            Self::BrightPink => stringify!(BrightPink),
            Self::BrightPurple => stringify!(BrightPurple),
            Self::BrightTeal => stringify!(BrightTeal),
            Self::BrightTurquoise => stringify!(BrightTurquoise),
            Self::BroccoliGreen => stringify!(BroccoliGreen),
            Self::Bronze => stringify!(Bronze),
            Self::BronzeGold => stringify!(BronzeGold),
            Self::Brown => stringify!(Brown),
            Self::BrownBear => stringify!(BrownBear),
            Self::BrownRust => stringify!(BrownRust),
            Self::BrownSand => stringify!(BrownSand),
            Self::BrownSugar => stringify!(BrownSugar),
            Self::BulletShell => stringify!(BulletShell),
            Self::Burgundy => stringify!(Burgundy),
            Self::BurlyWood => stringify!(BurlyWood),
            Self::BurntPink => stringify!(BurntPink),
            Self::ButterflyBlue => stringify!(ButterflyBlue),
            Self::CactusGreen => stringify!(CactusGreen),
            Self::CadetBlue => stringify!(CadetBlue),
            Self::CadillacPink => stringify!(CadillacPink),
            Self::CamelBrown => stringify!(CamelBrown),
            Self::CamouflageGreen => stringify!(CamouflageGreen),
            Self::CanaryBlue => stringify!(CanaryBlue),
            Self::CanaryYellow => stringify!(CanaryYellow),
            Self::Cantaloupe => stringify!(Cantaloupe),
            Self::Caramel => stringify!(Caramel),
            Self::CarbonGray => stringify!(CarbonGray),
            Self::CarbonRed => stringify!(CarbonRed),
            Self::CardboardBrown => stringify!(CardboardBrown),
            Self::CarnationPink => stringify!(CarnationPink),
            Self::CarrotOrange => stringify!(CarrotOrange),
            Self::Celeste => stringify!(Celeste),
            Self::ChameleonGreen => stringify!(ChameleonGreen),
            Self::Champagne => stringify!(Champagne),
            Self::Charcoal => stringify!(Charcoal),
            Self::CharcoalBlue => stringify!(CharcoalBlue),
            Self::Chartreuse => stringify!(Chartreuse),
            Self::CheeseOrange => stringify!(CheeseOrange),
            Self::CherryRed => stringify!(CherryRed),
            Self::Chestnut => stringify!(Chestnut),
            Self::ChestnutRed => stringify!(ChestnutRed),
            Self::ChilliPepper => stringify!(ChilliPepper),
            Self::Chocolate => stringify!(Chocolate),
            Self::ChocolateBrown => stringify!(ChocolateBrown),
            Self::ChromeAluminum => stringify!(ChromeAluminum),
            Self::ChromeGold => stringify!(ChromeGold),
            Self::ChromeGreen => stringify!(ChromeGreen),
            Self::ChromePink => stringify!(ChromePink),
            Self::ChromeWhite => stringify!(ChromeWhite),
            Self::Cinnamon => stringify!(Cinnamon),
            Self::CitronGreen => stringify!(CitronGreen),
            Self::ClematisViolet => stringify!(ClematisViolet),
            Self::CloudyGray => stringify!(CloudyGray),
            Self::CloverGreen => stringify!(CloverGreen),
            Self::CobaltBlue => stringify!(CobaltBlue),
            Self::Coffee => stringify!(Coffee),
            Self::ColdMetal => stringify!(ColdMetal),
            Self::ColumbiaBlue => stringify!(ColumbiaBlue),
            Self::ConstructionConeOrange => stringify!(ConstructionConeOrange),
            Self::CookieBrown => stringify!(CookieBrown),
            Self::Copper => stringify!(Copper),
            Self::CopperRed => stringify!(CopperRed),
            Self::Coral => stringify!(Coral),
            Self::CoralBlue => stringify!(CoralBlue),
            Self::CoralBrown => stringify!(CoralBrown),
            Self::CoralPeach => stringify!(CoralPeach),
            Self::CornYellow => stringify!(CornYellow),
            Self::CornflowerBlue => stringify!(CornflowerBlue),
            Self::Cornsilk => stringify!(Cornsilk),
            Self::CosmicLatte => stringify!(CosmicLatte),
            Self::Cotton => stringify!(Cotton),
            Self::CottonCandy => stringify!(CottonCandy),
            Self::Cranberry => stringify!(Cranberry),
            Self::Cream => stringify!(Cream),
            Self::CreamWhite => stringify!(CreamWhite),
            Self::CreamyWhite => stringify!(CreamyWhite),
            Self::Crimson => stringify!(Crimson),
            Self::CrimsonPurple => stringify!(CrimsonPurple),
            Self::CrimsonRed => stringify!(CrimsonRed),
            Self::CrocusPurple => stringify!(CrocusPurple),
            Self::CrystalBlue => stringify!(CrystalBlue),
            Self::Cyan => stringify!(Cyan),
            Self::CyanBlue => stringify!(CyanBlue),
            Self::CyanOpaque => stringify!(CyanOpaque),
            Self::DarkAlmond => stringify!(DarkAlmond),
            Self::DarkBeige => stringify!(DarkBeige),
            Self::DarkBisque => stringify!(DarkBisque),
            Self::DarkBlonde => stringify!(DarkBlonde),
            Self::DarkBlueGray => stringify!(DarkBlueGray),
            Self::DarkBlurple => stringify!(DarkBlurple),
            Self::DarkBronze => stringify!(DarkBronze),
            Self::DarkBrown => stringify!(DarkBrown),
            Self::DarkCarnationPink => stringify!(DarkCarnationPink),
            Self::DarkCoffee => stringify!(DarkCoffee),
            Self::DarkForestGreen => stringify!(DarkForestGreen),
            Self::DarkGainsboro => stringify!(DarkGainsboro),
            Self::DarkGold => stringify!(DarkGold),
            Self::DarkGrayishOlive => stringify!(DarkGrayishOlive),
            Self::DarkGreenBlue => stringify!(DarkGreenBlue),
            Self::DarkHazelBrown => stringify!(DarkHazelBrown),
            Self::DarkHotPink => stringify!(DarkHotPink),
            Self::DarkLimeGreen => stringify!(DarkLimeGreen),
            Self::DarkMaroon => stringify!(DarkMaroon),
            Self::DarkMint => stringify!(DarkMint),
            Self::DarkMoccasin => stringify!(DarkMoccasin),
            Self::DarkPink => stringify!(DarkPink),
            Self::DarkPurple => stringify!(DarkPurple),
            Self::DarkRaspberry => stringify!(DarkRaspberry),
            Self::DarkScarlet => stringify!(DarkScarlet),
            Self::DarkSienna => stringify!(DarkSienna),
            Self::DarkSkyBlue => stringify!(DarkSkyBlue),
            Self::DarkSlate => stringify!(DarkSlate),
            Self::DarkSteampunk => stringify!(DarkSteampunk),
            Self::DarkTeal => stringify!(DarkTeal),
            Self::DarkWhite => stringify!(DarkWhite),
            Self::DarkYellow => stringify!(DarkYellow),
            Self::DarkBlue => stringify!(DarkBlue),
            Self::DarkCyan => stringify!(DarkCyan),
            Self::DarkGoldenRod => stringify!(DarkGoldenRod),
            Self::DarkGray => stringify!(DarkGray),
            Self::DarkGreen => stringify!(DarkGreen),
            Self::DarkGrey => stringify!(DarkGrey),
            Self::DarkKhaki => stringify!(DarkKhaki),
            Self::DarkMagenta => stringify!(DarkMagenta),
            Self::DarkOliveGreen => stringify!(DarkOliveGreen),
            Self::DarkOrange => stringify!(DarkOrange),
            Self::DarkOrchid => stringify!(DarkOrchid),
            Self::DarkRed => stringify!(DarkRed),
            Self::DarkSalmon => stringify!(DarkSalmon),
            Self::DarkSeaGreen => stringify!(DarkSeaGreen),
            Self::DarkSlateBlue => stringify!(DarkSlateBlue),
            Self::DarkSlateGray => stringify!(DarkSlateGray),
            Self::DarkSlateGrey => stringify!(DarkSlateGrey),
            Self::DarkTurquoise => stringify!(DarkTurquoise),
            Self::DarkViolet => stringify!(DarkViolet),
            Self::DaySkyBlue => stringify!(DaySkyBlue),
            Self::DeepAmber => stringify!(DeepAmber),
            Self::DeepEmeraldGreen => stringify!(DeepEmeraldGreen),
            Self::DeepGreen => stringify!(DeepGreen),
            Self::DeepMauve => stringify!(DeepMauve),
            Self::DeepPeach => stringify!(DeepPeach),
            Self::DeepPeriwinkle => stringify!(DeepPeriwinkle),
            Self::DeepPurple => stringify!(DeepPurple),
            Self::DeepRed => stringify!(DeepRed),
            Self::DeepRose => stringify!(DeepRose),
            Self::DeepSea => stringify!(DeepSea),
            Self::DeepSeaBlue => stringify!(DeepSeaBlue),
            Self::DeepSeaGreen => stringify!(DeepSeaGreen),
            Self::DeepTeal => stringify!(DeepTeal),
            Self::DeepTurquoise => stringify!(DeepTurquoise),
            Self::DeepYellow => stringify!(DeepYellow),
            Self::DeepPink => stringify!(DeepPink),
            Self::DeepSkyBlue => stringify!(DeepSkyBlue),
            Self::DeerBrown => stringify!(DeerBrown),
            Self::DenimBlue => stringify!(DenimBlue),
            Self::DenimDarkBlue => stringify!(DenimDarkBlue),
            Self::DesertSand => stringify!(DesertSand),
            Self::DimGray => stringify!(DimGray),
            Self::DimGrey => stringify!(DimGrey),
            Self::DimorphothecaMagenta => stringify!(DimorphothecaMagenta),
            Self::DinosaurGreen => stringify!(DinosaurGreen),
            Self::DirtyWhite => stringify!(DirtyWhite),
            Self::DodgerBlue => stringify!(DodgerBlue),
            Self::DollarBillGreen => stringify!(DollarBillGreen),
            Self::DonutPink => stringify!(DonutPink),
            Self::DragonGreen => stringify!(DragonGreen),
            Self::DullGreenYellow => stringify!(DullGreenYellow),
            Self::DullPurple => stringify!(DullPurple),
            Self::DullSeaGreen => stringify!(DullSeaGreen),
            Self::DuskyPink => stringify!(DuskyPink),
            Self::DustyPink => stringify!(DustyPink),
            Self::DustyRose => stringify!(DustyRose),
            Self::EarthBlue => stringify!(EarthBlue),
            Self::EarthGreen => stringify!(EarthGreen),
            Self::Ebony => stringify!(Ebony),
            Self::EggShell => stringify!(EggShell),
            Self::Eggplant => stringify!(Eggplant),
            Self::ElectricBlue => stringify!(ElectricBlue),
            Self::ElfGreen => stringify!(ElfGreen),
            Self::Emerald => stringify!(Emerald),
            Self::EmeraldGreen => stringify!(EmeraldGreen),
            Self::EstorilBlue => stringify!(EstorilBlue),
            Self::FallForestGreen => stringify!(FallForestGreen),
            Self::FallLeafBrown => stringify!(FallLeafBrown),
            Self::FernGreen => stringify!(FernGreen),
            Self::FerrariRed => stringify!(FerrariRed),
            Self::FireEngineRed => stringify!(FireEngineRed),
            Self::FireBrick => stringify!(FireBrick),
            Self::FlamingoPink => stringify!(FlamingoPink),
            Self::FloralWhite => stringify!(FloralWhite),
            Self::FluroOrange => stringify!(FluroOrange),
            Self::ForestGreen => stringify!(ForestGreen),
            Self::FrenchLilac => stringify!(FrenchLilac),
            Self::FrogGreen => stringify!(FrogGreen),
            Self::Fuchsia => stringify!(Fuchsia),
            Self::FuchsiaPink => stringify!(FuchsiaPink),
            Self::Gainsboro => stringify!(Gainsboro),
            Self::GarnetRed => stringify!(GarnetRed),
            Self::GearSteelGray => stringify!(GearSteelGray),
            Self::GhostWhite => stringify!(GhostWhite),
            Self::GingerBrown => stringify!(GingerBrown),
            Self::GingerRed => stringify!(GingerRed),
            Self::GlacialBlueIce => stringify!(GlacialBlueIce),
            Self::Gold => stringify!(Gold),
            Self::GoldPink => stringify!(GoldPink),
            Self::GoldenBlonde => stringify!(GoldenBlonde),
            Self::GoldenBrown => stringify!(GoldenBrown),
            Self::GoldenSilk => stringify!(GoldenSilk),
            Self::GoldenYellow => stringify!(GoldenYellow),
            Self::GoldenRod => stringify!(GoldenRod),
            Self::Granite => stringify!(Granite),
            Self::Grape => stringify!(Grape),
            Self::Grapefruit => stringify!(Grapefruit),
            Self::GrassGreen => stringify!(GrassGreen),
            Self::Gray => stringify!(Gray),
            Self::GrayBrown => stringify!(GrayBrown),
            Self::GrayCloud => stringify!(GrayCloud),
            Self::GrayDolphin => stringify!(GrayDolphin),
            Self::GrayGoose => stringify!(GrayGoose),
            Self::GrayGreen => stringify!(GrayGreen),
            Self::GrayWolf => stringify!(GrayWolf),
            Self::GrayishTurquoise => stringify!(GrayishTurquoise),
            Self::Green => stringify!(Green),
            Self::GreenApple => stringify!(GreenApple),
            Self::GreenLeaves => stringify!(GreenLeaves),
            Self::GreenOnion => stringify!(GreenOnion),
            Self::GreenPeas => stringify!(GreenPeas),
            Self::GreenPepper => stringify!(GreenPepper),
            Self::GreenSnake => stringify!(GreenSnake),
            Self::GreenThumb => stringify!(GreenThumb),
            Self::GreenYellow => stringify!(GreenYellow),
            Self::GreenishBlue => stringify!(GreenishBlue),
            Self::Grey => stringify!(Grey),
            Self::GulfBlue => stringify!(GulfBlue),
            Self::Gunmetal => stringify!(Gunmetal),
            Self::GunmetalGray => stringify!(GunmetalGray),
            Self::HalfWhite => stringify!(HalfWhite),
            Self::HalloweenOrange => stringify!(HalloweenOrange),
            Self::HarvestGold => stringify!(HarvestGold),
            Self::Hazel => stringify!(Hazel),
            Self::HazelGreen => stringify!(HazelGreen),
            Self::HeavenlyBlue => stringify!(HeavenlyBlue),
            Self::HeliotropePurple => stringify!(HeliotropePurple),
            Self::HoneyDew => stringify!(HoneyDew),
            Self::HotDeepPink => stringify!(HotDeepPink),
            Self::HotPink => stringify!(HotPink),
            Self::HummingbirdGreen => stringify!(HummingbirdGreen),
            Self::HunterGreen => stringify!(HunterGreen),
            Self::Iceberg => stringify!(Iceberg),
            Self::IguanaGreen => stringify!(IguanaGreen),
            Self::IndianSaffron => stringify!(IndianSaffron),
            Self::IndianRed => stringify!(IndianRed),
            Self::Indigo => stringify!(Indigo),
            Self::Iridium => stringify!(Iridium),
            Self::IrishGreen => stringify!(IrishGreen),
            Self::IronGray => stringify!(IronGray),
            Self::IsleOfManGreen => stringify!(IsleOfManGreen),
            Self::Ivory => stringify!(Ivory),
            Self::Jade => stringify!(Jade),
            Self::JadeGreen => stringify!(JadeGreen),
            Self::JasminePurple => stringify!(JasminePurple),
            Self::JeansBlue => stringify!(JeansBlue),
            Self::Jellyfish => stringify!(Jellyfish),
            Self::JetGray => stringify!(JetGray),
            Self::JungleGreen => stringify!(JungleGreen),
            Self::KellyGreen => stringify!(KellyGreen),
            Self::Khaki => stringify!(Khaki),
            Self::KhakiBrown => stringify!(KhakiBrown),
            Self::KhakiGreen => stringify!(KhakiGreen),
            Self::KhakiRose => stringify!(KhakiRose),
            Self::LapisBlue => stringify!(LapisBlue),
            Self::LavaRed => stringify!(LavaRed),
            Self::Lavender => stringify!(Lavender),
            Self::LavenderBlue => stringify!(LavenderBlue),
            Self::LavenderPinocchio => stringify!(LavenderPinocchio),
            Self::LavenderPurple => stringify!(LavenderPurple),
            Self::LavenderBlush => stringify!(LavenderBlush),
            Self::LawnGreen => stringify!(LawnGreen),
            Self::LemonGreen => stringify!(LemonGreen),
            Self::LemonYellow => stringify!(LemonYellow),
            Self::LemonChiffon => stringify!(LemonChiffon),
            Self::LightAquamarine => stringify!(LightAquamarine),
            Self::LightBeige => stringify!(LightBeige),
            Self::LightBlack => stringify!(LightBlack),
            Self::LightBrown => stringify!(LightBrown),
            Self::LightCopper => stringify!(LightCopper),
            Self::LightDayBlue => stringify!(LightDayBlue),
            Self::LightFrenchBeige => stringify!(LightFrenchBeige),
            Self::LightGold => stringify!(LightGold),
            Self::LightJade => stringify!(LightJade),
            Self::LightMintGreen => stringify!(LightMintGreen),
            Self::LightOliveGreen => stringify!(LightOliveGreen),
            Self::LightOrange => stringify!(LightOrange),
            Self::LightPurple => stringify!(LightPurple),
            Self::LightPurpleBlue => stringify!(LightPurpleBlue),
            Self::LightRed => stringify!(LightRed),
            Self::LightRose => stringify!(LightRose),
            Self::LightRoseGreen => stringify!(LightRoseGreen),
            Self::LightSalmonRose => stringify!(LightSalmonRose),
            Self::LightSlate => stringify!(LightSlate),
            Self::LightSlateBlue => stringify!(LightSlateBlue),
            Self::LightSteelGray => stringify!(LightSteelGray),
            Self::LightTeal => stringify!(LightTeal),
            Self::LightWhite => stringify!(LightWhite),
            Self::LightBlue => stringify!(LightBlue),
            Self::LightCoral => stringify!(LightCoral),
            Self::LightCyan => stringify!(LightCyan),
            Self::LightGoldenRodYellow => stringify!(LightGoldenRodYellow),
            Self::LightGray => stringify!(LightGray),
            Self::LightGreen => stringify!(LightGreen),
            Self::LightGrey => stringify!(LightGrey),
            Self::LightPink => stringify!(LightPink),
            Self::LightSalmon => stringify!(LightSalmon),
            Self::LightSeaGreen => stringify!(LightSeaGreen),
            Self::LightSkyBlue => stringify!(LightSkyBlue),
            Self::LightSlateGray => stringify!(LightSlateGray),
            Self::LightSlateGrey => stringify!(LightSlateGrey),
            Self::LightSteelBlue => stringify!(LightSteelBlue),
            Self::LightYellow => stringify!(LightYellow),
            Self::Lilac => stringify!(Lilac),
            Self::Lime => stringify!(Lime),
            Self::LimeMintGreen => stringify!(LimeMintGreen),
            Self::LimeGreen => stringify!(LimeGreen),
            Self::Linen => stringify!(Linen),
            Self::LipstickPink => stringify!(LipstickPink),
            Self::LotusGreen => stringify!(LotusGreen),
            Self::LoveRed => stringify!(LoveRed),
            Self::LovelyPurple => stringify!(LovelyPurple),
            Self::MacaroniandCheese => stringify!(MacaroniandCheese),
            Self::MacawBlueGreen => stringify!(MacawBlueGreen),
            Self::Magenta => stringify!(Magenta),
            Self::MagentaPink => stringify!(MagentaPink),
            Self::MagicMint => stringify!(MagicMint),
            Self::Mahogany => stringify!(Mahogany),
            Self::MangoOrange => stringify!(MangoOrange),
            Self::MarbleBlue => stringify!(MarbleBlue),
            Self::Maroon => stringify!(Maroon),
            Self::MaroonRed => stringify!(MaroonRed),
            Self::Mauve => stringify!(Mauve),
            Self::MauveTaupe => stringify!(MauveTaupe),
            Self::MediumForestGreen => stringify!(MediumForestGreen),
            Self::MediumTeal => stringify!(MediumTeal),
            Self::MediumAquaMarine => stringify!(MediumAquaMarine),
            Self::MediumBlue => stringify!(MediumBlue),
            Self::MediumOrchid => stringify!(MediumOrchid),
            Self::MediumPurple => stringify!(MediumPurple),
            Self::MediumSeaGreen => stringify!(MediumSeaGreen),
            Self::MediumSlateBlue => stringify!(MediumSlateBlue),
            Self::MediumSpringGreen => stringify!(MediumSpringGreen),
            Self::MediumTurquoise => stringify!(MediumTurquoise),
            Self::MediumVioletRed => stringify!(MediumVioletRed),
            Self::Metal => stringify!(Metal),
            Self::MetallicBronze => stringify!(MetallicBronze),
            Self::MetallicGold => stringify!(MetallicGold),
            Self::MetallicGreen => stringify!(MetallicGreen),
            Self::MetallicSilver => stringify!(MetallicSilver),
            Self::MiddayBlue => stringify!(MiddayBlue),
            Self::Midnight => stringify!(Midnight),
            Self::MidnightPurple => stringify!(MidnightPurple),
            Self::MidnightBlue => stringify!(MidnightBlue),
            Self::MilitaryGreen => stringify!(MilitaryGreen),
            Self::MilkChocolate => stringify!(MilkChocolate),
            Self::MilkWhite => stringify!(MilkWhite),
            Self::MillenniumJade => stringify!(MillenniumJade),
            Self::Mint => stringify!(Mint),
            Self::MintGreen => stringify!(MintGreen),
            Self::MintCream => stringify!(MintCream),
            Self::MistBlue => stringify!(MistBlue),
            Self::MistyRose => stringify!(MistyRose),
            Self::Moccasin => stringify!(Moccasin),
            Self::Mocha => stringify!(Mocha),
            Self::MossGreen => stringify!(MossGreen),
            Self::Mustard => stringify!(Mustard),
            Self::MustardYellow => stringify!(MustardYellow),
            Self::NardoGray => stringify!(NardoGray),
            Self::NavajoWhite => stringify!(NavajoWhite),
            Self::Navy => stringify!(Navy),
            Self::NebulaGreen => stringify!(NebulaGreen),
            Self::NeonBlue => stringify!(NeonBlue),
            Self::NeonGold => stringify!(NeonGold),
            Self::NeonGreen => stringify!(NeonGreen),
            Self::NeonHotPink => stringify!(NeonHotPink),
            Self::NeonOrange => stringify!(NeonOrange),
            Self::NeonPink => stringify!(NeonPink),
            Self::NeonPurple => stringify!(NeonPurple),
            Self::NeonRed => stringify!(NeonRed),
            Self::NeonYellow => stringify!(NeonYellow),
            Self::NeonYellowGreen => stringify!(NeonYellowGreen),
            Self::NewMidnightBlue => stringify!(NewMidnightBlue),
            Self::Night => stringify!(Night),
            Self::NightBlue => stringify!(NightBlue),
            Self::NorthernLightsBlue => stringify!(NorthernLightsBlue),
            Self::OakBrown => stringify!(OakBrown),
            Self::OceanBlue => stringify!(OceanBlue),
            Self::OceanGreen => stringify!(OceanGreen),
            Self::OffWhite => stringify!(OffWhite),
            Self::Oil => stringify!(Oil),
            Self::OldBurgundy => stringify!(OldBurgundy),
            Self::OldRose => stringify!(OldRose),
            Self::OldLace => stringify!(OldLace),
            Self::Olive => stringify!(Olive),
            Self::OliveGreen => stringify!(OliveGreen),
            Self::OliveDrab => stringify!(OliveDrab),
            Self::Orange => stringify!(Orange),
            Self::OrangeGold => stringify!(OrangeGold),
            Self::OrangeSalmon => stringify!(OrangeSalmon),
            Self::OrangeYellow => stringify!(OrangeYellow),
            Self::OrangeRed => stringify!(OrangeRed),
            Self::Orchid => stringify!(Orchid),
            Self::OrchidPurple => stringify!(OrchidPurple),
            Self::OrganicBrown => stringify!(OrganicBrown),
            Self::PaleBlueLily => stringify!(PaleBlueLily),
            Self::PaleLilac => stringify!(PaleLilac),
            Self::PalePink => stringify!(PalePink),
            Self::PaleSilver => stringify!(PaleSilver),
            Self::PaleGoldenRod => stringify!(PaleGoldenRod),
            Self::PaleGreen => stringify!(PaleGreen),
            Self::PaleTurquoise => stringify!(PaleTurquoise),
            Self::PaleVioletRed => stringify!(PaleVioletRed),
            Self::PapayaOrange => stringify!(PapayaOrange),
            Self::PapayaWhip => stringify!(PapayaWhip),
            Self::Parchment => stringify!(Parchment),
            Self::ParrotGreen => stringify!(ParrotGreen),
            Self::PastelBlue => stringify!(PastelBlue),
            Self::PastelBrown => stringify!(PastelBrown),
            Self::PastelGreen => stringify!(PastelGreen),
            Self::PastelIndigo => stringify!(PastelIndigo),
            Self::PastelLightBlue => stringify!(PastelLightBlue),
            Self::PastelOrange => stringify!(PastelOrange),
            Self::PastelPink => stringify!(PastelPink),
            Self::PastelPurple => stringify!(PastelPurple),
            Self::PastelRed => stringify!(PastelRed),
            Self::PastelRose => stringify!(PastelRose),
            Self::PastelViolet => stringify!(PastelViolet),
            Self::PastelYellow => stringify!(PastelYellow),
            Self::PeaGreen => stringify!(PeaGreen),
            Self::Peach => stringify!(Peach),
            Self::PeachPink => stringify!(PeachPink),
            Self::PeachPuff => stringify!(PeachPuff),
            Self::Pearl => stringify!(Pearl),
            Self::PearlWhite => stringify!(PearlWhite),
            Self::Periwinkle => stringify!(Periwinkle),
            Self::PeriwinklePink => stringify!(PeriwinklePink),
            Self::PeriwinklePurple => stringify!(PeriwinklePurple),
            Self::Peru => stringify!(Peru),
            Self::PetraGold => stringify!(PetraGold),
            Self::PigPink => stringify!(PigPink),
            Self::PineGreen => stringify!(PineGreen),
            Self::Pink => stringify!(Pink),
            Self::PinkBrown => stringify!(PinkBrown),
            Self::PinkBubbleGum => stringify!(PinkBubbleGum),
            Self::PinkCoral => stringify!(PinkCoral),
            Self::PinkCupcake => stringify!(PinkCupcake),
            Self::PinkDaisy => stringify!(PinkDaisy),
            Self::PinkLemonade => stringify!(PinkLemonade),
            Self::PinkOrange => stringify!(PinkOrange),
            Self::PinkPlum => stringify!(PinkPlum),
            Self::PinkViolet => stringify!(PinkViolet),
            Self::PistachioGreen => stringify!(PistachioGreen),
            Self::Platinum => stringify!(Platinum),
            Self::PlatinumGray => stringify!(PlatinumGray),
            Self::PlatinumSilver => stringify!(PlatinumSilver),
            Self::Plum => stringify!(Plum),
            Self::PlumPie => stringify!(PlumPie),
            Self::PlumPurple => stringify!(PlumPurple),
            Self::PlumVelvet => stringify!(PlumVelvet),
            Self::PowderPink => stringify!(PowderPink),
            Self::PowderBlue => stringify!(PowderBlue),
            Self::Puce => stringify!(Puce),
            Self::PullmanBrown => stringify!(PullmanBrown),
            Self::PumpkinOrange => stringify!(PumpkinOrange),
            Self::PumpkinPie => stringify!(PumpkinPie),
            Self::Purple => stringify!(Purple),
            Self::PurpleAmethyst => stringify!(PurpleAmethyst),
            Self::PurpleDaffodil => stringify!(PurpleDaffodil),
            Self::PurpleDragon => stringify!(PurpleDragon),
            Self::PurpleFlower => stringify!(PurpleFlower),
            Self::PurpleHaze => stringify!(PurpleHaze),
            Self::PurpleIris => stringify!(PurpleIris),
            Self::PurpleJam => stringify!(PurpleJam),
            Self::PurpleLily => stringify!(PurpleLily),
            Self::PurpleMaroon => stringify!(PurpleMaroon),
            Self::PurpleMimosa => stringify!(PurpleMimosa),
            Self::PurpleMonster => stringify!(PurpleMonster),
            Self::PurpleNavy => stringify!(PurpleNavy),
            Self::PurplePink => stringify!(PurplePink),
            Self::PurplePlum => stringify!(PurplePlum),
            Self::PurpleSageBush => stringify!(PurpleSageBush),
            Self::PurpleThistle => stringify!(PurpleThistle),
            Self::PurpleViolet => stringify!(PurpleViolet),
            Self::PurpleWhite => stringify!(PurpleWhite),
            Self::RacingGreen => stringify!(RacingGreen),
            Self::Raspberry => stringify!(Raspberry),
            Self::RaspberryPurple => stringify!(RaspberryPurple),
            Self::RatGray => stringify!(RatGray),
            Self::RebeccaPurple => stringify!(RebeccaPurple),
            Self::Red => stringify!(Red),
            Self::RedBlood => stringify!(RedBlood),
            Self::RedBrown => stringify!(RedBrown),
            Self::RedDirt => stringify!(RedDirt),
            Self::RedFox => stringify!(RedFox),
            Self::RedGold => stringify!(RedGold),
            Self::RedMagenta => stringify!(RedMagenta),
            Self::RedPink => stringify!(RedPink),
            Self::RedWhite => stringify!(RedWhite),
            Self::RedWine => stringify!(RedWine),
            Self::Rice => stringify!(Rice),
            Self::RichLilac => stringify!(RichLilac),
            Self::RobinEggBlue => stringify!(RobinEggBlue),
            Self::RoguePink => stringify!(RoguePink),
            Self::RomanSilver => stringify!(RomanSilver),
            Self::Rose => stringify!(Rose),
            Self::RoseDust => stringify!(RoseDust),
            Self::RoseGold => stringify!(RoseGold),
            Self::RosePink => stringify!(RosePink),
            Self::RosePurple => stringify!(RosePurple),
            Self::RoseQuartz => stringify!(RoseQuartz),
            Self::RoseRed => stringify!(RoseRed),
            Self::Rosy => stringify!(Rosy),
            Self::RosyFinch => stringify!(RosyFinch),
            Self::RosyPink => stringify!(RosyPink),
            Self::RosyBrown => stringify!(RosyBrown),
            Self::RoyalPink => stringify!(RoyalPink),
            Self::RoyalBlue => stringify!(RoyalBlue),
            Self::RubberDuckyYellow => stringify!(RubberDuckyYellow),
            Self::RubyRed => stringify!(RubyRed),
            Self::Rust => stringify!(Rust),
            Self::SaddleBrown => stringify!(SaddleBrown),
            Self::SafetyOrange => stringify!(SafetyOrange),
            Self::SafetyYellow => stringify!(SafetyYellow),
            Self::Saffron => stringify!(Saffron),
            Self::SaffronRed => stringify!(SaffronRed),
            Self::Sage => stringify!(Sage),
            Self::SageGreen => stringify!(SageGreen),
            Self::SaladGreen => stringify!(SaladGreen),
            Self::Salmon => stringify!(Salmon),
            Self::SalmonPink => stringify!(SalmonPink),
            Self::SamcoBlue => stringify!(SamcoBlue),
            Self::Sand => stringify!(Sand),
            Self::Sandstone => stringify!(Sandstone),
            Self::SandyBrown => stringify!(SandyBrown),
            Self::Sangria => stringify!(Sangria),
            Self::SapphireBlue => stringify!(SapphireBlue),
            Self::ScarletRed => stringify!(ScarletRed),
            Self::SchoolBusYellow => stringify!(SchoolBusYellow),
            Self::SeaBlue => stringify!(SeaBlue),
            Self::SeaTurtleGreen => stringify!(SeaTurtleGreen),
            Self::SeaGreen => stringify!(SeaGreen),
            Self::SeaShell => stringify!(SeaShell),
            Self::SeafoamGreen => stringify!(SeafoamGreen),
            Self::SeaweedGreen => stringify!(SeaweedGreen),
            Self::Sedona => stringify!(Sedona),
            Self::Sepia => stringify!(Sepia),
            Self::SepiaBrown => stringify!(SepiaBrown),
            Self::ShamrockGreen => stringify!(ShamrockGreen),
            Self::SheetMetal => stringify!(SheetMetal),
            Self::ShockingOrange => stringify!(ShockingOrange),
            Self::Sienna => stringify!(Sienna),
            Self::SilkBlue => stringify!(SilkBlue),
            Self::Silver => stringify!(Silver),
            Self::SilverPink => stringify!(SilverPink),
            Self::SilverWhite => stringify!(SilverWhite),
            Self::SkyBlueDress => stringify!(SkyBlueDress),
            Self::SkyBlue => stringify!(SkyBlue),
            Self::SlateBlueGray => stringify!(SlateBlueGray),
            Self::SlateGraniteGray => stringify!(SlateGraniteGray),
            Self::SlateBlue => stringify!(SlateBlue),
            Self::SlateGray => stringify!(SlateGray),
            Self::SlateGrey => stringify!(SlateGrey),
            Self::SlimeGreen => stringify!(SlimeGreen),
            Self::SmokeyGray => stringify!(SmokeyGray),
            Self::Snow => stringify!(Snow),
            Self::SoftHazel => stringify!(SoftHazel),
            Self::SoftIvory => stringify!(SoftIvory),
            Self::SoftPink => stringify!(SoftPink),
            Self::SonicSilver => stringify!(SonicSilver),
            Self::SpringGreen => stringify!(SpringGreen),
            Self::StainlessSteelGray => stringify!(StainlessSteelGray),
            Self::Steampunk => stringify!(Steampunk),
            Self::SteelGray => stringify!(SteelGray),
            Self::SteelBlue => stringify!(SteelBlue),
            Self::StoplightGoGreen => stringify!(StoplightGoGreen),
            Self::StormyGray => stringify!(StormyGray),
            Self::StrawberryRed => stringify!(StrawberryRed),
            Self::SunYellow => stringify!(SunYellow),
            Self::SunriseOrange => stringify!(SunriseOrange),
            Self::Tan => stringify!(Tan),
            Self::TanBrown => stringify!(TanBrown),
            Self::Tangerine => stringify!(Tangerine),
            Self::Taupe => stringify!(Taupe),
            Self::TeaGreen => stringify!(TeaGreen),
            Self::Teal => stringify!(Teal),
            Self::TealBlue => stringify!(TealBlue),
            Self::TealGreen => stringify!(TealGreen),
            Self::Thistle => stringify!(Thistle),
            Self::TiffanyBlue => stringify!(TiffanyBlue),
            Self::TigerOrange => stringify!(TigerOrange),
            Self::Tomato => stringify!(Tomato),
            Self::TomatoSauceRed => stringify!(TomatoSauceRed),
            Self::TronBlue => stringify!(TronBlue),
            Self::TulipPink => stringify!(TulipPink),
            Self::Turquoise => stringify!(Turquoise),
            Self::TurquoiseGreen => stringify!(TurquoiseGreen),
            Self::TyrianPurple => stringify!(TyrianPurple),
            Self::UnbleachedSilk => stringify!(UnbleachedSilk),
            Self::ValentineRed => stringify!(ValentineRed),
            Self::VampireGray => stringify!(VampireGray),
            Self::Vanilla => stringify!(Vanilla),
            Self::VelvetMaroon => stringify!(VelvetMaroon),
            Self::VenomGreen => stringify!(VenomGreen),
            Self::Vermilion => stringify!(Vermilion),
            Self::VeryPeri => stringify!(VeryPeri),
            Self::Viola => stringify!(Viola),
            Self::ViolaPurple => stringify!(ViolaPurple),
            Self::Violet => stringify!(Violet),
            Self::VioletRed => stringify!(VioletRed),
            Self::WarmPink => stringify!(WarmPink),
            Self::WarmWhite => stringify!(WarmWhite),
            Self::Water => stringify!(Water),
            Self::WatermelonPink => stringify!(WatermelonPink),
            Self::WesternCharcoal => stringify!(WesternCharcoal),
            Self::Wheat => stringify!(Wheat),
            Self::White => stringify!(White),
            Self::WhiteBlue => stringify!(WhiteBlue),
            Self::WhiteChocolate => stringify!(WhiteChocolate),
            Self::WhiteGold => stringify!(WhiteGold),
            Self::WhiteGray => stringify!(WhiteGray),
            Self::WhiteIce => stringify!(WhiteIce),
            Self::WhiteYellow => stringify!(WhiteYellow),
            Self::WhiteSmoke => stringify!(WhiteSmoke),
            Self::WindowsBlue => stringify!(WindowsBlue),
            Self::WineRed => stringify!(WineRed),
            Self::WisteriaPurple => stringify!(WisteriaPurple),
            Self::Wood => stringify!(Wood),
            Self::Yellow => stringify!(Yellow),
            Self::YellowGreenGrosbeak => stringify!(YellowGreenGrosbeak),
            Self::YellowLawnGreen => stringify!(YellowLawnGreen),
            Self::YellowOrange => stringify!(YellowOrange),
            Self::YellowGreen => stringify!(YellowGreen),
            Self::ZombieGreen => stringify!(ZombieGreen),
            Self::Rgb(r, g, b) => return format!("rgb({}, {}, {})", r, g, b),
        }
        .to_string()
    }
}
